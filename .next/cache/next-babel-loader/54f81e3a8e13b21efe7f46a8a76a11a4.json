{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// application\nconst url = {\n  // common\n  home: () => '/',\n  category: category => {\n    if (category.type === 'shop') {\n      return url.shopCategory(category);\n    } //  if (category.slug)\n    //      return category.slug;\n\n\n    return '/';\n  },\n  // shop pages\n  shop: () => '/catalog',\n  shopCategory: category => ({\n    href: `/catalog/[slug]${category.layout === 'products' ? '/products' : ''}?slug=${category.slug}`,\n    as: `/catalog/${category.slug}${category.layout === 'products' ? '/products' : ''}`\n  }),\n  products: ({\n    filters\n  } = {}) => ({\n    href: {\n      pathname: '/catalog/products',\n      query: _objectSpread({}, filters)\n    }\n  }),\n  product: product => ({\n    href: `/products/[slug]?slug=${product.slug}`,\n    as: `/products/${product.slug}`\n  }),\n  brand: brand => '/',\n  cart: () => '/cart',\n  checkout: () => '/cart/checkout',\n  checkoutSuccess: order => ({\n    href: `/cart/checkout/[token]?token=${order.token}`,\n    as: `/cart/checkout/${order.token}`\n  }),\n  wishlist: () => '/wishlist',\n  compare: () => '/compare',\n  trackOrder: () => '/track-order',\n  // blog pages\n  blog: () => '/demo/blog/classic-right-sidebar',\n  post: post => post.url,\n  // auth pages\n  signIn: () => '/account/login',\n  signUp: () => '/',\n  passwordRecovery: () => '/',\n  // account pages\n  accountDashboard: () => '/account/dashboard',\n  accountGarage: () => '/account/garage',\n  accountProfile: () => '/account/profile',\n  accountPassword: () => '/account/password',\n  accountOrders: () => '/account/orders',\n  accountOrderView: order => ({\n    href: `/account/orders/[id]?id=${order.id}`,\n    as: `/account/orders/${order.id}`\n  }),\n  accountAddresses: () => '/account/addresses',\n  accountAddressNew: () => ({\n    href: '/account/addresses/[id]?id=new',\n    as: '/account/addresses/new'\n  }),\n  accountAddressEdit: address => ({\n    href: `/account/addresses/[id]?id=${address.id}`,\n    as: `/account/addresses/${address.id}`\n  }),\n  // site pages\n  pageAboutUs: () => '/about-us',\n  pageContactUs: () => '/contact-us',\n  pageStoreLocation: () => '/',\n  pageTerms: () => '/terms'\n};\nexport default url;","map":null,"metadata":{},"sourceType":"module"}