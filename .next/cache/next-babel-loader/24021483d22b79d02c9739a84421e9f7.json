{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React, { useRef, useState } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport AppLink from '~/components/shared/AppLink';\nimport MobileLogo from '~/components/mobile/MobileLogo';\nimport url from '~/services/url';\nimport VehiclePickerModal from '~/components/shared/VehiclePickerModal';\nimport { useCart } from '~/store/cart/cartHooks';\nimport { useGarageCurrent, useGarageSetCurrent } from '~/store/garage/garageHooks';\nimport { useGlobalMousedown } from '~/services/hooks';\nimport { useMobileMenuOpen } from '~/store/mobile-menu/mobileMenuHooks';\nimport { useWishlist } from '~/store/wishlist/wishlistHooks';\nimport { Car20Svg, Cart20Svg, Cross20Svg, Heart20Svg, Menu18x14Svg, Person20Svg, Search20Svg } from '~/svg';\n\nfunction MobileHeader() {\n  const intl = useIntl();\n  const mobileMenuOpen = useMobileMenuOpen();\n  const wishlist = useWishlist();\n  const cart = useCart();\n  const vehicle = useGarageCurrent();\n  const garageSetCurrent = useGarageSetCurrent();\n  const searchFormRef = useRef(null);\n  const searchInputRef = useRef(null);\n  const searchIndicatorRef = useRef(null);\n  const {\n    0: searchIsOpen,\n    1: setSearchIsOpen\n  } = useState(false);\n  const {\n    0: vehiclePickerIsOpen,\n    1: setVehiclePickerIsOpen\n  } = useState(false);\n\n  const openSearch = () => {\n    setSearchIsOpen(true);\n\n    if (searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n  };\n\n  const closeSearch = () => {\n    setSearchIsOpen(false);\n  };\n\n  const openVehiclePicker = () => {\n    setVehiclePickerIsOpen(true);\n  };\n\n  const onVehiclePickerClose = () => {\n    setVehiclePickerIsOpen(false);\n\n    if (searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n  };\n\n  const onVehiclePickerSelect = selectedVehicle => {\n    garageSetCurrent((selectedVehicle === null || selectedVehicle === void 0 ? void 0 : selectedVehicle.id) || null);\n  };\n\n  const onSearchSubmit = event => {\n    event.preventDefault();\n  };\n\n  useGlobalMousedown(event => {\n    const outsideIndicator = searchIndicatorRef.current && !searchIndicatorRef.current.contains(event.target);\n    const outsideForm = searchFormRef.current && !searchFormRef.current.contains(event.target);\n\n    if (outsideIndicator && outsideForm) {\n      if (searchIsOpen && !vehiclePickerIsOpen) {\n        closeSearch();\n      }\n    }\n  }, [searchFormRef, searchIndicatorRef, searchIsOpen, vehiclePickerIsOpen]);\n  const searchPlaceholder = vehicle ? intl.formatMessage({\n    id: 'INPUT_SEARCH_PLACEHOLDER_VEHICLE'\n  }, vehicle) : intl.formatMessage({\n    id: 'INPUT_SEARCH_PLACEHOLDER'\n  });\n  return __jsx(\"div\", {\n    className: \"mobile-header\"\n  }, __jsx(VehiclePickerModal, {\n    value: vehicle,\n    isOpen: vehiclePickerIsOpen,\n    onClose: onVehiclePickerClose,\n    onSelect: onVehiclePickerSelect\n  }), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"mobile-header__body\"\n  }, __jsx(\"button\", {\n    className: \"mobile-header__menu-button\",\n    type: \"button\",\n    onClick: mobileMenuOpen\n  }, __jsx(Menu18x14Svg, null)), __jsx(AppLink, {\n    href: url.home(),\n    className: \"mobile-header__logo\"\n  }, __jsx(MobileLogo, null)), __jsx(\"div\", {\n    ref: searchFormRef,\n    className: classNames('mobile-header__search mobile-search', {\n      'mobile-header__search--open': searchIsOpen\n    })\n  }, __jsx(\"form\", {\n    className: \"mobile-search__body\",\n    onSubmit: onSearchSubmit\n  }, __jsx(\"label\", {\n    className: \"sr-only\",\n    htmlFor: \"mobile-site-search\"\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_SEARCH_LABEL\"\n  })), __jsx(\"input\", {\n    ref: searchInputRef,\n    type: \"text\",\n    id: \"mobile-site-search\",\n    className: \"mobile-search__input\",\n    placeholder: searchPlaceholder\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: \"mobile-search__vehicle-picker\",\n    onClick: openVehiclePicker\n  }, __jsx(Car20Svg, null), __jsx(\"span\", {\n    className: \"mobile-search__vehicle-picker-label\"\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_SEARCH_SELECT_VEHICLE_MOBILE\"\n  }))), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"mobile-search__button mobile-search__button--search\"\n  }, __jsx(Search20Svg, null)), __jsx(\"button\", {\n    type: \"button\",\n    className: \"mobile-search__button mobile-search__button--close\",\n    onClick: closeSearch\n  }, __jsx(Cross20Svg, null)), __jsx(\"div\", {\n    className: \"mobile-search__field\"\n  }))), __jsx(\"div\", {\n    className: \"mobile-header__indicators\"\n  }, __jsx(\"div\", {\n    className: \"mobile-indicator d-md-none\",\n    ref: searchIndicatorRef\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"mobile-indicator__button\",\n    onClick: openSearch\n  }, __jsx(\"span\", {\n    className: \"mobile-indicator__icon\"\n  }, __jsx(Search20Svg, null)))), __jsx(\"div\", {\n    className: \"mobile-indicator d-none d-md-block\"\n  }, __jsx(AppLink, {\n    href: url.accountDashboard(),\n    className: \"mobile-indicator__button\"\n  }, __jsx(\"span\", {\n    className: \"mobile-indicator__icon\"\n  }, __jsx(Person20Svg, null)))), __jsx(\"div\", {\n    className: \"mobile-indicator d-none d-md-block\"\n  }, __jsx(AppLink, {\n    href: url.wishlist(),\n    className: \"mobile-indicator__button\"\n  }, __jsx(\"span\", {\n    className: \"mobile-indicator__icon\"\n  }, __jsx(Heart20Svg, null), wishlist.items.length > 0 && __jsx(\"span\", {\n    className: \"mobile-indicator__counter\"\n  }, wishlist.items.length)))), __jsx(\"div\", {\n    className: \"mobile-indicator\"\n  }, __jsx(AppLink, {\n    href: url.cart(),\n    className: \"mobile-indicator__button\"\n  }, __jsx(\"span\", {\n    className: \"mobile-indicator__icon\"\n  }, __jsx(Cart20Svg, null), cart.quantity > 0 && __jsx(\"span\", {\n    className: \"mobile-indicator__counter\"\n  }, cart.quantity))))))));\n}\n\nexport default React.memo(MobileHeader);","map":null,"metadata":{},"sourceType":"module"}