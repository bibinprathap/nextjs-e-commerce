{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// application\nimport { CURRENCY_CHANGE } from '~/store/currency/currencyActionTypes';\nimport { withClientState } from '~/store/client'; // data\n\nimport { dataShopDefaultCurrency } from '~/data/shopCurrencies';\nconst initialState = {\n  current: dataShopDefaultCurrency\n};\nexport const CURRENCY_NAMESPACE = 'currency';\n\nfunction currencyBaseReducer(state = initialState, action) {\n  if (action.type === CURRENCY_CHANGE && state.current.code !== action.currency.code) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      current: JSON.parse(JSON.stringify(action.currency))\n    });\n  }\n\n  return state;\n}\n\nconst currencyReducer = withClientState(currencyBaseReducer, CURRENCY_NAMESPACE);\nexport default currencyReducer;","map":null,"metadata":{},"sourceType":"module"}