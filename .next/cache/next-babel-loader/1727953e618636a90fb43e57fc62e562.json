{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport AppLink from '~/components/shared/AppLink';\n\nfunction MegamenuLinks(props) {\n  const {\n    links,\n    level = 0,\n    onItemClick,\n    className\n  } = props,\n        rootProps = _objectWithoutProperties(props, [\"links\", \"level\", \"onItemClick\", \"className\"]);\n\n  const rootClasses = classNames('megamenu-links', className, {\n    'megamenu-links--root': level === 0\n  });\n  return __jsx(\"ul\", _extends({\n    className: rootClasses\n  }, rootProps), links.map((link, linkIndex) => {\n    var _link$customFields;\n\n    const subLinks = link.links || [];\n    const hasSubLinks = subLinks.length > 0;\n    const linkClasses = classNames('megamenu-links__item', {\n      'megamenu-links__item--has-submenu': link.links\n    });\n    return __jsx(\"li\", {\n      className: linkClasses,\n      key: linkIndex\n    }, __jsx(AppLink, _extends({\n      className: \"megamenu-links__item-link\",\n      href: link.url,\n      onClick: () => onItemClick && onItemClick(link)\n    }, (_link$customFields = link.customFields) === null || _link$customFields === void 0 ? void 0 : _link$customFields.anchorProps), link.title), hasSubLinks && __jsx(MegamenuLinks, {\n      links: subLinks,\n      onItemClick: onItemClick,\n      level: level + 1\n    }));\n  }));\n}\n\nexport default React.memo(MegamenuLinks);","map":null,"metadata":{},"sourceType":"module"}