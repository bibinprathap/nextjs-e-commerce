{"ast":null,"code":"// application\nimport { clone, delayResponse, error } from '~/fake-server/utils';\nimport { userVehicles, vehicles } from '~/fake-server/database/vehicles';\nexport function getYears() {\n  const result = [];\n  vehicles.forEach(vehicle => {\n    if (result.indexOf(vehicle.year) === -1) {\n      result.push(vehicle.year);\n    }\n  });\n  return delayResponse(Promise.resolve(result.sort()), 750);\n}\nexport function getMakes(year) {\n  const result = [];\n  vehicles.filter(x => x.year === year).forEach(vehicle => {\n    if (result.indexOf(vehicle.make) === -1) {\n      result.push(vehicle.make);\n    }\n  });\n  return delayResponse(Promise.resolve(result.sort()), 750);\n}\nexport function getModels(year, make) {\n  const result = [];\n  vehicles.filter(x => x.year === year && x.make === make).forEach(vehicle => {\n    if (result.indexOf(vehicle.model) === -1) {\n      result.push(vehicle.model);\n    }\n  });\n  return delayResponse(Promise.resolve(result.sort()), 750);\n}\nexport function getVehicles(year, make, model) {\n  const result = vehicles.filter(x => x.year === year && x.make === make && x.model === model);\n  return delayResponse(Promise.resolve(result.sort()), 750);\n}\nexport function getVehicleByVin(vin) {\n  const vinValue = vin.trim();\n  const vehicle = vehicles.find(x => x.model === 'Focus S');\n\n  if (vinValue === '' || vinValue === 'error' || !vehicle) {\n    return error('Page Not Found');\n  }\n\n  return Promise.resolve(vehicle);\n}\nexport function getUserVehicles() {\n  return Promise.resolve(clone(userVehicles));\n}\nexport function addUserVehicles(vehicleId) {\n  const index = userVehicles.findIndex(x => x.id === vehicleId);\n  const vehicle = vehicles.find(x => x.id === vehicleId);\n\n  if (vehicle && index === -1) {\n    userVehicles.push(vehicle);\n  }\n\n  return delayResponse(Promise.resolve());\n}\nexport function removeUserVehicles(vehicleId) {\n  const index = userVehicles.findIndex(x => x.id === vehicleId);\n\n  if (index !== -1) {\n    userVehicles.splice(index, 1);\n  }\n\n  return delayResponse(Promise.resolve());\n}","map":null,"metadata":{},"sourceType":"module"}