{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// application\nimport { withClientState } from '~/store/client';\nimport { COMPARE_ADD_ITEM, COMPARE_CLEAR, COMPARE_REMOVE_ITEM } from '~/store/compare/compareActionTypes';\n\nfunction addItem(state, product) {\n  var itemIndex = state.items.findIndex(function (x) {\n    return x.id === product.id;\n  });\n\n  if (itemIndex === -1) {\n    return {\n      items: [].concat(_toConsumableArray(state.items), [JSON.parse(JSON.stringify(product))])\n    };\n  }\n\n  return state;\n}\n\nfunction removeItem(state, productId) {\n  return {\n    items: state.items.filter(function (x) {\n      return x.id !== productId;\n    })\n  };\n}\n\nfunction clear(state) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    items: []\n  });\n}\n\nvar initialState = {\n  items: []\n};\nexport var COMPARE_NAMESPACE = 'compare';\n\nfunction compareBaseReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case COMPARE_ADD_ITEM:\n      return addItem(state, action.product);\n\n    case COMPARE_REMOVE_ITEM:\n      return removeItem(state, action.productId);\n\n    case COMPARE_CLEAR:\n      return clear(state);\n\n    default:\n      return state;\n  }\n}\n\nvar compareReducer = withClientState(compareBaseReducer, COMPARE_NAMESPACE);\nexport default compareReducer;","map":null,"metadata":{},"sourceType":"module"}