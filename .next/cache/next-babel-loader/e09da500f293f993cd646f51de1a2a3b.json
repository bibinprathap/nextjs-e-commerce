{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n// third-party\nimport queryString from 'query-string'; // application\n\nimport { shopInitThunk } from '~/store/shop/shopActions';\nexport function parseQueryOptions(query) {\n  var queryObject = queryString.parse(query);\n  var optionValues = {};\n\n  if (typeof queryObject.page === 'string') {\n    optionValues.page = parseFloat(queryObject.page);\n  }\n\n  if (typeof queryObject.limit === 'string') {\n    optionValues.limit = parseFloat(queryObject.limit);\n  }\n\n  if (typeof queryObject.sort === 'string') {\n    optionValues.sort = queryObject.sort;\n  }\n\n  return optionValues;\n}\nexport function parseQueryFilters(query) {\n  var queryObject = queryString.parse(query);\n  var filterValues = {};\n  Object.keys(queryObject).forEach(function (param) {\n    var value = queryObject[param];\n    var mr = param; //.match(/^filter_([-_A-Za-z0-9]+)$/);\n    // if (!mr || typeof value !== 'string') {\n    //     return;\n    // }\n\n    if (!mr || typeof value !== 'string') {\n      return;\n    }\n\n    var filterSlug = param;\n    filterValues[filterSlug] = value;\n  });\n  return filterValues;\n}\nexport function buildQuery(options, filters) {\n  var params = {};\n\n  if (options.page !== 1) {\n    params.page = options.page;\n  }\n\n  if (options.limit !== 12) {\n    params.limit = options.limit;\n  }\n\n  if (options.sort !== 'default') {\n    params.sort = options.sort;\n  }\n\n  Object.keys(filters).filter(function (x) {\n    return x !== 'category' && !!filters[x];\n  }).forEach(function (filterSlug) {\n    if (filterSlug.indexOf('filter_') == -1) params[\"filter_\".concat(filterSlug)] = filters[filterSlug];\n  });\n  return queryString.stringify(params, {\n    encode: false\n  });\n}\nexport default function getShopPageData(_x, _x2, _x3) {\n  return _getShopPageData.apply(this, arguments);\n}\n\nfunction _getShopPageData() {\n  _getShopPageData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context, slug, productsList) {\n    var _context$params;\n\n    var categorySlug, query, options, filters, dispatch;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            categorySlug = slug || (typeof ((_context$params = context.params) === null || _context$params === void 0 ? void 0 : _context$params.slug) === 'string' ? context.params.slug : null);\n\n            if (!(typeof context.req.url === 'string')) {\n              _context.next = 8;\n              break;\n            }\n\n            query = queryString.stringify(queryString.parseUrl(context.req.url).query);\n            options = parseQueryOptions(query);\n            filters = parseQueryFilters(query);\n            dispatch = context.store.dispatch;\n            _context.next = 8;\n            return dispatch(shopInitThunk(categorySlug, options, filters, productsList));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getShopPageData.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}