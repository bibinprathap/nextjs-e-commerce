{"ast":null,"code":"// application\nimport { isArrayOfNumbers, isArrayOfStrings } from '~/services/utils';\n\nfunction isRangeFilterValue(value) {\n  if (!Array.isArray(value) || value.length !== 2) {\n    return false;\n  }\n\n  return !(typeof value[0] !== 'number' || typeof value[1] !== 'number');\n}\n\nfunction isCheckFilterValue(value) {\n  return isArrayOfStrings(value);\n}\n\nfunction isRadioFilterValue(value) {\n  return value === null || typeof value === 'string';\n}\n\nfunction isColorFilterValue(value) {\n  return isArrayOfStrings(value);\n}\n\nfunction isRatingFilterValue(value) {\n  return isArrayOfNumbers(value);\n}\n\nvar CheckFilterHandler = {\n  serialize: function serialize(value) {\n    if (!isCheckFilterValue(value)) {\n      throw Error('Provide a valid \"check\" filter value!');\n    }\n\n    return value.join(',');\n  },\n  deserialize: function deserialize(value) {\n    return value ? value.split(',') : [];\n  },\n  isDefaultValue: function isDefaultValue(filter, value) {\n    if (!isCheckFilterValue(value)) {\n      throw Error('Provide a valid \"check\" filter value!');\n    }\n\n    return value.length === 0;\n  },\n  getDefaultValue: function getDefaultValue() {\n    return [];\n  },\n  getActiveFilters: function getActiveFilters(filter) {\n    if (filter.type !== 'check') {\n      throw Error('Provide a \"check\" filter!');\n    }\n\n    if (CheckFilterHandler.isDefaultValue(filter, filter.value)) {\n      return [];\n    }\n\n    return filter.items.filter(function (x) {\n      return filter.value.includes(x.slug);\n    }).map(function (item) {\n      return {\n        id: \"\".concat(filter.slug, \"/\").concat(item.slug),\n        type: filter.type,\n        original: filter,\n        item: item\n      };\n    });\n  },\n  getResetValue: function getResetValue(activeFilters) {\n    var itemSlugs = activeFilters.map(function (x) {\n      return x.item.slug;\n    });\n    return CheckFilterHandler.serialize(activeFilters[0].original.value.filter(function (x) {\n      return !itemSlugs.includes(x);\n    }));\n  }\n};\nvar ColorFilterHandler = {\n  serialize: function serialize(value) {\n    if (!isColorFilterValue(value)) {\n      throw Error('Provide a valid \"color\" filter value!');\n    }\n\n    return value.join(',');\n  },\n  deserialize: function deserialize(value) {\n    return value ? value.split(',') : [];\n  },\n  isDefaultValue: function isDefaultValue(filter, value) {\n    if (!isColorFilterValue(value)) {\n      throw Error('Provide a valid \"check\" filter value!');\n    }\n\n    return value.length === 0;\n  },\n  getDefaultValue: function getDefaultValue() {\n    return [];\n  },\n  getActiveFilters: function getActiveFilters(filter) {\n    if (filter.type !== 'color') {\n      throw Error('Provide a \"color\" filter!');\n    }\n\n    if (ColorFilterHandler.isDefaultValue(filter, filter.value)) {\n      return [];\n    }\n\n    return filter.items.filter(function (x) {\n      return filter.value.includes(x.slug);\n    }).map(function (item) {\n      return {\n        id: \"\".concat(filter.slug, \"/\").concat(item.slug),\n        type: filter.type,\n        original: filter,\n        item: item\n      };\n    });\n  },\n  getResetValue: function getResetValue(activeFilters) {\n    var itemSlugs = activeFilters.map(function (x) {\n      return x.item.slug;\n    });\n    return ColorFilterHandler.serialize(activeFilters[0].original.value.filter(function (x) {\n      return !itemSlugs.includes(x);\n    }));\n  }\n};\nvar RadioFilterHandler = {\n  serialize: function serialize(value) {\n    if (!isRadioFilterValue(value)) {\n      throw Error('Provide a valid \"radio\" filter value!');\n    }\n\n    return value === null ? '' : value;\n  },\n  deserialize: function deserialize(value) {\n    return value;\n  },\n  isDefaultValue: function isDefaultValue(filter, value) {\n    if (!isRadioFilterValue(value)) {\n      throw Error('Provide a valid \"radio\" filter value!');\n    }\n\n    return RadioFilterHandler.getDefaultValue(filter) === value;\n  },\n  getDefaultValue: function getDefaultValue(filter) {\n    if (filter.type !== 'radio') {\n      throw Error('Provide a \"radio\" filter!');\n    }\n\n    return filter.items[0].slug;\n  },\n  getActiveFilters: function getActiveFilters(filter) {\n    if (filter.type !== 'radio') {\n      throw Error('Provide a \"radio\" filter!');\n    }\n\n    if (RadioFilterHandler.isDefaultValue(filter, filter.value)) {\n      return [];\n    }\n\n    return [{\n      id: filter.slug,\n      type: filter.type,\n      original: filter,\n      item: filter.items.find(function (x) {\n        return x.slug === filter.value;\n      })\n    }];\n  },\n  getResetValue: function getResetValue(activeFilters) {\n    return activeFilters[0].original.items[0].slug;\n  }\n};\nvar RangeFilterHandler = {\n  serialize: function serialize(value) {\n    if (!isRangeFilterValue(value)) {\n      throw Error('Provide a valid \"range\" filter value!');\n    }\n\n    return value.join('-');\n  },\n  deserialize: function deserialize(value) {\n    return value ? value.split('-').map(parseFloat) : undefined;\n  },\n  isDefaultValue: function isDefaultValue(filter, value) {\n    if (filter.type !== 'range') {\n      throw Error('Provide a \"range\" filter!');\n    }\n\n    if (!isRangeFilterValue(value)) {\n      throw Error('Provide a valid \"range\" filter value!');\n    }\n\n    return filter.min === value[0] && filter.max === value[1];\n  },\n  getDefaultValue: function getDefaultValue(filter) {\n    if (filter.type !== 'range') {\n      throw Error('Provide a \"range\" filter!');\n    }\n\n    return [filter.min, filter.max];\n  },\n  getActiveFilters: function getActiveFilters(filter) {\n    if (filter.type !== 'range') {\n      throw Error('Provide a \"range\" filter!');\n    }\n\n    if (RangeFilterHandler.isDefaultValue(filter, filter.value)) {\n      return [];\n    }\n\n    return [{\n      id: filter.slug,\n      type: filter.type,\n      original: filter\n    }];\n  },\n  getResetValue: function getResetValue(activeFilters) {\n    return RangeFilterHandler.serialize([activeFilters[0].original.min, activeFilters[0].original.max]);\n  }\n};\nvar RatingFilterHandler = {\n  serialize: function serialize(value) {\n    if (!isRatingFilterValue(value)) {\n      throw Error('Provide a valid \"check\" filter value!');\n    }\n\n    return value.join(',');\n  },\n  deserialize: function deserialize(value) {\n    return value ? value.split(',').map(parseFloat) : [];\n  },\n  isDefaultValue: function isDefaultValue(filter, value) {\n    if (!isRatingFilterValue(value)) {\n      throw Error('Provide a valid \"check\" filter value!');\n    }\n\n    return value.length === 0;\n  },\n  getDefaultValue: function getDefaultValue() {\n    return [];\n  },\n  getActiveFilters: function getActiveFilters(filter) {\n    if (filter.type !== 'rating') {\n      throw Error('Provide a \"rating\" filter!');\n    }\n\n    if (RatingFilterHandler.isDefaultValue(filter, filter.value)) {\n      return [];\n    }\n\n    return filter.items.filter(function (x) {\n      return filter.value.includes(x.rating);\n    }).map(function (item) {\n      return {\n        id: \"\".concat(filter.slug, \"/\").concat(item.rating),\n        type: 'rating',\n        original: filter,\n        item: item\n      };\n    });\n  },\n  getResetValue: function getResetValue(activeFilters) {\n    var itemSlugs = activeFilters.map(function (x) {\n      return x.item.rating;\n    });\n    return RatingFilterHandler.serialize(activeFilters[0].original.value.filter(function (x) {\n      return !itemSlugs.includes(x);\n    }));\n  }\n};\nvar VehicleFilterHandler = {\n  serialize: function serialize(value) {\n    return value === null ? '' : value.toString();\n  },\n  deserialize: function deserialize(value) {\n    return value === '' ? null : parseFloat(value);\n  },\n  isDefaultValue: function isDefaultValue(filter, value) {\n    return value === null;\n  },\n  getDefaultValue: function getDefaultValue() {\n    return null;\n  },\n  getActiveFilters: function getActiveFilters(filter) {\n    if (filter.type !== 'vehicle') {\n      throw Error('Provide a \"vehicle\" filter!');\n    }\n\n    return filter.value ? [{\n      id: filter.slug,\n      type: 'vehicle',\n      original: filter\n    }] : [];\n  },\n  getResetValue: function getResetValue() {\n    return null;\n  }\n};\n\nfunction getFilterHandler(filter) {\n  switch (filter.type) {\n    case 'check':\n      return CheckFilterHandler;\n\n    case 'color':\n      return ColorFilterHandler;\n\n    case 'radio':\n      return RadioFilterHandler;\n\n    case 'range':\n      return RangeFilterHandler;\n\n    case 'rating':\n      return RatingFilterHandler;\n\n    case 'vehicle':\n      return VehicleFilterHandler;\n\n    default:\n      return null;\n  }\n}\n\nfunction getExistsFilterHandler(filter) {\n  var handler = getFilterHandler(filter);\n\n  if (!handler) {\n    throw Error('Unhandled filter type!');\n  }\n\n  return handler;\n}\n\nexport function hasHandler(filter) {\n  return getFilterHandler(filter) !== null;\n}\nexport function isDefaultFilterValue(filter, value) {\n  return getExistsFilterHandler(filter).isDefaultValue(filter, value);\n}\nexport function getFilterDefaultValue(filter) {\n  return getExistsFilterHandler(filter).getDefaultValue(filter);\n}\nexport function serializeFilterValue(filter, value) {\n  return getExistsFilterHandler(filter).serialize(value);\n}\nexport function deserializeFilterValue(filter, value) {\n  return getExistsFilterHandler(filter).deserialize(value);\n}\nexport function getFilterValue(filter, currentSerializedValue) {\n  return deserializeFilterValue(filter, currentSerializedValue) || getFilterDefaultValue(filter);\n}\nexport function getActiveFilters(filter) {\n  return getExistsFilterHandler(filter).getActiveFilters(filter);\n}\nexport function getResetValue(activeFilters) {\n  return getExistsFilterHandler(activeFilters[0].original).getResetValue(activeFilters);\n}","map":null,"metadata":{},"sourceType":"module"}