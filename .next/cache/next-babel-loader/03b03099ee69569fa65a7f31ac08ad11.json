{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable import/prefer-default-export,class-methods-use-this */\n// application\nimport { BlogApi } from '~/api/base';\nimport { getBlogCategories, getLatestPosts as _getLatestPosts } from '~/fake-server/endpoints';\nexport var FakeBlogApi = /*#__PURE__*/function (_BlogApi) {\n  _inherits(FakeBlogApi, _BlogApi);\n\n  var _super = _createSuper(FakeBlogApi);\n\n  function FakeBlogApi() {\n    _classCallCheck(this, FakeBlogApi);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FakeBlogApi, [{\n    key: \"getLatestPosts\",\n    value: function getLatestPosts(limit) {\n      return _getLatestPosts(limit);\n    }\n  }, {\n    key: \"getCategories\",\n    value: function getCategories(options) {\n      return getBlogCategories(options);\n    }\n  }]);\n\n  return FakeBlogApi;\n}(BlogApi);","map":null,"metadata":{},"sourceType":"module"}