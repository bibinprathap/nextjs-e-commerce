{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React, { useEffect, useRef } from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport Breadcrumb from '~/components/shared/Breadcrumb';\nimport { useMedia } from '~/store/hooks';\n\nfunction BlockHeader(props) {\n  var pageTitle = props.pageTitle,\n      _props$breadcrumb = props.breadcrumb,\n      breadcrumb = _props$breadcrumb === void 0 ? [] : _props$breadcrumb,\n      _props$afterHeader = props.afterHeader,\n      afterHeader = _props$afterHeader === void 0 ? true : _props$afterHeader;\n  var hasPageTitle = !!pageTitle;\n  var hasBreadcrumb = breadcrumb.length > 0;\n  var elementRef = useRef(null);\n  var titleElementRef = useRef(null);\n  var titleVisible = useMedia('(min-width: 1200px)');\n\n  var calcTitleWidth = function calcTitleWidth() {\n    // So that breadcrumbs correctly flow around the page title, we need to know its width.\n    // This code simply conveys the width of the page title in CSS.\n    if (!elementRef.current || !titleElementRef.current) {\n      return;\n    }\n\n    var _titleElementRef$curr = titleElementRef.current.getBoundingClientRect(),\n        width = _titleElementRef$curr.width;\n\n    elementRef.current.style.setProperty('--block-header-title-width', \"\".concat(width, \"px\"));\n  };\n\n  useEffect(function () {\n    if (titleVisible) {\n      calcTitleWidth();\n    }\n  }, [pageTitle, titleVisible]);\n  var rootClasses = classNames('block-header', {\n    'block-header--has-title': hasPageTitle,\n    'block-header--has-breadcrumb': hasBreadcrumb\n  });\n  return __jsx(\"div\", {\n    className: rootClasses,\n    ref: elementRef\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"block-header__body\"\n  }, hasBreadcrumb && __jsx(Breadcrumb, {\n    className: \"block-header__breadcrumb\",\n    items: breadcrumb,\n    withPageTitle: hasPageTitle,\n    afterHeader: afterHeader\n  }), hasPageTitle && __jsx(\"h1\", {\n    className: \"block-header__title\",\n    ref: titleElementRef\n  }, pageTitle))));\n}\n\nexport default BlockHeader;","map":null,"metadata":{},"sourceType":"module"}