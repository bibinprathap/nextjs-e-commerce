{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport AppImageNew from '~/components/shared/AppImageNew';\nimport AppLink from '~/components/shared/AppLink';\nimport AsyncAction from '~/components/shared/AsyncAction';\nimport CompatibilityStatusBadge from '~/components/shared/CompatibilityStatusBadge';\nimport CurrencyFormat from '~/components/shared/CurrencyFormat';\nimport Rating from '~/components/shared/Rating';\nimport url from '~/services/url';\nimport { useCartAddItem } from '~/store/cart/cartHooks';\nimport { useCompareAddItem } from '~/store/compare/compareHooks';\nimport { useQuickviewOpen } from '~/store/quickview/quickviewHooks';\nimport { useWishlistAddItem } from '~/store/wishlist/wishlistHooks';\nimport { Cart20Svg, Compare16Svg, Quickview16Svg, Wishlist16Svg } from '~/svg';\n\nfunction ProductCard(props) {\n  var product = props.product,\n      layout = props.layout,\n      _props$exclude = props.exclude,\n      exclude = _props$exclude === void 0 ? [] : _props$exclude,\n      className = props.className,\n      rootProps = _objectWithoutProperties(props, [\"product\", \"layout\", \"exclude\", \"className\"]);\n\n  var intl = useIntl();\n  var featuredAttributes = product.attributes.filter(function (x) {\n    return x.featured;\n  });\n  var cartAddItem = useCartAddItem();\n  var quickviewOpen = useQuickviewOpen();\n  var compareAddItem = useCompareAddItem();\n  var wishlistAddItem = useWishlistAddItem();\n\n  var showQuickview = function showQuickview() {\n    return quickviewOpen(product.slug);\n  };\n\n  var addToWishlist = function addToWishlist() {\n    return wishlistAddItem(product);\n  };\n\n  var addToCompare = function addToCompare() {\n    return compareAddItem(product);\n  };\n\n  var rootClasses = classNames('product-card', className, _defineProperty({}, \"product-card--layout--\".concat(layout), layout));\n  return __jsx(\"div\", _extends({\n    className: rootClasses\n  }, rootProps), __jsx(\"div\", {\n    className: \"product-card__actions-list\"\n  }, __jsx(AsyncAction, {\n    action: function action() {\n      return showQuickview();\n    },\n    render: function render(_ref) {\n      var run = _ref.run,\n          loading = _ref.loading;\n      return __jsx(\"button\", {\n        type: \"button\",\n        className: classNames('product-card__action product-card__action--quickview', {\n          'product-card__action--loading': loading\n        }),\n        \"aria-label\": intl.formatMessage({\n          id: 'BUTTON_QUICKVIEW'\n        }),\n        onClick: run\n      }, __jsx(Quickview16Svg, null));\n    }\n  }), !exclude.includes('actions') && __jsx(React.Fragment, null, __jsx(AsyncAction, {\n    action: function action() {\n      return addToWishlist();\n    },\n    render: function render(_ref2) {\n      var run = _ref2.run,\n          loading = _ref2.loading;\n      return __jsx(\"button\", {\n        type: \"button\",\n        className: classNames('product-card__action product-card__action--wishlist', {\n          'product-card__action--loading': loading\n        }),\n        \"aria-label\": intl.formatMessage({\n          id: 'BUTTON_ADD_TO_WISHLIST'\n        }),\n        onClick: run\n      }, __jsx(Wishlist16Svg, null));\n    }\n  }), __jsx(AsyncAction, {\n    action: function action() {\n      return addToCompare();\n    },\n    render: function render(_ref3) {\n      var run = _ref3.run,\n          loading = _ref3.loading;\n      return __jsx(\"button\", {\n        type: \"button\",\n        className: classNames('product-card__action product-card__action--compare', {\n          'product-card__action--loading': loading\n        }),\n        \"aria-label\": intl.formatMessage({\n          id: 'BUTTON_ADD_TO_COMPARE'\n        }),\n        onClick: run\n      }, __jsx(Compare16Svg, null));\n    }\n  }))), __jsx(\"div\", {\n    className: \"product-card__image\"\n  }, __jsx(\"div\", {\n    className: \"image image--type--product\"\n  }, __jsx(AppLink, {\n    href: url.product(product),\n    className: \"image__body\"\n  }, product.images && __jsx(AppImageNew, {\n    className: \"image__tag\",\n    src: product.images[0]\n  }))), !exclude.includes('status-badge') && __jsx(CompatibilityStatusBadge, {\n    className: \"product-card__fit\",\n    product: product\n  })), __jsx(\"div\", {\n    className: \"product-card__info\"\n  }, !exclude.includes('meta') && __jsx(\"div\", {\n    className: \"product-card__meta\"\n  }, __jsx(\"span\", {\n    className: \"product-card__meta-title\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_SKU\"\n  }), ': '), product.sku), __jsx(\"div\", {\n    className: \"product-card__name\"\n  }, product.badges && product.badges.length > 0 && __jsx(\"div\", {\n    className: \"product-card__badges\"\n  }, product.badges.map(function (badge) {\n    return __jsx(\"div\", {\n      key: badge,\n      className: \"tag-badge tag-badge--\".concat(badge)\n    }, badge);\n  })), __jsx(AppLink, {\n    href: url.product(product)\n  }, product.name)), __jsx(\"div\", {\n    className: \"product-card__rating\"\n  }, __jsx(Rating, {\n    className: \"product-card__rating-stars\",\n    value: product.rating || 0\n  }), __jsx(\"div\", {\n    className: \" product-card__rating-label\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_RATING_LABEL\",\n    values: {\n      rating: product.rating,\n      reviews: product.reviews\n    }\n  }))), !exclude.includes('features') && featuredAttributes.length > 0 && __jsx(\"div\", {\n    className: \"product-card__features\"\n  }, __jsx(\"ul\", null, featuredAttributes.map(function (attribute, index) {\n    return __jsx(\"li\", {\n      key: index\n    }, attribute.name, ': ', attribute.values.map(function (x) {\n      return x.name;\n    }).join(', '));\n  })))), __jsx(\"div\", {\n    className: \"product-card__footer\"\n  }, __jsx(\"div\", {\n    className: \"product-card__prices\"\n  }, product.compareAtPrice !== null && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"product-card__price product-card__price--new\"\n  }, __jsx(CurrencyFormat, {\n    value: product.price\n  })), __jsx(\"div\", {\n    className: \"product-card__price product-card__price--old\"\n  }, __jsx(CurrencyFormat, {\n    value: product.compareAtPrice\n  }))), product.compareAtPrice === null && __jsx(\"div\", {\n    className: \"product-card__price product-card__price--current\"\n  }, __jsx(CurrencyFormat, {\n    value: product.price\n  }))), !exclude.includes('buttons') && __jsx(React.Fragment, null, __jsx(AsyncAction, {\n    action: function action() {\n      return cartAddItem(product);\n    },\n    render: function render(_ref4) {\n      var run = _ref4.run,\n          loading = _ref4.loading;\n      return __jsx(\"button\", {\n        type: \"button\",\n        className: classNames('product-card__addtocart-icon', {\n          'product-card__addtocart-icon--loading': loading\n        }),\n        \"aria-label\": intl.formatMessage({\n          id: 'BUTTON_ADD_TO_CART'\n        }),\n        onClick: run\n      }, __jsx(Cart20Svg, null));\n    }\n  }), !exclude.includes('list-buttons') && __jsx(React.Fragment, null, __jsx(AsyncAction, {\n    action: function action() {\n      return cartAddItem(product);\n    },\n    render: function render(_ref5) {\n      var run = _ref5.run,\n          loading = _ref5.loading;\n      return __jsx(\"button\", {\n        type: \"button\",\n        className: classNames('product-card__addtocart-full', {\n          'product-card__addtocart-full--loading': loading\n        }),\n        onClick: run\n      }, __jsx(FormattedMessage, {\n        id: \"BUTTON_ADD_TO_CART\"\n      }));\n    }\n  }), __jsx(AsyncAction, {\n    action: function action() {\n      return addToWishlist();\n    },\n    render: function render(_ref6) {\n      var run = _ref6.run,\n          loading = _ref6.loading;\n      return __jsx(\"button\", {\n        type: \"button\",\n        className: classNames('product-card__wishlist', {\n          'product-card__wishlist--loading': loading\n        }),\n        onClick: run\n      }, __jsx(Wishlist16Svg, null), __jsx(\"span\", null, __jsx(FormattedMessage, {\n        id: \"BUTTON_ADD_TO_WISHLIST\"\n      })));\n    }\n  }), __jsx(AsyncAction, {\n    action: function action() {\n      return addToCompare();\n    },\n    render: function render(_ref7) {\n      var run = _ref7.run,\n          loading = _ref7.loading;\n      return __jsx(\"button\", {\n        type: \"button\",\n        className: classNames('product-card__compare', {\n          'product-card__compare--loading': loading\n        }),\n        onClick: run\n      }, __jsx(Compare16Svg, null), __jsx(\"span\", null, __jsx(FormattedMessage, {\n        id: \"BUTTON_ADD_TO_COMPARE\"\n      })));\n    }\n  })))));\n}\n\nexport default React.memo(ProductCard);","map":null,"metadata":{},"sourceType":"module"}