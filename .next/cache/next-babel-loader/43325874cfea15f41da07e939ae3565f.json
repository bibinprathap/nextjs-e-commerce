{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React, { useMemo } from 'react'; // third-party\n\nimport { useIntl } from 'react-intl'; // application\n\nimport StatusBadge from '~/components/shared/StatusBadge';\nimport { useCurrentVehicle } from '~/services/current-vehicle';\n\nfunction CompatibilityStatusBadge(props) {\n  const {\n    product,\n    className\n  } = props;\n  const intl = useIntl();\n  const [currentVehicle] = useCurrentVehicle();\n  const compatibility = useMemo(() => {\n    if (!currentVehicle) {\n      return null;\n    }\n\n    if (product.compatibility === 'all') {\n      return 'all';\n    }\n\n    if (product.compatibility === 'unknown') {\n      return 'unknown';\n    }\n\n    if (product.compatibility.includes(currentVehicle.id)) {\n      return 'fit';\n    }\n\n    return 'not-fit';\n  }, [product, currentVehicle]);\n\n  if (!compatibility || !currentVehicle) {\n    return null;\n  }\n\n  const compatibilityToTypeMap = {\n    all: 'unknown',\n    fit: 'success',\n    'not-fit': 'failure',\n    unknown: 'warning'\n  };\n  const compatibilityToIconMap = {\n    all: 'success',\n    fit: 'success',\n    'not-fit': 'failure',\n    unknown: 'failure'\n  };\n  const compatibilityToTextMap = {\n    all: intl.formatMessage({\n      id: 'TEXT_COMPATIBILITY_ALL'\n    }, currentVehicle),\n    fit: intl.formatMessage({\n      id: 'TEXT_COMPATIBILITY_FIT'\n    }, currentVehicle),\n    'not-fit': intl.formatMessage({\n      id: 'TEXT_COMPATIBILITY_NOT_FIT'\n    }, currentVehicle),\n    unknown: intl.formatMessage({\n      id: 'TEXT_COMPATIBILITY_UNKNOWN'\n    }, currentVehicle)\n  };\n  return __jsx(StatusBadge, {\n    type: compatibilityToTypeMap[compatibility],\n    icon: compatibilityToIconMap[compatibility],\n    text: compatibilityToTextMap[compatibility],\n    tooltip: compatibilityToTextMap[compatibility],\n    className: className\n  });\n}\n\nexport default CompatibilityStatusBadge;","map":null,"metadata":{},"sourceType":"module"}