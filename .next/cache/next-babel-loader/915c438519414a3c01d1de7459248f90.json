{"ast":null,"code":"/**\n * https://medium.muz.li/the-science-of-color-contrast-an-expert-designers-guide-33e84c41d156\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html\n * https://www.w3.org/TR/WCAG20/#relativeluminancedef\n */\nexport function hexToRgb(hex) {\n  if (!/^#(([A-Fa-f0-9]{3}){1,2})$/.test(hex)) {\n    throw Error('Invalid color');\n  }\n\n  var color = hex.substr(1);\n  var rgb;\n\n  if (color.length === 3) {\n    var mr = color.match(/./g);\n\n    if (!mr) {\n      throw Error('Invalid color');\n    }\n\n    rgb = mr.map(function (x) {\n      return x + x;\n    });\n  } else {\n    var _mr = color.match(/.{2}/g);\n\n    if (!_mr) {\n      throw Error('Invalid color');\n    }\n\n    rgb = _mr;\n  }\n\n  return rgb.map(function (x) {\n    return parseInt(x, 16);\n  });\n}\nexport function luminance(color) {\n  var rgb = hexToRgb(color);\n  rgb = rgb.map(function (x) {\n    return x / 255;\n  }).map(function (x) {\n    if (x <= 0.03928) {\n      return x / 12.92;\n    }\n\n    return Math.pow((x + 0.055) / 1.055, 2.4);\n  });\n  return 0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2];\n}\nexport function contrast(color1, color2) {\n  var l1 = luminance(color1);\n  var l2 = luminance(color2);\n  return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\n}\nvar cache = {};\nexport function colorType(color) {\n  if (color in cache) {\n    return cache[color];\n  }\n\n  var whiteContras = contrast(color, '#fff');\n  var blackContras = contrast(color, '#000');\n  var result;\n\n  if (whiteContras === 1 && blackContras === 21) {\n    result = 'white';\n  } else if (whiteContras === 21 && blackContras === 1) {\n    result = 'black';\n  } else if (whiteContras >= 3 && blackContras < 10) {\n    result = 'dark';\n  } else {\n    result = 'light';\n  }\n\n  cache[color] = result;\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}