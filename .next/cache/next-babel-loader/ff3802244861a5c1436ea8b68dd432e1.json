{"ast":null,"code":"// react\nimport { useEffect, useRef, useState } from 'react';\n\nfunction AsyncAction(props) {\n  var action = props.action,\n      render = props.render;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var canceledRef = useRef(false);\n\n  var run = function run() {\n    if (loading || !action) {\n      return;\n    }\n\n    setLoading(true);\n    action().then(function () {\n      if (canceledRef.current) {\n        return;\n      }\n\n      setLoading(false);\n    });\n  };\n\n  useEffect(function () {\n    return function () {\n      canceledRef.current = true;\n    };\n  }, [canceledRef]);\n\n  if (render) {\n    return render({\n      run: run,\n      loading: loading\n    });\n  }\n\n  return null;\n}\n\nexport default AsyncAction;","map":null,"metadata":{},"sourceType":"module"}