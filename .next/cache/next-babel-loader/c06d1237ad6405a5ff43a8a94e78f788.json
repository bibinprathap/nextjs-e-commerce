{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable import/prefer-default-export */\n// react\nimport { useMemo } from 'react'; // third-party\n\nimport { useRouter } from 'next/router';\n// application\nimport { getDefaultLocale } from '~/services/i18n/utils';\nimport { normalizeHref, normalizeLinkHref } from '~/components/shared/AppLink';\nimport { useLocale } from '~/services/i18n/hooks';\nexport function hrefToRouterArgs(linkHref) {\n  var _normalizeLinkHref = normalizeLinkHref(linkHref),\n      href = _normalizeLinkHref.href,\n      as = _normalizeLinkHref.as,\n      shallow = _normalizeLinkHref.shallow;\n\n  return [href, as, {\n    shallow: shallow\n  }];\n}\n\nfunction normalizeRouterArgs(args, locale) {\n  var _args = _slicedToArray(args, 3),\n      url = _args[0],\n      as = _args[1],\n      options = _args[2];\n\n  var normalizedUrl = normalizeHref(url);\n  var normalizedAs = normalizeHref(as || url);\n  normalizedUrl.query = _objectSpread({}, normalizedUrl.query);\n  normalizedAs.pathname = locale === getDefaultLocale() ? normalizedAs.pathname : \"/\".concat(locale).concat(normalizedAs.pathname);\n  return [normalizedUrl, normalizedAs, options];\n}\n\nexport function useOriginalRouter() {\n  return useRouter();\n}\nexport function useAppRouter() {\n  var original = useRouter();\n  var locale = useLocale();\n  var mimic = useMemo(function () {\n    return {\n      push: function push() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return original.push.apply(original, _toConsumableArray(normalizeRouterArgs(args, locale)));\n      },\n      replace: function replace() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return original.replace.apply(original, _toConsumableArray(normalizeRouterArgs(args, locale)));\n      }\n    };\n  }, [original, locale]);\n  return useMemo(function () {\n    return Object.setPrototypeOf(mimic, original);\n  }, [mimic, original]);\n}","map":null,"metadata":{},"sourceType":"module"}