{"ast":null,"code":"// third-party\nimport { toast } from 'react-toastify'; // application\n\nimport { globalIntl } from '~/services/i18n/global-intl';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_UPDATE_QUANTITIES } from '~/store/cart/cartActionTypes';\nexport function cartAddItemSuccess(product) {\n  var _globalIntl;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var quantity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  toast.success((_globalIntl = globalIntl()) === null || _globalIntl === void 0 ? void 0 : _globalIntl.formatMessage({\n    id: 'TEXT_TOAST_PRODUCT_ADDED_TO_CART'\n  }, {\n    productName: product.name\n  }));\n  return {\n    type: CART_ADD_ITEM,\n    product: product,\n    options: options,\n    quantity: quantity\n  };\n}\nexport function cartRemoveItemSuccess(itemId) {\n  return {\n    type: CART_REMOVE_ITEM,\n    itemId: itemId\n  };\n}\nexport function cartUpdateQuantitiesSuccess(quantities) {\n  return {\n    type: CART_UPDATE_QUANTITIES,\n    quantities: quantities\n  };\n}\nexport function cartAddItem(product) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var quantity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  // sending request to server, timeout is used as a stub\n  return function (dispatch) {\n    return new Promise(function (resolve) {\n      setTimeout(function () {\n        dispatch(cartAddItemSuccess(product, options, quantity));\n        resolve();\n      }, 250);\n    });\n  };\n}\nexport function cartRemoveItem(itemId) {\n  // sending request to server, timeout is used as a stub\n  return function (dispatch) {\n    return new Promise(function (resolve) {\n      setTimeout(function () {\n        dispatch(cartRemoveItemSuccess(itemId));\n        resolve();\n      }, 250);\n    });\n  };\n}\nexport function cartUpdateQuantities(quantities) {\n  // sending request to server, timeout is used as a stub\n  return function (dispatch) {\n    return new Promise(function (resolve) {\n      setTimeout(function () {\n        dispatch(cartUpdateQuantitiesSuccess(quantities));\n        resolve();\n      }, 250);\n    });\n  };\n}","map":null,"metadata":{},"sourceType":"module"}