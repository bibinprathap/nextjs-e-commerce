{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n// application\nimport { vehicleApi } from '~/api';\nimport { GARAGE_SET_CURRENT, GARAGE_SET_ITEMS } from '~/store/garage/garageActionTypes';\nexport function garageSetItems(items) {\n  return {\n    type: GARAGE_SET_ITEMS,\n    payload: items\n  };\n}\nexport function garageSetCurrent(vehicleId) {\n  return {\n    type: GARAGE_SET_CURRENT,\n    payload: vehicleId\n  };\n}\nexport function loadUserVehicles() {\n  return function (dispatch) {\n    return vehicleApi.getUserVehicles().then(function (items) {\n      dispatch(garageSetItems(items));\n    });\n  };\n}\nexport function garageAddItem(vehicleId) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return vehicleApi.addUserVehicle(vehicleId);\n\n            case 2:\n              return _context.abrupt(\"return\", dispatch(loadUserVehicles()));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\nexport function garageRemoveItem(vehicleId) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return vehicleApi.removeUserVehicle(vehicleId);\n\n            case 2:\n              return _context2.abrupt(\"return\", dispatch(loadUserVehicles()));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}","map":null,"metadata":{},"sourceType":"module"}