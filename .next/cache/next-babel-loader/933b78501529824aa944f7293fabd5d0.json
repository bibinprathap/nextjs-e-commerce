{"ast":null,"code":"// third-party\nimport { toast } from 'react-toastify'; // application\n\nimport { globalIntl } from '~/services/i18n/global-intl';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_UPDATE_QUANTITIES } from '~/store/cart/cartActionTypes';\nexport function cartAddItemSuccess(product, options = [], quantity = 1) {\n  var _globalIntl;\n\n  toast.success((_globalIntl = globalIntl()) === null || _globalIntl === void 0 ? void 0 : _globalIntl.formatMessage({\n    id: 'TEXT_TOAST_PRODUCT_ADDED_TO_CART'\n  }, {\n    productName: product.name\n  }));\n  return {\n    type: CART_ADD_ITEM,\n    product,\n    options,\n    quantity\n  };\n}\nexport function cartRemoveItemSuccess(itemId) {\n  return {\n    type: CART_REMOVE_ITEM,\n    itemId\n  };\n}\nexport function cartUpdateQuantitiesSuccess(quantities) {\n  return {\n    type: CART_UPDATE_QUANTITIES,\n    quantities\n  };\n}\nexport function cartAddItem(product, options = [], quantity = 1) {\n  // sending request to server, timeout is used as a stub\n  return dispatch => new Promise(resolve => {\n    setTimeout(() => {\n      dispatch(cartAddItemSuccess(product, options, quantity));\n      resolve();\n    }, 250);\n  });\n}\nexport function cartRemoveItem(itemId) {\n  // sending request to server, timeout is used as a stub\n  return dispatch => new Promise(resolve => {\n    setTimeout(() => {\n      dispatch(cartRemoveItemSuccess(itemId));\n      resolve();\n    }, 250);\n  });\n}\nexport function cartUpdateQuantities(quantities) {\n  // sending request to server, timeout is used as a stub\n  return dispatch => new Promise(resolve => {\n    setTimeout(() => {\n      dispatch(cartUpdateQuantitiesSuccess(quantities));\n      resolve();\n    }, 250);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}