{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React, { useRef, useState } from 'react'; // third-party\n\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport classNames from 'classnames'; // application\n\nimport AppImageNew from '~/components/shared/AppImageNew';\nimport AppLink from '~/components/shared/AppLink';\nimport AsyncAction from '~/components/shared/AsyncAction';\nimport CurrencyFormat from '~/components/shared/CurrencyFormat';\nimport RadioButton from '~/components/shared/RadioButton';\nimport Rating from '~/components/shared/Rating';\nimport url from '~/services/url';\nimport VehicleForm from '~/components/shared/VehicleForm';\nimport { Car20Svg, RecycleBin16Svg, Search20Svg } from '~/svg';\nimport { shopApi } from '~/api';\nimport { useGlobalMousedown } from '~/services/hooks';\nimport { useGarageAddItem, useGarageCurrent, useGarageRemoveItem, useGarageSetCurrent, useUserVehicles } from '~/store/garage/garageHooks';\nexport function Search() {\n  var intl = useIntl();\n\n  var _useState = useState(''),\n      query = _useState[0],\n      setQuery = _useState[1];\n\n  var _useState2 = useState(false),\n      suggestionsIsOpen = _useState2[0],\n      setSuggestionsIsOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasSuggestions = _useState3[0],\n      setHasSuggestions = _useState3[1];\n\n  var _useState4 = useState([]),\n      products = _useState4[0],\n      setProducts = _useState4[1];\n\n  var _useState5 = useState([]),\n      categories = _useState5[0],\n      setCategories = _useState5[1];\n\n  var _useState6 = useState(false),\n      vehiclePickerIsOpen = _useState6[0],\n      setVehiclePickerIsOpen = _useState6[1];\n\n  var _useState7 = useState('list'),\n      vehiclePanel = _useState7[0],\n      setVehiclePanel = _useState7[1];\n\n  var _useState8 = useState(null),\n      addVehicle = _useState8[0],\n      setAddVehicle = _useState8[1];\n\n  var vehicles = useUserVehicles();\n  var garageAddItem = useGarageAddItem();\n  var garageRemoveItem = useGarageRemoveItem();\n  var hasVehicles = vehicles.length > 0;\n  var selectVehicleButtonRef = useRef(null);\n  var vehiclePickerDropdownRef = useRef(null);\n  var currentVehicle = useGarageCurrent();\n  var garageSetCurrent = useGarageSetCurrent();\n  var searchCancelFnRef = useRef(function () {});\n  var rootRef = useRef(null);\n\n  var search = function search(value) {\n    searchCancelFnRef.current();\n    var canceled = false;\n\n    searchCancelFnRef.current = function () {\n      canceled = true;\n    };\n\n    shopApi.getSearchSuggestions(value, {\n      limitProducts: 3,\n      limitCategories: 4\n    }).then(function (result) {\n      if (canceled) {\n        return;\n      }\n\n      if (result.products.length === 0 && result.categories.length === 0) {\n        setHasSuggestions(false);\n        return;\n      }\n\n      setHasSuggestions(true);\n      setProducts(result.products);\n      setCategories(result.categories);\n    });\n    setQuery(value);\n  };\n\n  var toggleSuggestions = function toggleSuggestions(force) {\n    setSuggestionsIsOpen(function (prevState) {\n      var newState = force !== undefined ? force : !prevState;\n\n      if (newState) {\n        setVehiclePickerIsOpen(false);\n      }\n\n      return newState;\n    });\n  };\n\n  var toggleVehiclePicker = function toggleVehiclePicker(force) {\n    setVehiclePickerIsOpen(function (prevState) {\n      var newState = force !== undefined ? force : !prevState;\n\n      if (newState) {\n        setSuggestionsIsOpen(false);\n      }\n\n      return newState;\n    });\n  };\n\n  var handleInputFocus = function handleInputFocus(event) {\n    var input = event.currentTarget;\n    toggleSuggestions(true);\n    search(input.value);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var input = event.currentTarget;\n    search(input.value);\n  };\n\n  var handleButtonClick = function handleButtonClick() {\n    toggleVehiclePicker();\n  };\n\n  var handleChangeCurrentVehicle = function handleChangeCurrentVehicle(event) {\n    var vehicleId = event.currentTarget.value === '' ? null : parseFloat(event.currentTarget.value);\n    garageSetCurrent(vehicleId);\n  };\n\n  var handleVehicleChange = function handleVehicleChange(vehicle) {\n    setAddVehicle(vehicle);\n  };\n\n  var handleRootBlur = function handleRootBlur() {\n    setTimeout(function () {\n      if (document.activeElement === document.body) {\n        return;\n      } // Close suggestions if the focus received an external element.\n\n\n      if (document.activeElement && document.activeElement.closest('.search') !== rootRef.current) {\n        toggleSuggestions(false);\n      }\n    }, 10);\n  };\n\n  useGlobalMousedown(function (event) {\n    var outsideButton = selectVehicleButtonRef.current && !selectVehicleButtonRef.current.contains(event.target);\n    var outsideDropdown = vehiclePickerDropdownRef.current && !vehiclePickerDropdownRef.current.contains(event.target);\n\n    if (outsideButton && outsideDropdown) {\n      setVehiclePickerIsOpen(false);\n    }\n  }, [setVehiclePickerIsOpen, selectVehicleButtonRef]);\n  useGlobalMousedown(function (event) {\n    var outside = rootRef.current && !rootRef.current.contains(event.target);\n\n    if (outside && suggestionsIsOpen) {\n      setHasSuggestions(false);\n    }\n  }, [rootRef, suggestionsIsOpen, setHasSuggestions]);\n  var searchPlaceholder = currentVehicle ? intl.formatMessage({\n    id: 'INPUT_SEARCH_PLACEHOLDER_VEHICLE'\n  }, currentVehicle) : intl.formatMessage({\n    id: 'INPUT_SEARCH_PLACEHOLDER'\n  });\n  return __jsx(\"div\", {\n    className: \"search\",\n    ref: rootRef,\n    onBlur: handleRootBlur\n  }, __jsx(\"form\", {\n    className: \"search__body\"\n  }, __jsx(\"div\", {\n    className: \"search__shadow\"\n  }), __jsx(\"label\", {\n    className: \"sr-only\",\n    htmlFor: \"site-search\"\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_SEARCH_LABEL\"\n  })), __jsx(\"input\", {\n    type: \"text\",\n    className: \"search__input\",\n    id: \"site-search\",\n    autoCapitalize: \"off\",\n    autoComplete: \"off\",\n    spellCheck: \"false\",\n    name: \"search\",\n    value: query,\n    placeholder: searchPlaceholder,\n    onFocus: handleInputFocus,\n    onChange: handleInputChange\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: classNames('search__button search__button--start', {\n      'search__button--hover': vehiclePickerIsOpen\n    }),\n    onClick: handleButtonClick,\n    ref: selectVehicleButtonRef\n  }, __jsx(\"span\", {\n    className: \"search__button-icon\"\n  }, __jsx(Car20Svg, null)), __jsx(\"span\", {\n    className: \"search__button-title\"\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_SEARCH_SELECT_VEHICLE_DESKTOP\"\n  }))), __jsx(\"button\", {\n    className: \"search__button search__button--end\",\n    type: \"submit\"\n  }, __jsx(\"span\", {\n    className: \"search__button-icon\"\n  }, __jsx(Search20Svg, null))), __jsx(\"div\", {\n    className: \"search__box\"\n  }), __jsx(\"div\", {\n    className: \"search__decor\"\n  }, __jsx(\"div\", {\n    className: \"search__decor-start\"\n  }), __jsx(\"div\", {\n    className: \"search__decor-end\"\n  })), __jsx(\"div\", {\n    className: classNames('search__dropdown', 'search__dropdown--suggestions', 'suggestions', {\n      'search__dropdown--open': suggestionsIsOpen && hasSuggestions\n    })\n  }, products.length > 0 && __jsx(\"div\", {\n    className: \"suggestions__group\"\n  }, __jsx(\"div\", {\n    className: \"suggestions__group-title\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_PRODUCTS\"\n  })), __jsx(\"div\", {\n    className: \"suggestions__group-content\"\n  }, products.map(function (product) {\n    return __jsx(AppLink, {\n      key: product.id,\n      href: url.product(product),\n      className: \"suggestions__item suggestions__product\",\n      onClick: function onClick() {\n        return toggleSuggestions(false);\n      }\n    }, __jsx(\"div\", {\n      className: \"suggestions__product-image\"\n    }, __jsx(AppImageNew, {\n      src: product.images && product.images[0]\n    })), __jsx(\"div\", {\n      className: \"suggestions__product-info\"\n    }, __jsx(\"div\", {\n      className: \"suggestions__product-name\"\n    }, product.name), __jsx(\"div\", {\n      className: \"suggestions__product-rating\"\n    }, __jsx(\"div\", {\n      className: \"suggestions__product-rating-stars\"\n    }, __jsx(Rating, {\n      value: product.rating || 0\n    })), __jsx(\"div\", {\n      className: \"suggestions__product-rating-label\"\n    }, __jsx(FormattedMessage, {\n      id: \"TEXT_RATING_LABEL\",\n      values: {\n        rating: product.rating,\n        reviews: product.reviews\n      }\n    })))), __jsx(\"div\", {\n      className: \" suggestions__product-price\"\n    }, __jsx(CurrencyFormat, {\n      value: product.price\n    })));\n  }))), categories.length > 0 && __jsx(\"div\", {\n    className: \"suggestions__group\"\n  }, __jsx(\"div\", {\n    className: \"suggestions__group-title\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_CATEGORIES\"\n  })), __jsx(\"div\", {\n    className: \"suggestions__group-content\"\n  }, categories.map(function (category) {\n    return __jsx(AppLink, {\n      key: category.id,\n      href: url.category(category),\n      className: \"suggestions__item suggestions__category\",\n      onClick: function onClick() {\n        return toggleSuggestions(false);\n      }\n    }, category.name);\n  })))), __jsx(\"div\", {\n    className: classNames('search__dropdown', 'search__dropdown--vehicle-picker', 'vehicle-picker', {\n      'search__dropdown--open': vehiclePickerIsOpen\n    }),\n    ref: vehiclePickerDropdownRef\n  }, __jsx(\"div\", {\n    className: \"search__dropdown-arrow\"\n  }), __jsx(\"div\", {\n    className: classNames('vehicle-picker__panel', {\n      'vehicle-picker__panel--active': vehiclePanel === 'list' && hasVehicles\n    })\n  }, __jsx(\"div\", {\n    className: \"vehicle-picker__panel-body\"\n  }, __jsx(\"div\", {\n    className: \"vehicle-picker__text\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_SELECT_VEHICLE_TO_FIND_EXACT_FIT_PARTS\"\n  })), __jsx(\"div\", {\n    className: \"vehicles-list\"\n  }, __jsx(\"div\", {\n    className: \"vehicles-list__body\"\n  }, __jsx(\"label\", {\n    className: \"vehicles-list__item\"\n  }, __jsx(RadioButton, {\n    className: \"vehicles-list__item-radio\",\n    name: \"header-current-vehicle\",\n    defaultValue: \"\",\n    checked: currentVehicle === null,\n    onChange: handleChangeCurrentVehicle\n  }), __jsx(\"span\", {\n    className: \" vehicles-list__item-info\"\n  }, __jsx(\"span\", {\n    className: \" vehicles-list__item-name\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_ALL_VEHICLES\"\n  })))), vehicles.map(function (vehicle, index) {\n    return __jsx(React.Fragment, {\n      key: index\n    }, __jsx(\"label\", {\n      className: \"vehicles-list__item\"\n    }, __jsx(RadioButton, {\n      className: \"vehicles-list__item-radio\",\n      name: \"header-current-vehicle\",\n      defaultValue: vehicle.id,\n      checked: (currentVehicle === null || currentVehicle === void 0 ? void 0 : currentVehicle.id) === vehicle.id,\n      onChange: handleChangeCurrentVehicle\n    }), __jsx(\"span\", {\n      className: \"vehicles-list__item-info\"\n    }, __jsx(\"span\", {\n      className: \"vehicles-list__item-name\"\n    }, \"\".concat(vehicle.year, \" \").concat(vehicle.make, \" \").concat(vehicle.model)), __jsx(\"span\", {\n      className: \"vehicles-list__item-details\"\n    }, __jsx(FormattedMessage, {\n      id: \"TEXT_VEHICLE_ENGINE\",\n      values: {\n        engine: vehicle.engine\n      }\n    }))), __jsx(AsyncAction, {\n      action: function action() {\n        return garageRemoveItem(vehicle.id);\n      },\n      render: function render(_ref) {\n        var run = _ref.run,\n            loading = _ref.loading;\n        return __jsx(\"button\", {\n          type: \"button\",\n          className: classNames('vehicles-list__item-remove', {\n            'vehicles-list__item-remove--loading': loading\n          }),\n          onClick: run\n        }, __jsx(RecycleBin16Svg, null));\n      }\n    })));\n  }))), __jsx(\"div\", {\n    className: \"vehicle-picker__actions\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary btn-sm\",\n    onClick: function onClick() {\n      return setVehiclePanel('form');\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_ADD_VEHICLE\"\n  }))))), __jsx(\"div\", {\n    className: classNames('vehicle-picker__panel', {\n      'vehicle-picker__panel--active': vehiclePanel === 'form' || !hasVehicles\n    })\n  }, __jsx(\"div\", {\n    className: \"vehicle-picker__panel-body\"\n  }, __jsx(VehicleForm, {\n    location: \"search\",\n    onVehicleChange: handleVehicleChange\n  }), __jsx(\"div\", {\n    className: \"vehicle-picker__actions\"\n  }, hasVehicles && __jsx(\"div\", {\n    className: \"search__car-selector-link\"\n  }, __jsx(AppLink, {\n    anchor: true,\n    onClick: function onClick(event) {\n      event.preventDefault();\n      setVehiclePanel('list');\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_BACK_TO_LIST\"\n  }))), __jsx(AsyncAction, {\n    action: function action() {\n      return addVehicle ? garageAddItem(addVehicle.id) : Promise.resolve();\n    },\n    render: function render(_ref2) {\n      var run = _ref2.run,\n          loading = _ref2.loading;\n      return __jsx(\"button\", {\n        type: \"button\",\n        className: classNames('btn', 'btn-primary', 'btn-sm', {\n          'btn-loading': loading\n        }),\n        disabled: addVehicle === null,\n        onClick: run\n      }, __jsx(FormattedMessage, {\n        id: \"BUTTON_ADD_VEHICLE\"\n      }));\n    }\n  })))))));\n}\nexport default Search;","map":null,"metadata":{},"sourceType":"module"}