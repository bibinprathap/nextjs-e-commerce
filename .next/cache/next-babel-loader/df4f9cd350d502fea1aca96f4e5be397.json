{"ast":null,"code":"var __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */\n// react\nimport React, { useContext, useEffect, useMemo, useState } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl'; // application\n\nimport WidgetFilters from '~/components/widgets/WidgetFilters';\nimport WidgetProducts from '~/components/widgets/WidgetProducts';\nimport { Cross12Svg } from '~/svg';\nimport { shopApi } from '~/api';\nimport { SidebarContext } from '~/services/sidebar';\nimport { useMedia } from '~/store/hooks';\n\nfunction ShopSidebar(props) {\n  var offcanvas = props.offcanvas;\n\n  var _useContext = useContext(SidebarContext),\n      isOpen = _useContext[0],\n      setIsOpen = _useContext[1];\n\n  var _useState = useState([]),\n      latestProducts = _useState[0],\n      setLatestProducts = _useState[1];\n\n  var isMobile = useMedia('(max-width: 991px)');\n  var rootClasses = classNames('sidebar', \"sidebar--offcanvas--\".concat(offcanvas), {\n    'sidebar--open': isOpen\n  });\n\n  var close = function close() {\n    setIsOpen(false);\n  };\n\n  useEffect(function () {\n    if (isOpen) {\n      var bodyWidth = document.body.offsetWidth;\n      document.body.style.overflow = 'hidden';\n      document.body.style.paddingRight = \"\".concat(document.body.offsetWidth - bodyWidth, \"px\");\n    } else {\n      document.body.style.overflow = '';\n      document.body.style.paddingRight = '';\n    }\n  }, [isOpen]);\n  useEffect(function () {\n    if (offcanvas === 'mobile' && isOpen && !isMobile) {\n      setIsOpen(false);\n    }\n  }, [offcanvas, isOpen, setIsOpen, isMobile]);\n  useEffect(function () {\n    var canceled = false;\n\n    if (offcanvas === 'mobile') {\n      shopApi.getLatestProducts(5).then(function (products) {\n        if (canceled) {\n          return;\n        }\n\n        setLatestProducts(products);\n      });\n    }\n\n    return function () {\n      canceled = true;\n    };\n  }, [offcanvas, setLatestProducts]);\n  var latestProductsTitle = useMemo(function () {\n    return __jsx(FormattedMessage, {\n      id: \"HEADER_LATEST_PRODUCTS\"\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: rootClasses\n  }, __jsx(\"div\", {\n    className: \"sidebar__backdrop\",\n    onClick: close\n  }), __jsx(\"div\", {\n    className: \"sidebar__body\"\n  }, __jsx(\"div\", {\n    className: \"sidebar__header\"\n  }, __jsx(\"div\", {\n    className: \"sidebar__title\"\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_FILTERS\"\n  })), __jsx(\"button\", {\n    className: \"sidebar__close\",\n    type: \"button\",\n    onClick: close\n  }, __jsx(Cross12Svg, null))), __jsx(\"div\", {\n    className: \"sidebar__content\"\n  }, __jsx(WidgetFilters, {\n    offcanvasSidebar: offcanvas\n  }), offcanvas !== 'always' && __jsx(WidgetProducts, {\n    className: \"d-none d-lg-block\",\n    widgetTitle: latestProductsTitle,\n    products: latestProducts\n  }))));\n}\n\nexport default React.memo(ShopSidebar);","map":null,"metadata":{},"sourceType":"module"}