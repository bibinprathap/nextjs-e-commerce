{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\n// react\nimport React, { useEffect, useMemo, useRef, useState } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport AppImage from '~/components/shared/AppImage';\nimport AppLink from '~/components/shared/AppLink';\nimport AppSlick from '~/components/shared/AppSlick';\nimport Arrow from '~/components/shared/Arrow';\nimport ProductCard from '~/components/shared/ProductCard';\nimport url from '~/services/url';\nimport { baseUrl } from '~/services/utils';\nimport { shopApi } from '~/api';\nvar slickSettings = {\n  dots: false,\n  arrows: false,\n  infinite: true,\n  speed: 400,\n  slidesToShow: 4,\n  slidesToScroll: 4,\n  responsive: [{\n    breakpoint: 1399,\n    settings: {\n      slidesToShow: 3,\n      slidesToScroll: 3\n    }\n  }, {\n    breakpoint: 991,\n    settings: {\n      slidesToShow: 2,\n      slidesToScroll: 2\n    }\n  }, {\n    breakpoint: 459,\n    settings: {\n      slidesToShow: 1,\n      slidesToScroll: 1\n    }\n  }]\n};\nvar excludeElements = ['features', 'list-buttons'];\n\nfunction BlockZone(props) {\n  var intl = useIntl();\n  var image = props.image,\n      mobileImage = props.mobileImage,\n      categorySlug = props.categorySlug,\n      blockZoneIdx = props.blockZoneIdx;\n  var slickRef = useRef(null);\n  var cancelRequestRef = useRef(function () {});\n\n  var _useState = useState(null),\n      category = _useState[0],\n      setCategory = _useState[1];\n\n  var _useState2 = useState([]),\n      products = _useState2[0],\n      setProducts = _useState2[1];\n\n  var _useState3 = useState(false),\n      isLoading = _useState3[0],\n      setIsLoading = _useState3[1];\n\n  var _useState4 = useState(null),\n      currentTab = _useState4[0],\n      setCurrentTab = _useState4[1];\n\n  var subs = (category === null || category === void 0 ? void 0 : category.children) || [];\n\n  var handleNextClick = function handleNextClick() {\n    if (slickRef.current) {\n      slickRef.current.slickNext();\n    }\n  };\n\n  var handlePrevClick = function handlePrevClick() {\n    if (slickRef.current) {\n      slickRef.current.slickPrev();\n    }\n  };\n\n  var tabs = useMemo(function () {\n    return [{\n      name: intl.formatMessage({\n        id: 'TEXT_TAB_FEATURED'\n      }),\n      source: function source() {\n        return shopApi.getFeaturedProducts(categorySlug, 6);\n      }\n    }, {\n      name: intl.formatMessage({\n        id: 'TEXT_TAB_BESTSELLERS'\n      }),\n      source: function source() {\n        return shopApi.getPopularProducts(categorySlug, 6);\n      }\n    }, {\n      name: intl.formatMessage({\n        id: 'TEXT_TAB_TOP_RATED'\n      }),\n      source: function source() {\n        return shopApi.getTopRatedProducts(categorySlug, 6);\n      }\n    }];\n  }, [intl, categorySlug]);\n\n  var load = function load(tab) {\n    cancelRequestRef.current();\n    var canceled = false;\n\n    cancelRequestRef.current = function () {\n      canceled = true;\n    };\n\n    setIsLoading(true);\n    tab.source().then(function (result) {\n      if (canceled) {\n        return;\n      }\n\n      setIsLoading(false);\n      setProducts(result);\n    });\n  };\n\n  var onTabClick = function onTabClick(tab) {\n    setCurrentTab(tab);\n    load(tab);\n  }; // Unmount.\n\n\n  useEffect(function () {\n    return function () {\n      cancelRequestRef.current();\n    };\n  }, []);\n  useEffect(function () {\n    var canceled = false;\n    shopApi.getCategoryBySlug(categorySlug, {\n      depth: 1\n    }).then(function (result) {\n      if (canceled) {\n        return;\n      }\n\n      setCategory(result);\n    });\n    setCurrentTab(tabs[blockZoneIdx || 0]);\n    load(tabs[blockZoneIdx || 0]);\n    return function () {\n      canceled = true;\n    };\n  }, [tabs, categorySlug]);\n\n  if (!category) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    className: \"block block-zone\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"block-zone__body\"\n  }, __jsx(\"div\", {\n    className: \"block-zone__card category-card category-card--layout--overlay\"\n  }, __jsx(\"div\", {\n    className: \"category-card__body\"\n  }, __jsx(\"div\", {\n    className: \"category-card__overlay-image\"\n  }, __jsx(AppImage, {\n    srcSet: \"\".concat(baseUrl(mobileImage), \" 530w, \").concat(baseUrl(image), \" 305w\"),\n    src: image,\n    sizes: \"(max-width: 575px) 530px, 305px\"\n  })), __jsx(\"div\", {\n    className: \"category-card__overlay-image category-card__overlay-image--blur\"\n  }, __jsx(AppImage, {\n    srcSet: \"\".concat(baseUrl(mobileImage), \" 530w, \").concat(baseUrl(image), \" 305w\"),\n    src: image,\n    sizes: \"(max-width: 575px) 530px, 305px\"\n  })), __jsx(\"div\", {\n    className: \"category-card__content\"\n  }, __jsx(\"div\", {\n    className: \"category-card__info\"\n  }, __jsx(\"div\", {\n    className: \"category-card__name\"\n  }, __jsx(AppLink, {\n    href: url.category(category)\n  }, category.name)), __jsx(\"ul\", {\n    className: \"category-card__children\"\n  }, subs.map(function (sub, subIdx) {\n    return __jsx(\"li\", {\n      key: subIdx\n    }, __jsx(AppLink, {\n      href: url.category(sub)\n    }, sub.name));\n  })), __jsx(\"div\", {\n    className: \"category-card__actions\"\n  }, __jsx(AppLink, {\n    href: url.category(category),\n    className: \"btn btn-primary btn-sm\"\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_SHOP_ALL\"\n  }))))))), __jsx(\"div\", {\n    className: \"block-zone__widget\"\n  }, __jsx(\"div\", {\n    className: \"block-zone__widget-header\"\n  }, __jsx(\"div\", {\n    className: \"block-zone__tabs\"\n  }, tabs.map(function (tab, tabIdx) {\n    return __jsx(\"button\", {\n      key: tabIdx,\n      type: \"button\",\n      className: classNames('block-zone__tabs-button', {\n        'block-zone__tabs-button--active': tab === currentTab\n      }),\n      onClick: function onClick() {\n        return onTabClick(tab);\n      }\n    }, tab.name);\n  })), __jsx(Arrow, {\n    className: \"block-zone__arrow block-zone__arrow--prev\",\n    direction: \"prev\",\n    onClick: handlePrevClick\n  }), __jsx(Arrow, {\n    className: \"block-zone__arrow block-zone__arrow--next\",\n    direction: \"next\",\n    onClick: handleNextClick\n  })), __jsx(\"div\", {\n    className: \"block-zone__widget-body\"\n  }, __jsx(\"div\", {\n    className: classNames('block-zone__carousel', {\n      'block-zone__carousel--loading': isLoading\n    })\n  }, __jsx(\"div\", {\n    className: \"block-zone__carousel-loader\"\n  }), __jsx(AppSlick, _extends({\n    className: \"block-zone__carousel-slick\",\n    ref: slickRef\n  }, slickSettings), products.map(function (product) {\n    return __jsx(\"div\", {\n      key: product.id,\n      className: \"block-zone__carousel-item\"\n    }, __jsx(ProductCard, {\n      product: product,\n      exclude: excludeElements\n    }));\n  }))))))));\n}\n\nexport default React.memo(BlockZone);","map":null,"metadata":{},"sourceType":"module"}