{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React, { useCallback, useEffect, useState } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal } from 'reactstrap'; // application\n\nimport AsyncAction from '~/components/shared/AsyncAction';\nimport RadioButton from '~/components/shared/RadioButton';\nimport VehicleForm from '~/components/shared/VehicleForm';\nimport { Cross12Svg, RecycleBin16Svg } from '~/svg';\nimport { useGarageAddItem, useGarageRemoveItem, useUserVehicles } from '~/store/garage/garageHooks';\n\nfunction VehiclePickerModal(props) {\n  const {\n    value = null,\n    isOpen = false,\n    onClose,\n    onSelect\n  } = props;\n  const vehicles = useUserVehicles();\n  const garageRemoveItem = useGarageRemoveItem();\n  const garageAddItem = useGarageAddItem();\n  const {\n    0: currentPanel,\n    1: setCurrentPanel\n  } = useState('list');\n  const {\n    0: innerValue,\n    1: setInnerValue\n  } = useState(null);\n  const {\n    0: controlValue,\n    1: setControlValue\n  } = useState(null);\n\n  const onSelectClick = () => {\n    if (onSelect) {\n      onSelect(innerValue);\n    }\n\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  const toggle = useCallback(() => {\n    if (isOpen && onClose) {\n      onClose();\n    }\n  }, [isOpen, onClose]);\n\n  const onAddVehicleClick = async () => {\n    if (!controlValue) {\n      return;\n    }\n\n    await garageAddItem(controlValue.id);\n    setCurrentPanel('list');\n    setInnerValue(controlValue);\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      setCurrentPanel('list');\n      setInnerValue(value);\n    }\n  }, [isOpen, value]);\n  return __jsx(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    centered: true,\n    className: \"vehicle-picker-modal\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"vehicle-picker-modal__close\",\n    onClick: onClose\n  }, __jsx(Cross12Svg, null)), __jsx(\"div\", {\n    className: classNames('vehicle-picker-modal__panel', {\n      'vehicle-picker-modal__panel--active': currentPanel === 'list' && vehicles.length !== 0\n    })\n  }, __jsx(\"div\", {\n    className: \"vehicle-picker-modal__title card-title\"\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_SELECT_VEHICLE\"\n  })), __jsx(\"div\", {\n    className: \"vehicle-picker-modal__text\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_SELECT_VEHICLE_TO_FIND_EXACT_FIT_PARTS\"\n  })), __jsx(\"div\", {\n    className: \"vehicles-list\"\n  }, __jsx(\"div\", {\n    className: \"vehicles-list__body\"\n  }, __jsx(\"label\", {\n    className: \"vehicles-list__item\"\n  }, __jsx(RadioButton, {\n    className: \"vehicles-list__item-radio\",\n    checked: innerValue === null,\n    onChange: () => setInnerValue(null)\n  }), __jsx(\"span\", {\n    className: \"vehicles-list__item-info\"\n  }, __jsx(\"span\", {\n    className: \"vehicles-list__item-name\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_ALL_VEHICLES\"\n  })))), vehicles.map((vehicle, vehicleIdx) => // eslint-disable-next-line jsx-a11y/label-has-associated-control\n  __jsx(\"label\", {\n    key: vehicleIdx,\n    className: \"vehicles-list__item\"\n  }, __jsx(RadioButton, {\n    className: \"vehicles-list__item-radio\",\n    checked: innerValue !== null && innerValue.id === vehicle.id,\n    onChange: () => setInnerValue(vehicle)\n  }), __jsx(\"span\", {\n    className: \"vehicles-list__item-info\"\n  }, __jsx(\"span\", {\n    className: \"vehicles-list__item-name\"\n  }, `${vehicle.year} ${vehicle.make} ${vehicle.model}`), __jsx(\"span\", {\n    className: \"vehicles-list__item-details\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_VEHICLE_ENGINE\",\n    values: {\n      engine: vehicle.engine\n    }\n  }))), __jsx(AsyncAction, {\n    action: () => garageRemoveItem(vehicle.id),\n    render: ({\n      run,\n      loading\n    }) => __jsx(\"button\", {\n      type: \"button\",\n      className: classNames('vehicles-list__item-remove', {\n        'vehicles-list__item-remove--loading': loading\n      }),\n      onClick: run\n    }, __jsx(RecycleBin16Svg, null))\n  }))))), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-secondary btn-block mt-2 vehicle-picker-modal__add-button\",\n    onClick: () => setCurrentPanel('form')\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_ADD_VEHICLE_LONG\"\n  })), __jsx(\"div\", {\n    className: \"vehicle-picker-modal__actions\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-secondary\",\n    onClick: onClose\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_CANCEL\"\n  })), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-primary\",\n    onClick: onSelectClick\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_SELECT_VEHICLE\"\n  })))), __jsx(\"div\", {\n    className: classNames('vehicle-picker-modal__panel', {\n      'vehicle-picker-modal__panel--active': currentPanel === 'form' || vehicles.length === 0\n    })\n  }, __jsx(\"div\", {\n    className: \"vehicle-picker-modal__title card-title\"\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_ADD_VEHICLE\"\n  })), __jsx(VehicleForm, {\n    location: \"modal\",\n    onVehicleChange: setControlValue\n  }), __jsx(\"div\", {\n    className: \"vehicle-picker-modal__actions\"\n  }, vehicles.length !== 0 && __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-secondary\",\n    onClick: () => setCurrentPanel('list')\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_BACK_TO_LIST\"\n  })), __jsx(AsyncAction, {\n    action: onAddVehicleClick,\n    render: ({\n      run,\n      loading\n    }) => __jsx(\"button\", {\n      type: \"button\",\n      className: classNames('btn', 'btn-sm', 'btn-primary', {\n        'btn-loading': loading\n      }),\n      disabled: controlValue === null,\n      onClick: run\n    }, __jsx(FormattedMessage, {\n      id: \"BUTTON_ADD_VEHICLE\"\n    }))\n  }))));\n}\n\nexport default VehiclePickerModal;","map":null,"metadata":{},"sourceType":"module"}