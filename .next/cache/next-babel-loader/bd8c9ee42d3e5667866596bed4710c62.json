{"ast":null,"code":"// third-party\nimport thunk from 'redux-thunk';\nimport { applyMiddleware, createStore } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper'; // application\n\nimport rootReducer from '~/store/root/rootReducer';\nimport version from '~/store/version';\nvar STORAGE_KEY = 'red-parts/react';\nexport var save = function save(state) {\n  try {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(state));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n  }\n};\nexport var load = function load() {\n  if (!true) {\n    return undefined;\n  }\n\n  var state;\n\n  try {\n    state = localStorage.getItem(STORAGE_KEY);\n\n    if (typeof state === 'string') {\n      state = JSON.parse(state);\n    }\n\n    if (state && state.version !== version) {\n      state = undefined;\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n  }\n\n  return state || undefined;\n};\n\nvar bindMiddleware = function bindMiddleware() {\n  if (false) {\n    // eslint-disable-next-line global-require\n    var _require = require('redux-devtools-extension'),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, arguments));\n  }\n\n  return applyMiddleware.apply(void 0, arguments);\n};\n\nvar makeStore = function makeStore() {\n  return createStore(rootReducer, bindMiddleware(thunk));\n};\n\nexport var wrapper = createWrapper(makeStore);","map":null,"metadata":{},"sourceType":"module"}