{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// react\nimport React, { useCallback, useEffect, useRef, useState } from 'react'; // third-party\n\nimport classNames from 'classnames';\n// application\nimport AppImageNew from '~/components/shared/AppImageNew';\nimport AppLink from '~/components/shared/AppLink';\nimport AppSlick from '~/components/shared/AppSlick';\nimport { baseUrl } from '~/services/utils';\nimport { useDirection } from '~/services/i18n/hooks';\nimport { ZoomIn24Svg } from '~/svg';\nvar slickSettingsFeatured = {\n  dots: false,\n  arrows: false,\n  infinite: false,\n  speed: 400,\n  slidesToShow: 1,\n  slidesToScroll: 1\n};\nvar slickSettingsThumbnails = {\n  'product-sidebar': {\n    dots: false,\n    arrows: false,\n    infinite: false,\n    speed: 400,\n    slidesToShow: 8,\n    slidesToScroll: 1,\n    responsive: [{\n      breakpoint: 1399,\n      settings: {\n        slidesToShow: 6\n      }\n    }, {\n      breakpoint: 1199,\n      settings: {\n        slidesToShow: 8\n      }\n    }, {\n      breakpoint: 991,\n      settings: {\n        slidesToShow: 8\n      }\n    }, {\n      breakpoint: 767,\n      settings: {\n        slidesToShow: 6\n      }\n    }, {\n      breakpoint: 575,\n      settings: {\n        slidesToShow: 5\n      }\n    }, {\n      breakpoint: 419,\n      settings: {\n        slidesToShow: 4\n      }\n    }]\n  },\n  'product-full': {\n    dots: false,\n    arrows: false,\n    infinite: false,\n    speed: 400,\n    slidesToShow: 6,\n    slidesToScroll: 1,\n    responsive: [{\n      breakpoint: 1399,\n      settings: {\n        slidesToShow: 5\n      }\n    }, {\n      breakpoint: 1199,\n      settings: {\n        slidesToShow: 7\n      }\n    }, {\n      breakpoint: 991,\n      settings: {\n        slidesToShow: 5\n      }\n    }, {\n      breakpoint: 767,\n      settings: {\n        slidesToShow: 6\n      }\n    }, {\n      breakpoint: 575,\n      settings: {\n        slidesToShow: 5\n      }\n    }, {\n      breakpoint: 419,\n      settings: {\n        slidesToShow: 4\n      }\n    }]\n  },\n  quickview: {\n    dots: false,\n    arrows: false,\n    infinite: false,\n    speed: 400,\n    slidesToShow: 5,\n    slidesToScroll: 1,\n    responsive: [{\n      breakpoint: 991,\n      settings: {\n        slidesToShow: 6\n      }\n    }, {\n      breakpoint: 519,\n      settings: {\n        slidesToShow: 5\n      }\n    }, {\n      breakpoint: 439,\n      settings: {\n        slidesToShow: 4\n      }\n    }, {\n      breakpoint: 339,\n      settings: {\n        slidesToShow: 3\n      }\n    }]\n  }\n};\n\nfunction ProductGallery(props) {\n  var images = props.images,\n      layout = props.layout,\n      className = props.className,\n      rootProps = _objectWithoutProperties(props, [\"images\", \"layout\", \"className\"]);\n\n  var direction = useDirection();\n\n  var _useState = useState({\n    currentIndex: 0,\n    transition: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var imagesRefs = useRef([]);\n  var slickFeaturedRef = useRef(null);\n  var createGalleryRef = useRef(null);\n  var galleryRef = useRef(null);\n  var getIndexDependOnDirRef = useRef(null);\n  var unmountedRef = useRef(false);\n  var getIndexDependOnDir = useCallback(function (index) {\n    // we need to invert index id direction === 'rtl' due to react-slick bug\n    if (direction === 'rtl') {\n      return images.length - 1 - index;\n    }\n\n    return index;\n  }, [direction, images]);\n\n  var openPhotoswipe = function openPhotoswipe(index) {\n    if (!createGalleryRef.current) {\n      return;\n    }\n\n    var items = imagesRefs.current.map(function (tag, index) {\n      if (!tag) {\n        throw Error('Image ref is null');\n      }\n\n      var width = (tag.dataset.width ? parseFloat(tag.dataset.width) : null) || tag.naturalWidth;\n      var height = (tag.dataset.height ? parseFloat(tag.dataset.height) : null) || tag.naturalHeight;\n      return {\n        src: baseUrl(images[index]),\n        msrc: baseUrl(images[index]),\n        w: width,\n        h: height\n      };\n    });\n\n    if (direction === 'rtl') {\n      items.reverse();\n    } // noinspection JSUnusedGlobalSymbols\n\n\n    var options = {\n      getThumbBoundsFn: function getThumbBoundsFn(index) {\n        // IMPORTANT: Inside this function, we can use variables and functions only through ref.\n        if (!getIndexDependOnDirRef.current) {\n          return {\n            x: 0,\n            y: 0,\n            w: 0\n          };\n        }\n\n        var dirDependentIndex = getIndexDependOnDirRef.current(index);\n        var tag = imagesRefs.current[dirDependentIndex];\n\n        if (!tag) {\n          return {\n            x: 0,\n            y: 0,\n            w: 0\n          };\n        }\n\n        var width = tag.naturalWidth;\n        var height = tag.naturalHeight;\n        var rect = tag.getBoundingClientRect();\n        var ration = Math.min(rect.width / width, rect.height / height);\n        var fitWidth = width * ration;\n        var fitHeight = height * ration;\n        return {\n          x: rect.left + (rect.width - fitWidth) / 2 + window.pageXOffset,\n          y: rect.top + (rect.height - fitHeight) / 2 + window.pageYOffset,\n          w: fitWidth\n        };\n      },\n      index: getIndexDependOnDir(index),\n      bgOpacity: 0.9,\n      history: false\n    };\n    createGalleryRef.current.then(function (createGallery) {\n      // IMPORTANT: Inside this function, we can use variables and functions only through ref.\n      if (unmountedRef.current) {\n        return;\n      }\n\n      galleryRef.current = createGallery(items, options);\n      galleryRef.current.listen('beforeChange', function () {\n        if (galleryRef.current && slickFeaturedRef.current) {\n          slickFeaturedRef.current.slickGoTo(galleryRef.current.getCurrentIndex(), true);\n        }\n      });\n      galleryRef.current.listen('destroy', function () {\n        galleryRef.current = null;\n      });\n      galleryRef.current.init();\n    });\n  };\n\n  var handleFeaturedClick = function handleFeaturedClick(event, index) {\n    if (!createGalleryRef.current || layout === 'quickview') {\n      return;\n    }\n\n    event.preventDefault();\n    openPhotoswipe(index);\n  };\n\n  var handleThumbnailClick = function handleThumbnailClick(index) {\n    if (state.transition) {\n      return;\n    }\n\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        currentIndex: index\n      });\n    });\n\n    if (slickFeaturedRef.current) {\n      slickFeaturedRef.current.slickGoTo(getIndexDependOnDir(index));\n    }\n  };\n\n  var handleFeaturedBeforeChange = function handleFeaturedBeforeChange(oldIndex, newIndex) {\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        currentIndex: getIndexDependOnDir(newIndex),\n        transition: true\n      });\n    });\n  };\n\n  var handleFeaturedAfterChange = function handleFeaturedAfterChange(index) {\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        currentIndex: getIndexDependOnDir(index),\n        transition: false\n      });\n    });\n  };\n\n  var handleZoomButtonClick = function handleZoomButtonClick() {\n    openPhotoswipe(state.currentIndex);\n  }; // componentDidMount\n\n\n  useEffect(function () {\n    createGalleryRef.current = import('~/services/photoswipe').then(function (module) {\n      return module[\"default\"];\n    });\n  }, []); // componentWillUnmount\n\n  useEffect(function () {\n    unmountedRef.current = false;\n    return function () {\n      if (galleryRef.current) {\n        galleryRef.current.destroy();\n      }\n\n      unmountedRef.current = true;\n    };\n  }, []);\n  useEffect(function () {\n    // this is necessary to reset the transition state,\n    // because when the direction changes, the afterChange event does not fire\n    var timer = setTimeout(function () {\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          transition: false\n        });\n      });\n    }, 0);\n    return function () {\n      clearTimeout(timer);\n    };\n  }, [direction]);\n  useEffect(function () {\n    getIndexDependOnDirRef.current = getIndexDependOnDir;\n  }, [getIndexDependOnDir]);\n  var rootClasses = classNames('product-gallery', \"product-gallery--layout--\".concat(layout), className);\n  return __jsx(\"div\", _extends({\n    className: rootClasses,\n    \"data-layout\": layout\n  }, rootProps), __jsx(\"div\", {\n    className: \"product-gallery__featured\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"product-gallery__zoom\",\n    onClick: handleZoomButtonClick\n  }, __jsx(ZoomIn24Svg, null)), __jsx(AppSlick, _extends({\n    ref: slickFeaturedRef\n  }, slickSettingsFeatured, {\n    beforeChange: handleFeaturedBeforeChange,\n    afterChange: handleFeaturedAfterChange\n  }), images.map(function (image, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"image image--type--product\"\n    }, __jsx(AppLink, {\n      href: image,\n      anchor: true,\n      className: \"image__body\",\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      onClick: function onClick(event) {\n        return handleFeaturedClick(event, index);\n      }\n    }, __jsx(AppImageNew, {\n      className: \"image__tag\",\n      src: image,\n      ref: function ref(element) {\n        imagesRefs.current[index] = element;\n      },\n      \"data-width\": \"700\",\n      \"data-height\": \"700\"\n    })));\n  }))), __jsx(\"div\", {\n    className: \"product-gallery__thumbnails\"\n  }, __jsx(AppSlick, slickSettingsThumbnails[layout], images.map(function (image, index) {\n    return __jsx(\"button\", {\n      type: \"button\",\n      key: index,\n      className: classNames('product-gallery__thumbnails-item', 'image image--type--product', {\n        'product-gallery__thumbnails-item--active': index === state.currentIndex\n      }),\n      onClick: function onClick() {\n        return handleThumbnailClick(index);\n      }\n    }, __jsx(\"div\", {\n      className: \"image__body\"\n    }, __jsx(AppImageNew, {\n      className: \"image__tag\",\n      src: image\n    })));\n  }))));\n}\n\nexport default React.memo(ProductGallery);","map":null,"metadata":{},"sourceType":"module"}