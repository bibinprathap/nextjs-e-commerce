{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// react\nimport React, { useRef, useState } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport useVehicleForm from '~/services/forms/vehicle';\nimport { vehicleApi } from '~/api';\n\nfunction VehicleForm(props) {\n  var location = props.location,\n      _props$onVehicleChang = props.onVehicleChange,\n      onVehicleChange = _props$onVehicleChang === void 0 ? function () {} : _props$onVehicleChang;\n  var intl = useIntl();\n  var internalValue = useRef(null);\n  var cancelVinRequest = useRef(function () {});\n\n  var _useState = useState(false),\n      vinIsLoading = _useState[0],\n      setVinIsLoading = _useState[1];\n\n  var _useState2 = useState(null),\n      vinError = _useState2[0],\n      setVinError = _useState2[1];\n\n  var _useState3 = useState(null),\n      vehicleByFilters = _useState3[0],\n      setVehicleByFilters = _useState3[1];\n\n  var _useState4 = useState(null),\n      vehicleByVin = _useState4[0],\n      setVehicleByVin = _useState4[1];\n\n  var updateValue = function updateValue(args) {\n    var value = _objectSpread({\n      vehicleByVin: vehicleByVin,\n      vehicleByFilters: vehicleByFilters\n    }, args);\n\n    var vehicle = value.vehicleByVin || value.vehicleByFilters;\n\n    if (vehicle !== internalValue.current) {\n      internalValue.current = vehicle;\n      onVehicleChange(vehicle);\n    }\n  };\n\n  var vehicleForm = useVehicleForm({\n    onChange: function onChange(vehicle) {\n      setVehicleByFilters(vehicle);\n      updateValue({\n        vehicleByFilters: vehicle\n      });\n    }\n  });\n\n  var handleVinChange = function handleVinChange(event) {\n    var canceled = false;\n    cancelVinRequest.current();\n\n    cancelVinRequest.current = function () {\n      canceled = true;\n    };\n\n    var value = event.currentTarget.value.trim();\n    setVinIsLoading(value !== '');\n\n    if (value === '') {\n      setVehicleByVin(null);\n      setVinError(null);\n      updateValue({\n        vehicleByVin: null\n      });\n    }\n\n    setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var vehicle;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(value === '' || canceled)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return vehicleApi.getVehicleByVin(value);\n\n            case 5:\n              vehicle = _context.sent;\n\n              if (!canceled) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 8:\n              setVehicleByVin(vehicle);\n              setVinError(null);\n              updateValue({\n                vehicleByVin: vehicle\n              });\n              _context.next = 20;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](2);\n\n              if (!canceled) {\n                _context.next = 17;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 17:\n              setVehicleByVin(null);\n              setVinError(_context.t0);\n              updateValue({\n                vehicleByVin: null\n              });\n\n            case 20:\n              setVinIsLoading(false);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 13]]);\n    })), 350);\n  };\n\n  var rootClasses = classNames('vehicle-form', \"vehicle-form--layout--\".concat(location));\n  return __jsx(\"div\", {\n    className: rootClasses\n  }, vehicleForm.items.map(function (item, itemIdx) {\n    var options = item.options;\n    return __jsx(\"div\", {\n      key: itemIdx,\n      className: classNames('vehicle-form__item', 'vehicle-form__item--select', {\n        'vehicle-form__item--loading': item.loading\n      })\n    }, __jsx(\"select\", {\n      className: \"form-control\",\n      \"aria-label\": item.label,\n      name: item.key,\n      value: item.value,\n      disabled: item.disabled,\n      onChange: function onChange(e) {\n        return vehicleForm.onItemValueChange(itemIdx, e.target.value);\n      }\n    }, __jsx(\"option\", {\n      value: \"none\"\n    }, item.placeholder), options.map(function (option, optionIdx) {\n      return __jsx(\"option\", {\n        key: optionIdx,\n        value: vehicleForm.serializeOption(option, item)\n      }, vehicleForm.serializeOption(option, item));\n    })), __jsx(\"div\", {\n      className: \"vehicle-form__loader\"\n    }));\n  }), __jsx(\"div\", {\n    className: \"vehicle-form__divider\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_OR\"\n  })), __jsx(\"div\", {\n    className: classNames('vehicle-form__item', {\n      'vehicle-form__item--loading': vinIsLoading\n    })\n  }, __jsx(\"div\", {\n    className: \"vehicle-form__item-input\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"vin\",\n    \"aria-label\": intl.formatMessage({\n      id: 'INPUT_VIN_LABEL'\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_VIN_PLACEHOLDER'\n    }),\n    onInput: handleVinChange\n  }), __jsx(\"div\", {\n    className: \"vehicle-form__loader\"\n  })), (vehicleByVin || vinError !== null) && __jsx(\"div\", {\n    className: \"vehicle-form__item-alert\"\n  }, vehicleByVin && __jsx(\"div\", {\n    className: \"alert alert-sm alert-primary my-0\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_ALERT_VEHICLE_FOUND\",\n    values: vehicleByVin\n  })), vinError !== null && __jsx(\"div\", {\n    className: \"alert alert-sm alert-danger my-0\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_ALERT_UNABLE_TO_FIND_VEHICLE_BY_VIN\"\n  })))));\n}\n\nexport default VehicleForm;","map":null,"metadata":{},"sourceType":"module"}