{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable import/prefer-default-export,class-methods-use-this */\n// application\nimport { AbstractFilterBuilder } from '~/fake-server/filters/abstract-filter-builder';\nimport { prepareCategory } from '~/fake-server/endpoints/categories';\nimport { shopCategoriesList, shopCategoriesTree } from '~/fake-server/database/categories';\nexport var CategoryFilterBuilder = /*#__PURE__*/function (_AbstractFilterBuilde) {\n  _inherits(CategoryFilterBuilder, _AbstractFilterBuilde);\n\n  var _super = _createSuper(CategoryFilterBuilder);\n\n  function CategoryFilterBuilder() {\n    var _this;\n\n    _classCallCheck(this, CategoryFilterBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"value\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n\n    return _this;\n  }\n\n  _createClass(CategoryFilterBuilder, [{\n    key: \"test\",\n    value: function test() {\n      return true;\n    }\n  }, {\n    key: \"makeItems\",\n    value: function makeItems(products, value) {\n      this.value = value === undefined ? null : value;\n      var category = shopCategoriesList.find(function (x) {\n        return x.slug === value;\n      });\n\n      if (category) {\n        this.items = [prepareCategory(category, 1)];\n      } else {\n        this.items = shopCategoriesTree.map(function (x) {\n          return prepareCategory(x);\n        });\n      }\n    }\n  }, {\n    key: \"calc\",\n    value: function calc() {}\n  }, {\n    key: \"build\",\n    value: function build() {\n      return {\n        type: 'category',\n        slug: this.slug,\n        name: this.name,\n        items: this.items,\n        value: this.value\n      };\n    }\n  }]);\n\n  return CategoryFilterBuilder;\n}(AbstractFilterBuilder);","map":null,"metadata":{},"sourceType":"module"}