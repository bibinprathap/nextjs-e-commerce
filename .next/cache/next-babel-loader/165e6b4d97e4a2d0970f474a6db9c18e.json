{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport AppImage from '~/components/shared/AppImage';\nimport AppLink from '~/components/shared/AppLink';\nimport MobileMenuPanelController from '~/components/mobile/MobileMenuPanelController';\nimport { ArrowRoundedRight7x11Svg } from '~/svg';\n\nfunction MobileMenuLinks(props) {\n  const {\n    items = [],\n    onItemClick\n  } = props;\n\n  const onInnerItemClick = (event, item) => {\n    const hasSubmenu = item.submenu && item.submenu.length > 0;\n\n    if (hasSubmenu) {\n      event.preventDefault();\n    }\n\n    if (onItemClick) {\n      onItemClick(item);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"mobile-menu__links\"\n  }, __jsx(\"ul\", null, items.map((item, itemIdx) => {\n    var _item$customFields;\n\n    const hasSubmenu = item.submenu && item.submenu.length > 0;\n    const highlighted = ((_item$customFields = item.customFields) === null || _item$customFields === void 0 ? void 0 : _item$customFields.highlight) === true;\n\n    const content = __jsx(React.Fragment, null, item.image !== undefined && __jsx(\"div\", {\n      className: \"mobile-menu__links-image\"\n    }, __jsx(AppImage, {\n      src: item.image\n    })), item.title, hasSubmenu && __jsx(ArrowRoundedRight7x11Svg, null));\n\n    const renderLink = onItemClickInner => {\n      var _item$customFields2;\n\n      return __jsx(React.Fragment, null, item.url !== undefined && __jsx(AppLink, _extends({\n        href: item.url,\n        anchor: hasSubmenu,\n        className: classNames({\n          highlight: highlighted\n        }),\n        onClick: event => onItemClickInner(event, item)\n      }, (_item$customFields2 = item.customFields) === null || _item$customFields2 === void 0 ? void 0 : _item$customFields2.anchorProps), content), item.url === undefined && __jsx(\"button\", {\n        type: \"button\",\n        className: classNames({\n          highlight: highlighted\n        }),\n        onClick: event => onItemClickInner(event, item)\n      }, content));\n    };\n\n    return __jsx(\"li\", {\n      key: itemIdx\n    }, hasSubmenu && __jsx(MobileMenuPanelController, {\n      label: item.title,\n      content: __jsx(MobileMenuLinks, {\n        items: item.submenu,\n        onItemClick: onItemClick\n      })\n    }, open => renderLink((event, item) => {\n      open();\n      onInnerItemClick(event, item);\n    })), !hasSubmenu && renderLink(onInnerItemClick));\n  })));\n}\n\nexport default MobileMenuLinks;","map":null,"metadata":{},"sourceType":"module"}