{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { ArrowRoundedDown12x7Svg } from '~/svg';\nimport FilterCategory from '~/components/filters/FilterCategory';\nimport FilterVehicle from '~/components/filters/FilterVehicle';\nimport { getFilterValue, isDefaultFilterValue, serializeFilterValue } from '~/services/filters';\nimport FilterRange from '~/components/filters/FilterRange';\nimport FilterCheck from '~/components/filters/FilterCheck';\nimport FilterRadio from '~/components/filters/FilterRadio';\nimport FilterRating from '~/components/filters/FilterRating';\nimport FilterColor from '~/components/filters/FilterColor';\nimport Collapse from '~/components/shared/Collapse';\nimport { useShopSetFilterValueThunk } from '~/store/shop/shopHooks';\n\nfunction Filter(props) {\n  var filter = props.filter,\n      value = props.value;\n  var shopSetFilterValue = useShopSetFilterValueThunk();\n  var handleValueChange = useCallback(function (_ref) {\n    var filter = _ref.filter,\n        value = _ref.value;\n    shopSetFilterValue(filter.slug, isDefaultFilterValue(filter, value) ? null : serializeFilterValue(filter, value)).then();\n  }, [shopSetFilterValue]);\n\n  var renderFn = function renderFn(_ref2) {\n    var toggle = _ref2.toggle,\n        setItemRef = _ref2.setItemRef,\n        setContentRef = _ref2.setContentRef;\n    return __jsx(\"div\", {\n      className: \"filter filter--opened\",\n      ref: setItemRef\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: \"filter__title\",\n      onClick: toggle\n    }, filter.name, __jsx(\"span\", {\n      className: \"filter__arrow\"\n    }, __jsx(ArrowRoundedDown12x7Svg, null))), __jsx(\"div\", {\n      className: \"filter__body\",\n      ref: setContentRef\n    }, __jsx(\"div\", {\n      className: \"filter__container\"\n    }, filter.type === 'category' && __jsx(FilterCategory, {\n      options: filter\n    }), filter.type === 'vehicle' && __jsx(FilterVehicle, {\n      options: filter,\n      value: getFilterValue(filter, value),\n      onChangeValue: handleValueChange\n    }), filter.type === 'range' && __jsx(FilterRange, {\n      options: filter,\n      value: getFilterValue(filter, value),\n      onChangeValue: handleValueChange\n    }), filter.type === 'check' && __jsx(FilterCheck, {\n      options: filter,\n      value: getFilterValue(filter, value),\n      onChangeValue: handleValueChange\n    }), filter.type === 'radio' && __jsx(FilterRadio, {\n      options: filter,\n      value: getFilterValue(filter, value),\n      onChangeValue: handleValueChange\n    }), filter.type === 'rating' && __jsx(FilterRating, {\n      options: filter,\n      value: getFilterValue(filter, value),\n      onChangeValue: handleValueChange\n    }), filter.type === 'color' && __jsx(FilterColor, {\n      options: filter,\n      value: getFilterValue(filter, value),\n      onChangeValue: handleValueChange\n    }))));\n  };\n\n  return __jsx(\"div\", {\n    className: \"widget-filters__item\"\n  }, __jsx(Collapse, {\n    toggleClass: \"filter--opened\",\n    render: renderFn\n  }));\n}\n\nexport default React.memo(Filter);","map":null,"metadata":{},"sourceType":"module"}