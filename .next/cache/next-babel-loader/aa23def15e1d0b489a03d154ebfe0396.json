{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React, { useRef, useState } from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport AppImage from '~/components/shared/AppImage';\nimport { ArrowDownSm7x5Svg } from '~/svg';\nimport { useGlobalMousedown } from '~/services/hooks';\n\nfunction Dropdown(props) {\n  const {\n    label,\n    title,\n    items = [],\n    onItemClick\n  } = props;\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const rootRef = useRef(null);\n  const hasLabel = !!label;\n  const hasTitle = !!title;\n  const classes = classNames('topbar__item-button topbar__menu', {\n    'topbar__menu--open': isOpen\n  });\n\n  const handleButtonClick = () => {\n    setIsOpen(prev => !prev);\n  };\n\n  const handleItemClick = item => {\n    setIsOpen(false);\n\n    if (onItemClick) {\n      onItemClick(item);\n    }\n  };\n\n  useGlobalMousedown(event => {\n    if (rootRef.current && !rootRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  }, [setIsOpen, rootRef]);\n  return __jsx(\"div\", {\n    className: classes,\n    ref: rootRef\n  }, __jsx(\"button\", {\n    className: \"topbar__button topbar__button--has-arrow topbar__menu-button\",\n    type: \"button\",\n    onClick: handleButtonClick\n  }, hasLabel && __jsx(\"span\", {\n    className: \"topbar__button-label\"\n  }, label), hasTitle && __jsx(\"span\", {\n    className: \"topbar__button-title\"\n  }, title), __jsx(\"span\", {\n    className: \"topbar__button-arrow\"\n  }, __jsx(ArrowDownSm7x5Svg, null))), __jsx(\"div\", {\n    className: \"topbar__menu-body\"\n  }, items.map((item, index) => __jsx(\"button\", {\n    key: index,\n    className: \"topbar__menu-item\",\n    type: \"button\",\n    onClick: () => handleItemClick(item)\n  }, !!item.image && __jsx(AppImage, {\n    src: item.image,\n    alt: item.title\n  }), __jsx(\"span\", null, item.title)))));\n}\n\nexport default Dropdown;","map":null,"metadata":{},"sourceType":"module"}