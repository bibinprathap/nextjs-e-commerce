{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport AppLink from '~/components/shared/AppLink';\nimport BlockSpace from '~/components/blocks/BlockSpace';\nimport Checkbox from '~/components/shared/Checkbox';\nimport PageTitle from '~/components/shared/PageTitle';\nimport Redirect from '~/components/shared/Redirect';\nimport url from '~/services/url';\nimport { useSignInForm } from '~/services/forms/sign-in';\nimport { useSignUpForm } from '~/services/forms/sign-up';\nimport { useUser } from '~/store/user/userHooks';\nimport { validateEmail } from '~/services/validators';\n\nfunction Page() {\n  var _signInForm$errors$em, _signInForm$errors$em2, _signInForm$errors$pa, _signUpForm$errors$em, _signUpForm$errors$em2, _signUpForm$errors$pa, _signUpForm$errors$co, _signUpForm$errors$co2;\n\n  var intl = useIntl();\n  var user = useUser();\n  var signInForm = useSignInForm();\n  var signUpForm = useSignUpForm();\n\n  if (user) {\n    return __jsx(Redirect, {\n      href: url.accountDashboard()\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(PageTitle, null, intl.formatMessage({\n    id: 'HEADER_LOGIN'\n  })), __jsx(BlockSpace, {\n    layout: \"after-header\"\n  }), __jsx(\"div\", {\n    className: \"block\"\n  }, __jsx(\"div\", {\n    className: \"container container--max--lg\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-6 d-flex\"\n  }, __jsx(\"div\", {\n    className: \"card flex-grow-1 mb-md-0 mr-0 mr-lg-3 ml-0 ml-lg-4\"\n  }, __jsx(\"div\", {\n    className: \"card-body card-body--padding--2\"\n  }, __jsx(\"h3\", {\n    className: \"card-title\"\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_LOGIN\"\n  })), __jsx(\"form\", {\n    onSubmit: signInForm.submit\n  }, signInForm.serverError && __jsx(\"div\", {\n    className: \"alert alert-sm alert-danger\"\n  }, __jsx(FormattedMessage, {\n    id: signInForm.serverError\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"signin-email\"\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_EMAIL_ADDRESS_LABEL\"\n  })), __jsx(\"input\", {\n    id: \"signin-email\",\n    type: \"email\",\n    className: classNames('form-control', {\n      'is-invalid': signInForm.errors.email\n    }),\n    placeholder: \"customer@example.com\",\n    name: \"email\",\n    ref: signInForm.register({\n      required: true,\n      validate: {\n        email: validateEmail\n      }\n    })\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, ((_signInForm$errors$em = signInForm.errors.email) === null || _signInForm$errors$em === void 0 ? void 0 : _signInForm$errors$em.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\"\n  }), ((_signInForm$errors$em2 = signInForm.errors.email) === null || _signInForm$errors$em2 === void 0 ? void 0 : _signInForm$errors$em2.type) === 'email' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_INCORRECT_EMAIL\"\n  }))), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"signin-password\"\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_PASSWORD_LABEL\"\n  })), __jsx(\"input\", {\n    id: \"signin-password\",\n    type: \"password\",\n    className: classNames('form-control', {\n      'is-invalid': signInForm.errors.password\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_PASSWORD_PLACEHOLDER'\n    }),\n    name: \"password\",\n    ref: signInForm.register({\n      required: true\n    })\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, ((_signInForm$errors$pa = signInForm.errors.password) === null || _signInForm$errors$pa === void 0 ? void 0 : _signInForm$errors$pa.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\"\n  })), __jsx(\"small\", {\n    className: \"form-text text-muted\"\n  }, __jsx(AppLink, {\n    href: \"/\"\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_FORGOT_PASSWORD\"\n  })))), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"div\", {\n    className: \"form-check\"\n  }, __jsx(Checkbox, {\n    className: \"form-check-input\",\n    id: \"sign-in-remember\",\n    name: \"remember\",\n    inputRef: signInForm.register()\n  }), __jsx(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"sign-in-remember\"\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_REMEMBER_ME_LABEL\"\n  })))), __jsx(\"div\", {\n    className: \"form-group mb-0\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: classNames('btn', 'btn-primary', 'mt-3', {\n      'btn-loading': signInForm.submitInProgress\n    })\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_LOGIN\"\n  }))))))), __jsx(\"div\", {\n    className: \"col-md-6 d-flex mt-4 mt-md-0\"\n  }, __jsx(\"div\", {\n    className: \"card flex-grow-1 mb-0 ml-0 ml-lg-3 mr-0 mr-lg-4\"\n  }, __jsx(\"div\", {\n    className: \"card-body card-body--padding--2\"\n  }, __jsx(\"h3\", {\n    className: \"card-title\"\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_REGISTER\"\n  })), __jsx(\"form\", {\n    onSubmit: signUpForm.submit\n  }, signUpForm.serverError && __jsx(\"div\", {\n    className: \"alert alert-sm alert-danger\"\n  }, __jsx(FormattedMessage, {\n    id: signUpForm.serverError\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"signup-email\"\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_EMAIL_ADDRESS_LABEL\"\n  })), __jsx(\"input\", {\n    id: \"signup-email\",\n    type: \"email\",\n    className: classNames('form-control', {\n      'is-invalid': signUpForm.errors.email\n    }),\n    placeholder: \"customer@example.com\",\n    name: \"email\",\n    ref: signUpForm.register({\n      required: true,\n      validate: {\n        email: validateEmail\n      }\n    })\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, ((_signUpForm$errors$em = signUpForm.errors.email) === null || _signUpForm$errors$em === void 0 ? void 0 : _signUpForm$errors$em.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\"\n  }), ((_signUpForm$errors$em2 = signUpForm.errors.email) === null || _signUpForm$errors$em2 === void 0 ? void 0 : _signUpForm$errors$em2.type) === 'email' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_INCORRECT_EMAIL\"\n  }))), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"signup-password\"\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_PASSWORD_LABEL\"\n  })), __jsx(\"input\", {\n    id: \"signup-password\",\n    type: \"password\",\n    className: classNames('form-control', {\n      'is-invalid': signUpForm.errors.password\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_PASSWORD_PLACEHOLDER'\n    }),\n    name: \"password\",\n    ref: signUpForm.register({\n      required: true\n    })\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, ((_signUpForm$errors$pa = signUpForm.errors.password) === null || _signUpForm$errors$pa === void 0 ? void 0 : _signUpForm$errors$pa.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\"\n  }))), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"signup-confirm\"\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_PASSWORD_REPEAT_LABEL\"\n  })), __jsx(\"input\", {\n    id: \"signup-confirm\",\n    type: \"password\",\n    className: classNames('form-control', {\n      'is-invalid': signUpForm.errors.confirmPassword\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_PASSWORD_REPEAT_PLACEHOLDER'\n    }),\n    name: \"confirmPassword\",\n    ref: signUpForm.register({\n      required: true,\n      validate: {\n        match: function match(value) {\n          return value === signUpForm.watch('password');\n        }\n      }\n    })\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, ((_signUpForm$errors$co = signUpForm.errors.confirmPassword) === null || _signUpForm$errors$co === void 0 ? void 0 : _signUpForm$errors$co.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\"\n  }), ((_signUpForm$errors$co2 = signUpForm.errors.confirmPassword) === null || _signUpForm$errors$co2 === void 0 ? void 0 : _signUpForm$errors$co2.type) === 'match' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_PASSWORD_DOES_NOT_MATCH\"\n  }))), __jsx(\"div\", {\n    className: \"form-group mb-0\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: classNames('btn', 'btn-primary', 'mt-3', {\n      'btn-loading': signUpForm.submitInProgress\n    })\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_REGISTER\"\n  })))))))))), __jsx(BlockSpace, {\n    layout: \"before-footer\"\n  }));\n}\n\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}