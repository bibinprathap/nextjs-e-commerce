{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// react\nimport React, { useMemo } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl'; // application\n\nimport StatusBadge from '~/components/shared/StatusBadge';\n\nfunction StockStatusBadge(props) {\n  const {\n    stock,\n    className\n  } = props,\n        rootProps = _objectWithoutProperties(props, [\"stock\", \"className\"]);\n\n  const rootClasses = classNames(className);\n  const typesMap = useMemo(() => ({\n    'in-stock': 'success',\n    'out-of-stock': 'failure',\n    'on-backorder': 'warning'\n  }), []);\n  const textMap = useMemo(() => ({\n    'in-stock': __jsx(FormattedMessage, {\n      id: \"TEXT_STOCK_IN_STOCK\"\n    }),\n    'out-of-stock': __jsx(FormattedMessage, {\n      id: \"TEXT_STOCK_OUT_OF_STOCK\"\n    }),\n    'on-backorder': __jsx(FormattedMessage, {\n      id: \"TEXT_STOCK_ON_BACKORDER\"\n    })\n  }), []);\n  return __jsx(StatusBadge, _extends({\n    type: typesMap[stock],\n    text: textMap[stock],\n    className: rootClasses\n  }, rootProps));\n}\n\nexport default StockStatusBadge;","map":null,"metadata":{},"sourceType":"module"}