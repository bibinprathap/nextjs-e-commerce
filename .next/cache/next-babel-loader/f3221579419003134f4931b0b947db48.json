{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// react\nimport React, { useCallback } from 'react'; // application\n\nimport classNames from 'classnames';\nimport BlockHeader from '~/components/blocks/BlockHeader';\nimport BlockMap from '~/components/blocks/BlockMap';\nimport BlockSpace from '~/components/blocks/BlockSpace';\n// data\nimport theme from '~/data/theme';\nimport { shopApi } from '~/api';\nimport { useEnquiry, useEnquiryClose } from '~/store/enquiry/enquiryHooks';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { useForm } from 'react-hook-form';\nimport { useAsyncAction } from '~/store/hooks';\nimport { validateEmail } from '~/services/validators';\nimport { NextSeo } from 'next-seo';\n\nfunction Page() {\n  var _errors$fullname, _errors$email, _errors$email2, _errors$phonenumber, _errors$enquiryconten;\n\n  var intl = useIntl();\n  var enquiry = useEnquiry();\n  var enquiryClose = useEnquiryClose();\n  var toggle = useCallback(function () {\n    if ((enquiry || {\n      open: false\n    }).open) {\n      enquiryClose();\n    }\n  }, [(enquiry || {\n    open: false\n  }).open, enquiryClose]);\n  var formMethods = useForm();\n  var handleSubmit = formMethods.handleSubmit,\n      register = formMethods.register,\n      errors = formMethods.errors,\n      reset = formMethods.reset;\n\n  var _useAsyncAction = useAsyncAction( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return shopApi.sendEnquiry(_objectSpread({}, data));\n\n            case 2:\n              reset();\n              toast.success(intl.formatMessage({\n                id: 'TEXT_TOAST_ENQUIRY_ADDED'\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [reset]),\n      _useAsyncAction2 = _slicedToArray(_useAsyncAction, 2),\n      submit = _useAsyncAction2[0],\n      submitInProgress = _useAsyncAction2[1];\n\n  return __jsx(React.Fragment, null, __jsx(NextSeo, {\n    title: \" No 1 car accessories dubai,sharjah,abu dhabi,uae,Ras Al Khaimah and all over the world\",\n    description: \"Royal auto parts is one of the online market for  import, export and distributor of original and after-market auto accessories dubai,Sharjah,abu dhabi,and all over the world\"\n  }), __jsx(BlockMap, null), __jsx(BlockHeader, {\n    pageTitle: \"Contact Us\",\n    breadcrumb: [{\n      title: 'Home',\n      url: ''\n    }, {\n      title: 'Breadcrumb',\n      url: ''\n    }, {\n      title: 'Current Page',\n      url: ''\n    }],\n    afterHeader: false\n  }), __jsx(\"div\", {\n    className: \"block\"\n  }, __jsx(\"div\", {\n    className: \"container container--max--lg\"\n  }, __jsx(\"div\", {\n    className: \"card\"\n  }, __jsx(\"div\", {\n    className: \"card-body card-body--padding--2\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-12 col-lg-6 pb-4 pb-lg-0\"\n  }, __jsx(\"div\", {\n    className: \"mr-1\"\n  }, __jsx(\"h4\", {\n    className: \"contact-us__header card-title\"\n  }, \"Our Address\"), __jsx(\"div\", {\n    className: \"contact-us__address\"\n  }, theme.contacts.address.map(function (item, index) {\n    return __jsx(\"p\", null, item);\n  }), __jsx(\"p\", null, \"Email: \".concat(theme.contacts.email[0])), __jsx(\"p\", null, __jsx(\"strong\", null, \"Opening Hours\"), __jsx(\"br\", null), \"Saturday To Thursday 9 AM TO 9 PM\"), __jsx(\"p\", null, __jsx(\"strong\", null, \"Comment\"), __jsx(\"br\", null), \"Royal Auto Spare parts Market  is one of the leading online automotive parts dealer. We specialize in Mercedes, BMW, Audi, Volkswagen, Range Rover and Porsche\")))), __jsx(\"div\", {\n    className: \"col-12 col-lg-6\"\n  }, __jsx(\"div\", {\n    className: \"ml-1\"\n  }, __jsx(\"h4\", {\n    className: \"contact-us__header card-title\"\n  }, \"Leave us a Message\"), __jsx(\"form\", {\n    onSubmit: handleSubmit(submit)\n  }, __jsx(\"div\", {\n    className: \"form-row\"\n  }, __jsx(\"div\", {\n    className: \"form-group col-md-6\"\n  }, __jsx(\"label\", {\n    htmlFor: \"form-name\"\n  }, \"Your Name\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"review-fullname\",\n    name: \"fullname\",\n    className: classNames('form-control', {\n      'is-invalid': errors.fullname\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_YOUR_NAME_PLACEHOLDER'\n    }),\n    ref: register({\n      required: true\n    })\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, ((_errors$fullname = errors.fullname) === null || _errors$fullname === void 0 ? void 0 : _errors$fullname.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\"\n  }))), __jsx(\"div\", {\n    className: \"form-group col-md-6\"\n  }, __jsx(\"label\", {\n    htmlFor: \"form-email\"\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"review-email\",\n    name: \"email\",\n    className: classNames('form-control', {\n      'is-invalid': errors.email\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_EMAIL_ADDRESS_PLACEHOLDER'\n    }),\n    ref: register({\n      required: true,\n      validate: {\n        email: validateEmail\n      }\n    })\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\"\n  }), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === 'email' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_INCORRECT_EMAIL\"\n  })))), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"form-subject\"\n  }, \"Phone Number\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"review-phonenumber\",\n    name: \"phonenumber\",\n    className: classNames('form-control', {\n      'is-invalid': errors.phonenumber\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_YOUR_WHATSAPP_PLACEHOLDER'\n    }),\n    ref: register({\n      required: true\n    })\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, ((_errors$phonenumber = errors.phonenumber) === null || _errors$phonenumber === void 0 ? void 0 : _errors$phonenumber.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\"\n  }))), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"form-message\"\n  }, \"Message\"), __jsx(\"textarea\", {\n    id: \"review-enquirycontent\",\n    rows: 6,\n    name: \"enquirycontent\",\n    className: classNames('form-control', {\n      'is-invalid': errors.enquirycontent\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_YOUR_REVIEW_PLACEHOLDER'\n    }),\n    ref: register({\n      required: true\n    })\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, ((_errors$enquiryconten = errors.enquirycontent) === null || _errors$enquiryconten === void 0 ? void 0 : _errors$enquiryconten.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\"\n  }))), __jsx(\"button\", {\n    type: \"submit\",\n    className: classNames('btn', 'btn-primary', {\n      'btn-loading': submitInProgress\n    })\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_POST_ENQUIRY\"\n  })))))))))), __jsx(BlockSpace, {\n    layout: \"before-footer\"\n  }));\n}\n\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}