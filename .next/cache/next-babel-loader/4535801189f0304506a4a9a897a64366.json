{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\n// react\nimport React, { useCallback, useRef, useState } from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport AppLink from '~/components/shared/AppLink';\nimport Megamenu from '~/components/header/Megamenu';\nimport { ArrowRoundedDown9x6Svg, ArrowRoundedRight7x11Svg, Menu16x12Svg } from '~/svg';\nimport { useGlobalMousedown } from '~/services/hooks'; // data\n\nimport dataHeaderDepartments from '~/data/headerDepartments';\n\nfunction Departments(props) {\n  var label = props.label;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var _useState2 = useState(null),\n      currentItem = _useState2[0],\n      setCurrentItem = _useState2[1];\n\n  var rootRef = useRef(null);\n\n  var handleButtonClick = function handleButtonClick() {\n    setIsOpen(function (state) {\n      return !state;\n    });\n  };\n\n  var handleBodyMouseLeave = function handleBodyMouseLeave() {\n    setCurrentItem(null);\n  };\n\n  var handleListPaddingMouseEnter = function handleListPaddingMouseEnter() {\n    setCurrentItem(null);\n  };\n\n  var handleItemMouseEnter = function handleItemMouseEnter(item) {\n    setCurrentItem(item);\n  };\n\n  var handleItemClick = useCallback(function () {\n    setIsOpen(false);\n    setCurrentItem(null);\n  }, [setIsOpen, setCurrentItem]);\n  useGlobalMousedown(function (event) {\n    if (rootRef.current && !rootRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  }, [setIsOpen, rootRef]);\n  var classes = classNames('departments', {\n    'departments--open': isOpen\n  });\n  return __jsx(\"div\", {\n    className: classes,\n    ref: rootRef\n  }, __jsx(\"button\", {\n    className: \"departments__button\",\n    type: \"button\",\n    onClick: handleButtonClick\n  }, __jsx(\"span\", {\n    className: \"departments__button-icon\"\n  }, __jsx(Menu16x12Svg, null)), __jsx(\"span\", {\n    className: \"departments__button-title\"\n  }, label), __jsx(\"span\", {\n    className: \"departments__button-arrow\"\n  }, __jsx(ArrowRoundedDown9x6Svg, null))), __jsx(\"div\", {\n    className: \"departments__menu\"\n  }, __jsx(\"div\", {\n    className: \"departments__arrow\"\n  }), __jsx(\"div\", {\n    className: \"departments__body\",\n    onMouseLeave: handleBodyMouseLeave\n  }, __jsx(\"ul\", {\n    className: \"departments__list\"\n  }, __jsx(\"li\", {\n    className: \"departments__list-padding\",\n    role: \"presentation\",\n    onMouseEnter: handleListPaddingMouseEnter\n  }), dataHeaderDepartments.map(function (item, index) {\n    var _item$submenu, _item$customFields;\n\n    var itemHasSubmenu = !!item.submenu;\n    var itemClasses = classNames('departments__item', {\n      'departments__item--has-submenu': itemHasSubmenu,\n      'departments__item--submenu--megamenu': ((_item$submenu = item.submenu) === null || _item$submenu === void 0 ? void 0 : _item$submenu.type) === 'megamenu',\n      'departments__item--hover': item === currentItem\n    });\n    return __jsx(\"li\", {\n      className: itemClasses,\n      key: index,\n      onMouseEnter: function onMouseEnter() {\n        return handleItemMouseEnter(item);\n      }\n    }, __jsx(AppLink, _extends({\n      className: \"departments__item-link\",\n      href: item.url,\n      onClick: function onClick() {\n        return handleItemClick();\n      }\n    }, (_item$customFields = item.customFields) === null || _item$customFields === void 0 ? void 0 : _item$customFields.anchorProps), item.title, itemHasSubmenu && __jsx(\"span\", {\n      className: \"departments__item-arrow\"\n    }, __jsx(ArrowRoundedRight7x11Svg, null))));\n  }), __jsx(\"li\", {\n    className: \"departments__list-padding\",\n    role: \"presentation\",\n    onMouseEnter: handleListPaddingMouseEnter\n  })), __jsx(\"div\", {\n    className: \"departments__menu-container\"\n  }, dataHeaderDepartments.map(function (item, index) {\n    if (!item.submenu) {\n      return null;\n    }\n\n    var itemClasses = classNames('departments__megamenu', \"departments__megamenu--size--\".concat(item.submenu.size), {\n      'departments__megamenu--open': item === currentItem\n    });\n    return __jsx(Megamenu, {\n      className: itemClasses,\n      menu: item.submenu,\n      key: index,\n      onItemClick: handleItemClick\n    });\n  })))));\n}\n\nexport default React.memo(Departments);","map":null,"metadata":{},"sourceType":"module"}