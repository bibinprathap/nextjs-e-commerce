{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React, { useMemo } from 'react'; // third-party\n\nimport { useIntl } from 'react-intl'; // application\n\nimport BlockBanners from '~/components/blocks/BlockBanners';\nimport BlockBrands from '~/components/blocks/BlockBrands';\nimport BlockCategories from '~/components/blocks/BlockCategories';\nimport BlockFeatures from '~/components/blocks/BlockFeatures';\nimport BlockPosts from '~/components/blocks/BlockPosts';\nimport BlockProductsCarousel from '~/components/blocks/BlockProductsCarousel';\nimport BlockProductsColumns from '~/components/blocks/BlockProductsColumns';\nimport BlockSale from '~/components/blocks/BlockSale';\nimport BlockSlideshow from '~/components/blocks/BlockSlideshow';\nimport BlockSpace from '~/components/blocks/BlockSpace';\nimport url from '~/services/url';\nimport { optionsSetAll } from '~/store/options/optionsActions';\nimport { shopApi, blogApi } from '~/api';\nimport { useDeferredData, useProductColumns, useProductTabs } from '~/services/hooks';\nimport { wrapper } from '~/store/store';\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const dispatch = context.store.dispatch;\n  await dispatch(optionsSetAll({\n    desktopHeaderVariant: 'classic/one',\n    mobileHeaderVariant: 'one'\n  }));\n});\n\nfunction Page() {\n  const intl = useIntl();\n  const slides = useMemo(() => [{\n    url: '/catalog/products',\n    desktopImage: '/images/slides/slide-3.jpg',\n    mobileImage: '/images/slides/slide-3-mobile.jpg',\n    offer: '30% OFF',\n    title: 'When Buying Parts <br>With Installation',\n    details: 'Installation of parts in the services of <br>our partners.',\n    buttonLabel: 'Shop Now'\n  }, {\n    url: '/catalog/products',\n    desktopImage: '/images/slides/slide-2.jpg',\n    mobileImage: '/images/slides/slide-2-mobile.jpg',\n    title: 'Not enough <br>spare parts?',\n    details: 'We have everything you need â€“ replacement parts, <br>performance parts, accessories, oil & fluids, <br>tools and much more...',\n    buttonLabel: 'Shop Now'\n  }, {\n    url: '/catalog/products',\n    desktopImage: '/images/slides/slide-1.jpg',\n    mobileImage: '/images/slides/slide-1-mobile.jpg',\n    offer: '30% OFF',\n    title: 'Big Choice Of <br>Wheel Tires',\n    details: 'Any size and diameter, with or without spikes, <br>summer or winter, rain or snow.',\n    buttonLabel: 'Shop Now'\n  }], []);\n  const brands = useDeferredData(() => shopApi.getBrands({\n    limit: 16\n  }), []);\n  const popularCategories = useDeferredData(() => shopApi.getCategories({\n    slugs: ['headlights-lighting', 'fuel-system', 'body-parts', 'interior-parts', 'tires-wheels', 'engine-drivetrain'],\n    depth: 1\n  }), []);\n  /**\n   * Featured products.\n   */\n\n  const featuredProducts = useProductTabs(useMemo(() => [{\n    id: 1,\n    name: 'All',\n    categorySlug: null\n  }, {\n    id: 2,\n    name: 'Power Tools',\n    categorySlug: 'power-tools'\n  }, {\n    id: 3,\n    name: 'Hand Tools',\n    categorySlug: 'hand-tools'\n  }, {\n    id: 4,\n    name: 'Plumbing',\n    categorySlug: 'plumbing'\n  }], []), tab => shopApi.getFeaturedProducts(tab.categorySlug, 8));\n  const blockSale = useDeferredData(() => shopApi.getSpecialOffers(8), []);\n  const latestPosts = useDeferredData(() => blogApi.getLatestPosts(8), []);\n  const latestPostsLinks = useMemo(() => [{\n    title: 'Special Offers',\n    url: url.blog()\n  }, {\n    title: 'New Arrivals',\n    url: url.blog()\n  }, {\n    title: 'Reviews',\n    url: url.blog()\n  }], []);\n  /**\n   * Product columns.\n   */\n\n  const columns = useProductColumns(useMemo(() => [{\n    title: 'Top Rated Products',\n    source: () => shopApi.getTopRatedProducts(null, 3)\n  }, {\n    title: 'Special Offers',\n    source: () => shopApi.getSpecialOffers(3)\n  }, {\n    title: 'Bestsellers',\n    source: () => shopApi.getPopularProducts(null, 3)\n  }], []));\n  return __jsx(React.Fragment, null, __jsx(BlockSpace, {\n    layout: \"divider-xs\"\n  }), __jsx(BlockSlideshow, {\n    slides: slides\n  }), __jsx(BlockSpace, {\n    layout: \"divider-nl\"\n  }), __jsx(BlockBrands, {\n    layout: \"columns-8-full\",\n    brands: brands.data\n  }), __jsx(BlockSpace, {\n    layout: \"divider-nl\"\n  }), __jsx(BlockCategories, {\n    blockTitle: intl.formatMessage({\n      id: 'HEADER_POPULAR_CATEGORIES'\n    }),\n    categories: popularCategories.data\n  }), __jsx(BlockSpace, {\n    layout: \"divider-nl\"\n  }), __jsx(BlockProductsCarousel, {\n    blockTitle: intl.formatMessage({\n      id: 'HEADER_FEATURED_PRODUCTS'\n    }),\n    layout: \"grid-5\",\n    loading: featuredProducts.isLoading,\n    products: featuredProducts.data,\n    groups: featuredProducts.tabs,\n    currentGroup: featuredProducts.tabs.find(x => x.current),\n    onChangeGroup: featuredProducts.handleTabChange\n  }), __jsx(BlockSpace, {\n    layout: \"divider-nl\"\n  }), __jsx(BlockBanners, null), __jsx(BlockSpace, {\n    layout: \"divider-nl\"\n  }), __jsx(BlockSale, {\n    products: blockSale.data,\n    loading: blockSale.isLoading\n  }), __jsx(BlockSpace, {\n    layout: \"divider-nl\"\n  }), __jsx(BlockPosts, {\n    blockTitle: intl.formatMessage({\n      id: 'HEADER_LATEST_NEWS'\n    }),\n    layout: \"list\",\n    loading: latestPosts.isLoading,\n    posts: latestPosts.data,\n    links: latestPostsLinks\n  }), __jsx(BlockSpace, {\n    layout: \"divider-nl\",\n    className: \"d-xl-block d-none\"\n  }), __jsx(BlockProductsColumns, {\n    columns: columns\n  }), __jsx(BlockSpace, {\n    layout: \"divider-nl\"\n  }), __jsx(BlockFeatures, {\n    layout: \"bottom-strip\"\n  }));\n}\n\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}