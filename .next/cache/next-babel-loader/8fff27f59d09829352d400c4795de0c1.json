{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// application\nimport { baseUrl } from '~/services/utils';\n// data\nimport dataShopLanguages, { dataShopDefaultLocale } from '~/data/shopLanguages';\nexport function getDefaultLocale() {\n  return dataShopDefaultLocale;\n}\nexport function getAllLanguages() {\n  return dataShopLanguages;\n}\nexport function getDefaultLanguage() {\n  var language = getAllLanguages().find(function (language) {\n    return language.locale === getDefaultLocale();\n  });\n\n  if (!language) {\n    throw new Error('Default language not found.');\n  }\n\n  return language;\n}\nexport function getLanguageByPath(path) {\n  return getAllLanguages().find(function (language) {\n    var rg = new RegExp(\"^\\\\/\".concat(language.locale, \"(\\\\/|$)\"));\n    return rg.test(path);\n  }) || null;\n}\nexport function getLanguageByLocale(locale) {\n  return getAllLanguages().find(function (language) {\n    return language.locale === locale;\n  }) || null;\n}\n\nfunction loadTranslation(_x) {\n  return _loadTranslation.apply(this, arguments);\n}\n\nfunction _loadTranslation() {\n  _loadTranslation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(locale) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!true) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", fetch(baseUrl(\"/i18n/\".concat(locale, \".json\"))).then(function (response) {\n              return response.json();\n            }));\n\n          case 2:\n            _context.next = 4;\n            return import(\"../../../public/i18n/\".concat(locale, \".json\"));\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent[\"default\"]);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadTranslation.apply(this, arguments);\n}\n\nexport function loadMessages(_x2) {\n  return _loadMessages.apply(this, arguments);\n}\n\nfunction _loadMessages() {\n  _loadMessages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(locale) {\n    var baseMessages, mainMessages;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            baseMessages = locale === getDefaultLocale() ? Promise.resolve({}) : loadTranslation(getDefaultLocale());\n            mainMessages = loadTranslation(locale);\n            _context2.t0 = _objectSpread;\n            _context2.t1 = _objectSpread;\n            _context2.t2 = {};\n            _context2.next = 7;\n            return baseMessages;\n\n          case 7:\n            _context2.t3 = _context2.sent;\n            _context2.t4 = (0, _context2.t1)(_context2.t2, _context2.t3);\n            _context2.next = 11;\n            return mainMessages;\n\n          case 11:\n            _context2.t5 = _context2.sent;\n            return _context2.abrupt(\"return\", (0, _context2.t0)(_context2.t4, _context2.t5));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loadMessages.apply(this, arguments);\n}\n\nexport function removePrefix(path) {\n  var languages = getAllLanguages();\n\n  for (var i = 0; i < languages.length; i += 1) {\n    var language = languages[i];\n    var rg = new RegExp(\"^\\\\/\".concat(language.locale, \"(\\\\/|$)\"));\n\n    if (rg.test(path)) {\n      return path.substr(language.locale.length + 1);\n    }\n  }\n\n  return path;\n}","map":null,"metadata":{},"sourceType":"module"}