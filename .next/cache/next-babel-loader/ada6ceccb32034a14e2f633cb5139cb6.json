{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// react\nimport React, { useMemo, useState } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { useIntl } from 'react-intl'; // application\n\nimport AnalogsTable from '~/components/shop/AnalogsTable';\nimport AppLink from '~/components/shared/AppLink';\nimport ReviewsView from '~/components/shop/ReviewsView';\nimport Specification from '~/components/shop/Specification';\n\nfunction ProductTabs(props) {\n  var _tabs$;\n\n  const intl = useIntl();\n\n  const {\n    product,\n    layout,\n    className\n  } = props,\n        rootProps = _objectWithoutProperties(props, [\"product\", \"layout\", \"className\"]);\n\n  const spec = useMemo(() => product.type.attributeGroups.map(group => _objectSpread(_objectSpread({}, group), {}, {\n    attributes: group.attributes.map(attribute => product.attributes.find(x => x.slug === attribute) || null).filter(x => x !== null)\n  })).filter(x => x.attributes.length > 0), [product]);\n  const tabs = useMemo(() => [{\n    id: 'product-tab-description',\n    title: intl.formatMessage({\n      id: 'TEXT_TAB_DESCRIPTION'\n    }),\n    content: __jsx(\"div\", {\n      className: \"typography\",\n      dangerouslySetInnerHTML: {\n        __html: product.description\n      }\n    })\n  }, {\n    id: 'product-tab-specification',\n    title: intl.formatMessage({\n      id: 'TEXT_TAB_SPECIFICATION'\n    }),\n    content: __jsx(Specification, {\n      groups: spec\n    })\n  }, {\n    id: 'product-tab-reviews',\n    title: intl.formatMessage({\n      id: 'TEXT_TAB_REVIEWS'\n    }),\n    content: __jsx(ReviewsView, {\n      productId: product.id,\n      productPageLayout: layout\n    }),\n    counter: product.reviews,\n    showCounter: typeof product.reviews === 'number' && product.reviews > 0\n  }, {\n    id: 'product-tab-analogs',\n    title: intl.formatMessage({\n      id: 'TEXT_TAB_ANALOGS'\n    }),\n    content: __jsx(AnalogsTable, {\n      productId: product.id\n    })\n  }], [layout, product, spec, intl]);\n  const {\n    0: activeTab,\n    1: setActiveTab\n  } = useState((_tabs$ = tabs[0]) === null || _tabs$ === void 0 ? void 0 : _tabs$.id);\n  const rootClasses = classNames(`product-tabs product-tabs--layout--${layout}`, className);\n  return __jsx(\"div\", _extends({\n    className: rootClasses\n  }, rootProps), tabs.map((tab, index) => __jsx(\"div\", {\n    key: index,\n    id: tab.id\n  })), __jsx(\"ul\", {\n    className: \"product-tabs__list\"\n  }, tabs.map((tab, index) => __jsx(\"li\", {\n    key: index,\n    className: classNames('product-tabs__item', {\n      'product-tabs__item--active': activeTab === tab.id\n    })\n  }, __jsx(AppLink, {\n    href: {\n      href: {\n        hash: tab.id\n      }\n    },\n    onClick: () => setActiveTab(tab.id)\n  }, tab.title, tab.showCounter && __jsx(\"span\", {\n    className: \"product-tabs__item-counter\"\n  }, tab.counter))))), __jsx(\"div\", {\n    className: \"product-tabs__content\"\n  }, tabs.map((tab, index) => __jsx(\"div\", {\n    key: index,\n    className: classNames('product-tabs__pane', {\n      'product-tabs__pane--active': activeTab === tab.id\n    })\n  }, tab.content))));\n}\n\nexport default ProductTabs;","map":null,"metadata":{},"sourceType":"module"}