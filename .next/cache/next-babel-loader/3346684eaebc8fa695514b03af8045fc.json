{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames'; // application\n\nimport AppImage from '~/components/shared/AppImage';\nimport MegamenuLinks from '~/components/header/MegamenuLinks';\n\nfunction Megamenu(props) {\n  const {\n    menu,\n    onItemClick,\n    className\n  } = props,\n        rootProps = _objectWithoutProperties(props, [\"menu\", \"onItemClick\", \"className\"]);\n\n  const hasImage = !!menu.image;\n  const rootClasses = classNames('megamenu', className);\n  return __jsx(\"div\", _extends({\n    className: rootClasses\n  }, rootProps), hasImage && __jsx(\"div\", {\n    className: \"megamenu__image\"\n  }, __jsx(AppImage, {\n    className: \"reflect-rtl\",\n    src: menu.image\n  })), __jsx(\"div\", {\n    className: \"row\"\n  }, menu.columns.map((column, columnIndex) => {\n    var _column$links;\n\n    const columnClasses = classNames(`col-${column.size}`);\n    const hasLinks = ((_column$links = column.links) === null || _column$links === void 0 ? void 0 : _column$links.length) > 0;\n    return __jsx(\"div\", {\n      className: columnClasses,\n      key: columnIndex\n    }, hasLinks && __jsx(MegamenuLinks, {\n      className: \"megamenu__links\",\n      links: column.links,\n      onItemClick: onItemClick\n    }));\n  })));\n}\n\nexport default Megamenu;","map":null,"metadata":{},"sourceType":"module"}