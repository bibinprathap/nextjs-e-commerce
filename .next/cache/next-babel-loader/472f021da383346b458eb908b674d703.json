{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React, { useEffect, useState } from 'react'; // third-party\n\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport AccountLayout from '~/components/account/AccountLayout';\nimport AddressCard from '~/components/shared/AddressCard';\nimport AppLink from '~/components/shared/AppLink';\nimport CurrencyFormat from '~/components/shared/CurrencyFormat';\nimport PageTitle from '~/components/shared/PageTitle';\nimport url from '~/services/url';\nimport { accountApi } from '~/api';\nimport { useAppRouter } from '~/services/router';\n\nfunction Page() {\n  const intl = useIntl();\n  const router = useAppRouter();\n  const orderId = parseFloat(typeof router.query.id === 'string' ? router.query.id : '0');\n  const {\n    0: order,\n    1: setOrder\n  } = useState(null);\n  useEffect(() => {\n    let canceled = false;\n    accountApi.getOrderById(orderId).then(result => {\n      if (canceled) {\n        return;\n      }\n\n      setOrder(result);\n    });\n    return () => {\n      canceled = true;\n    };\n  }, [orderId]);\n\n  if (!order) {\n    return null;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"card\"\n  }, __jsx(PageTitle, null, intl.formatMessage({\n    id: 'TEXT_ORDER_WITH_NUMBER'\n  }, {\n    number: order.number\n  })), __jsx(\"div\", {\n    className: \"order-header\"\n  }, __jsx(\"div\", {\n    className: \"order-header__actions\"\n  }, __jsx(AppLink, {\n    href: url.accountOrders(),\n    className: \"btn btn-xs btn-secondary\"\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_BACK_TO_LIST\"\n  }))), __jsx(\"h5\", {\n    className: \"order-header__title\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_ORDER_WITH_NUMBER\",\n    values: {\n      number: order.number\n    }\n  })), __jsx(\"div\", {\n    className: \"order-header__subtitle\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_ORDER_SUMMARY\",\n    values: {\n      date: __jsx(\"mark\", null, __jsx(FormattedMessage, {\n        id: \"TEXT_ORDER_SUMMARY_FORMAT_DATE\",\n        values: {\n          date: Date.parse(order.createdAt)\n        }\n      })),\n      status: __jsx(\"mark\", null, __jsx(FormattedMessage, {\n        id: `TEXT_ORDER_STATUS_${order.status}`\n      }))\n    }\n  }))), __jsx(\"div\", {\n    className: \"card-divider\"\n  }), __jsx(\"div\", {\n    className: \"card-table\"\n  }, __jsx(\"div\", {\n    className: \"table-responsive-sm\"\n  }, __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, __jsx(FormattedMessage, {\n    id: \"TABLE_PRODUCT\"\n  })), __jsx(\"th\", null, __jsx(FormattedMessage, {\n    id: \"TABLE_TOTAL\"\n  })))), __jsx(\"tbody\", {\n    className: \"card-table__body card-table__body--merge-rows\"\n  }, order.items.map((item, index) => __jsx(\"tr\", {\n    key: index\n  }, __jsx(\"td\", null, `${item.product.name} Ã— ${item.quantity}`), __jsx(\"td\", null, __jsx(CurrencyFormat, {\n    value: item.total\n  }))))), order.totals.length > 0 && __jsx(\"tbody\", {\n    className: \"card-table__body card-table__body--merge-rows\"\n  }, __jsx(\"tr\", null, __jsx(\"th\", null, __jsx(FormattedMessage, {\n    id: \"TABLE_SUBTOTAL\"\n  })), __jsx(\"td\", null, __jsx(CurrencyFormat, {\n    value: order.subtotal\n  }))), order.totals.map((total, index) => __jsx(\"tr\", {\n    key: index\n  }, __jsx(\"th\", null, __jsx(FormattedMessage, {\n    id: `TABLE_TOTAL_${total.title}`\n  })), __jsx(\"td\", null, __jsx(CurrencyFormat, {\n    value: total.price\n  }))))), __jsx(\"tfoot\", null, __jsx(\"tr\", null, __jsx(\"th\", null, __jsx(FormattedMessage, {\n    id: \"TABLE_TOTAL\"\n  })), __jsx(\"td\", null, __jsx(CurrencyFormat, {\n    value: order.total\n  })))))))), __jsx(\"div\", {\n    className: \"row mt-3 no-gutters mx-n2\"\n  }, __jsx(\"div\", {\n    className: \"col-sm-6 col-12 px-2\"\n  }, __jsx(AddressCard, {\n    address: order.billingAddress,\n    featured: true,\n    label: __jsx(FormattedMessage, {\n      id: \"TEXT_BILLING_ADDRESS\"\n    })\n  })), __jsx(\"div\", {\n    className: \"col-sm-6 col-12 px-2 mt-sm-0 mt-3\"\n  }, __jsx(AddressCard, {\n    address: order.shippingAddress,\n    featured: true,\n    label: __jsx(FormattedMessage, {\n      id: \"TEXT_SHIPPING_ADDRESS\"\n    })\n  }))));\n}\n\nPage.Layout = AccountLayout;\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}