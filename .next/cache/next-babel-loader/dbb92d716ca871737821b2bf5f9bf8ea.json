{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// application\nimport { getActiveFilters, getResetValue, hasHandler } from '~/services/filters';\nimport { SHOP_NAMESPACE } from '~/store/shop/shopTypes';\nimport { SHOP_FETCH_CATEGORY_SUCCESS, SHOP_FETCH_PRODUCTS_LIST_START, SHOP_FETCH_PRODUCTS_LIST_SUCCESS, SHOP_HYDRATE, SHOP_INIT, SHOP_RESET_FILTER, SHOP_RESET_FILTERS, SHOP_SET_FILTER_VALUE, SHOP_SET_OPTION_VALUE } from '~/store/shop/shopActionTypes';\nconst initialState = {\n  init: false,\n  categorySlug: null,\n  categoryIsLoading: true,\n  category: null,\n  productsListIsLoading: true,\n  productsList: null,\n  options: {},\n  filters: {},\n  activeFilters: [],\n  removedFilters: [],\n  currentFilters: []\n};\n\nfunction shopReducerFetchProductsListSuccess(state, action) {\n  const activeFilters = action.productsList.filters.filter(x => hasHandler(x)).reduce((acc, filter) => [...acc, ...getActiveFilters(filter)], []);\n  console.log(action.productsList);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    productsListIsLoading: false,\n    productsList: action.productsList,\n    activeFilters,\n    removedFilters: [],\n    currentFilters: activeFilters\n  });\n}\n\nfunction shopReducerSetFilterValue(state, action) {\n  const currentFilters = _objectSpread({}, state.filters);\n\n  let filters;\n\n  if (action.value !== null) {\n    filters = _objectSpread(_objectSpread({}, currentFilters), {}, {\n      [action.filter]: action.value\n    });\n  } else {\n    delete currentFilters[action.filter];\n    filters = _objectSpread({}, currentFilters);\n  }\n\n  return _objectSpread(_objectSpread({}, state), {}, {\n    options: _objectSpread(_objectSpread({}, state.options), {}, {\n      page: 1\n    }),\n    filters\n  });\n}\n\nfunction shopReducerResetFilter(state, action) {\n  if (!hasHandler(action.activeFilter.original)) {\n    return state;\n  }\n\n  let {\n    removedFilters\n  } = state;\n\n  if (!removedFilters.includes(action.activeFilter)) {\n    removedFilters = [...removedFilters, action.activeFilter];\n  }\n\n  let {\n    currentFilters\n  } = state;\n\n  if (currentFilters.includes(action.activeFilter)) {\n    currentFilters = currentFilters.filter(x => x !== action.activeFilter);\n  } // All removed filters with the same slug.\n\n\n  const all = removedFilters.filter(x => x.original.slug === action.activeFilter.original.slug);\n  const value = getResetValue(all); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  const _state$filters = state.filters,\n        _action$activeFilter$ = action.activeFilter.original.slug,\n        {\n    [_action$activeFilter$]: _\n  } = _state$filters,\n        filters = _objectWithoutProperties(_state$filters, [_action$activeFilter$].map(_toPropertyKey));\n\n  if (value !== null) {\n    filters[action.activeFilter.original.slug] = value;\n  }\n\n  return _objectSpread(_objectSpread({}, state), {}, {\n    options: _objectSpread(_objectSpread({}, state.options), {}, {\n      page: 1\n    }),\n    filters,\n    removedFilters,\n    currentFilters\n  });\n}\n\nfunction shopReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOP_HYDRATE:\n      return action.payload[SHOP_NAMESPACE];\n\n    case SHOP_INIT:\n      return _objectSpread(_objectSpread({}, initialState), {}, {\n        categorySlug: action.categorySlug,\n        options: action.options,\n        filters: action.filters\n      });\n\n    case SHOP_FETCH_CATEGORY_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        init: true,\n        categoryIsLoading: false,\n        category: action.category\n      });\n\n    case SHOP_FETCH_PRODUCTS_LIST_START:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        productsListIsLoading: true\n      });\n\n    case SHOP_FETCH_PRODUCTS_LIST_SUCCESS:\n      return shopReducerFetchProductsListSuccess(state, action);\n\n    case SHOP_SET_OPTION_VALUE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        options: _objectSpread(_objectSpread({}, state.options), {}, {\n          page: 1,\n          [action.option]: action.value\n        })\n      });\n\n    case SHOP_SET_FILTER_VALUE:\n      return shopReducerSetFilterValue(state, action);\n\n    case SHOP_RESET_FILTERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        options: _objectSpread(_objectSpread({}, state.options), {}, {\n          page: 1\n        }),\n        filters: {}\n      });\n\n    case SHOP_RESET_FILTER:\n      return shopReducerResetFilter(state, action);\n\n    default:\n      return state;\n  }\n}\n\nexport default shopReducer;","map":null,"metadata":{},"sourceType":"module"}