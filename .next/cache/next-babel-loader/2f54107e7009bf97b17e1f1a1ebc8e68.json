{"ast":null,"code":"// react\nimport { useCallback } from 'react'; // application\n\nimport { SHOP_NAMESPACE } from '~/store/shop/shopTypes';\nimport { useAppAction, useAppSelector } from '~/store/hooks';\nimport { shopResetFiltersThunk, shopResetFilterThunk, shopSetFilterValueThunk, shopSetOptionValueThunk } from '~/store/shop/shopActions';\nexport function useShopSelector(selector) {\n  return useAppSelector(function (state) {\n    return selector(state[SHOP_NAMESPACE]);\n  });\n}\nexport var useShop = function useShop() {\n  return useShopSelector(function (state) {\n    return state;\n  });\n};\nexport var useShopProductsListIsLoading = function useShopProductsListIsLoading() {\n  return useShopSelector(function (state) {\n    return state.productsListIsLoading;\n  });\n};\nexport var useShopProductsList = function useShopProductsList() {\n  return useShopSelector(function (state) {\n    return state.productsList;\n  });\n};\nexport var useShopOptions = function useShopOptions() {\n  return useShopSelector(function (state) {\n    return state.options;\n  });\n};\nexport var useShopFilters = function useShopFilters() {\n  return useShopSelector(function (state) {\n    var _state$productsList;\n\n    return ((_state$productsList = state.productsList) === null || _state$productsList === void 0 ? void 0 : _state$productsList.filters) || [];\n  });\n};\nexport var useShopFilterValues = function useShopFilterValues() {\n  return useShopSelector(function (state) {\n    return state.filters;\n  });\n};\nexport var useShopResetFiltersThunk = function useShopResetFiltersThunk() {\n  return useAppAction(shopResetFiltersThunk);\n};\nexport var useShopResetFilterThunk = function useShopResetFilterThunk() {\n  return useAppAction(shopResetFilterThunk);\n};\nexport var useShopSetOptionValueThunk = function useShopSetOptionValueThunk() {\n  return useAppAction(shopSetOptionValueThunk);\n};\nexport var useShopSetFilterValueThunk = function useShopSetFilterValueThunk() {\n  return useAppAction(shopSetFilterValueThunk);\n};\nexport function useSetOption(option, filterValueFn, productsList) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var callback = useCallback(filterValueFn, []);\n  var shopSetOptionValue = useShopSetOptionValueThunk();\n  return useCallback(function (data) {\n    shopSetOptionValue(option, callback(data), productsList, options).then();\n  }, [shopSetOptionValue, option, callback]);\n}","map":null,"metadata":{},"sourceType":"module"}