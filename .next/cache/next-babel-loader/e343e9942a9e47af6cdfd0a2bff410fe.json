{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React, { useCallback, useMemo } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { Controller, FormProvider } from 'react-hook-form';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal } from 'reactstrap'; // application\n\nimport AppLink from '~/components/shared/AppLink';\nimport AsyncAction from '~/components/shared/AsyncAction';\nimport CurrencyFormat from '~/components/shared/CurrencyFormat';\nimport InputNumber from '~/components/shared/InputNumber';\nimport ProductForm from '~/components/shop/ProductForm';\nimport ProductGallery from '~/components/shop/ProductGallery';\nimport Rating from '~/components/shared/Rating';\nimport StockStatusBadge from '~/components/shared/StockStatusBadge';\nimport url from '~/services/url';\nimport { Compare16Svg, Cross12Svg, Wishlist16Svg } from '~/svg';\nimport { useCompareAddItem } from '~/store/compare/compareHooks';\nimport { useProductForm } from '~/services/forms/product';\nimport { useQuickview, useQuickviewClose } from '~/store/quickview/quickviewHooks';\nimport { useWishlistAddItem } from '~/store/wishlist/wishlistHooks';\n\nfunction Quickview() {\n  var quickview = useQuickview();\n  var quickviewClose = useQuickviewClose();\n  var wishlistAddItem = useWishlistAddItem();\n  var compareAddItem = useCompareAddItem();\n  var product = quickview.product;\n  var image = useMemo(function () {\n    return (product === null || product === void 0 ? void 0 : product.images) || [];\n  }, [product]);\n  var productForm = useProductForm(product);\n  var toggle = useCallback(function () {\n    if (quickview.open) {\n      quickviewClose();\n    }\n  }, [quickview.open, quickviewClose]);\n\n  if (!product) {\n    return null;\n  }\n\n  var productTemplate = __jsx(\"div\", {\n    className: \"quickview__product\"\n  }, __jsx(\"div\", {\n    className: \"quickview__product-name\"\n  }, product.name), __jsx(\"div\", {\n    className: \"quickview__product-rating\"\n  }, __jsx(\"div\", {\n    className: \"quickview__product-rating-stars\"\n  }, __jsx(Rating, {\n    value: product.rating || 0\n  })), __jsx(\"div\", {\n    className: \"quickview__product-rating-title\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_RATING_LABEL\",\n    values: {\n      rating: product.rating,\n      reviews: product.reviews\n    }\n  }))), __jsx(\"div\", {\n    className: \"quickview__product-meta\"\n  }, __jsx(\"table\", null, __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"th\", null, __jsx(FormattedMessage, {\n    id: \"TABLE_SKU\"\n  })), __jsx(\"td\", null, product.sku)), product.brand && __jsx(React.Fragment, null, __jsx(\"tr\", null, __jsx(\"th\", null, __jsx(FormattedMessage, {\n    id: \"TABLE_BRAND\"\n  })), __jsx(\"td\", null, __jsx(AppLink, {\n    href: url.brand(product.brand)\n  }, product.brand.name))), __jsx(\"tr\", null, __jsx(\"th\", null, __jsx(FormattedMessage, {\n    id: \"TABLE_COUNTRY\"\n  })), __jsx(\"td\", null, __jsx(FormattedMessage, {\n    id: \"COUNTRY_NAME_\".concat(product.brand.country)\n  })))), __jsx(\"tr\", null, __jsx(\"th\", null, __jsx(FormattedMessage, {\n    id: \"TABLE_PART_NUMBER\"\n  })), __jsx(\"td\", null, product.partNumber))))), product.excerpt && __jsx(\"div\", {\n    className: \"quickview__product-description\"\n  }, product.excerpt), __jsx(\"div\", {\n    className: \"quickview__product-prices-stock\"\n  }, __jsx(\"div\", {\n    className: \"quickview__product-prices\"\n  }, product.compareAtPrice !== null && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"quickview__product-price quickview__product-price--old\"\n  }, __jsx(CurrencyFormat, {\n    value: product.compareAtPrice\n  })), __jsx(\"div\", {\n    className: \"quickview__product-price quickview__product-price--new\"\n  }, __jsx(CurrencyFormat, {\n    value: product.price\n  }))), product.compareAtPrice === null && __jsx(\"div\", {\n    className: \"quickview__product-price quickview__product-price--current\"\n  }, __jsx(CurrencyFormat, {\n    value: product.price\n  }))), __jsx(StockStatusBadge, {\n    className: \"quickview__product-stock\",\n    stock: product.stock\n  })), __jsx(ProductForm, {\n    options: product.options,\n    className: \"quickview__product-form\",\n    namespace: \"options\"\n  }), __jsx(\"div\", {\n    className: \"quickview__product-actions\"\n  }, __jsx(\"div\", {\n    className: \"quickview__product-actions-item quickview__product-actions-item--quantity\"\n  }, __jsx(Controller, {\n    name: \"quantity\",\n    rules: {\n      required: true\n    },\n    render: function render(_ref) {\n      var value = _ref.value,\n          onChange = _ref.onChange,\n          onBlur = _ref.onBlur;\n      return __jsx(InputNumber, {\n        min: 1,\n        value: value,\n        onChange: onChange,\n        onBlur: onBlur\n      });\n    }\n  })), __jsx(\"div\", {\n    className: \"quickview__product-actions-item quickview__product-actions-item--addtocart\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: classNames('btn', 'btn-primary', 'btn-block', {\n      'btn-loading': productForm.submitInProgress\n    })\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_ADD_TO_CART\"\n  }))), __jsx(AsyncAction, {\n    action: function action() {\n      return wishlistAddItem(product);\n    },\n    render: function render(_ref2) {\n      var run = _ref2.run,\n          loading = _ref2.loading;\n      return __jsx(\"div\", {\n        className: \"quickview__product-actions-item quickview__product-actions-item--wishlist\"\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: classNames('btn btn-muted btn-icon', {\n          'btn-loading': loading\n        }),\n        onClick: run\n      }, __jsx(Wishlist16Svg, null)));\n    }\n  }), __jsx(AsyncAction, {\n    action: function action() {\n      return compareAddItem(product);\n    },\n    render: function render(_ref3) {\n      var run = _ref3.run,\n          loading = _ref3.loading;\n      return __jsx(\"div\", {\n        className: \"quickview__product-actions-item quickview__product-actions-item--compare\"\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: classNames('btn btn-muted btn-icon', {\n          'btn-loading': loading\n        }),\n        onClick: run\n      }, __jsx(Compare16Svg, null)));\n    }\n  })));\n\n  return __jsx(Modal, {\n    isOpen: quickview.open,\n    toggle: toggle,\n    centered: true,\n    className: \"quickview\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"quickview__close\",\n    onClick: quickviewClose\n  }, __jsx(Cross12Svg, null)), __jsx(FormProvider, productForm.methods, __jsx(\"form\", {\n    onSubmit: productForm.submit,\n    className: \"quickview__body\"\n  }, __jsx(ProductGallery, {\n    className: \"quickview__gallery\",\n    layout: \"quickview\",\n    images: image\n  }), productTemplate)), __jsx(AppLink, {\n    href: url.product(product),\n    className: \"quickview__see-details\"\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_SEE_FULL_DETAILS\"\n  })));\n}\n\nexport default Quickview;","map":null,"metadata":{},"sourceType":"module"}