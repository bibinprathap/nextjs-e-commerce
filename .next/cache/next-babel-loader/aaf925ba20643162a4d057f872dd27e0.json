{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable import/prefer-default-export,class-methods-use-this */\n// application\nimport { AbstractFilterBuilder } from '~/fake-server/filters/abstract-filter-builder';\nimport { products as dbProducts } from '~/fake-server/database/products';\nexport var RangeFilterBuilder = /*#__PURE__*/function (_AbstractFilterBuilde) {\n  _inherits(RangeFilterBuilder, _AbstractFilterBuilde);\n\n  var _super = _createSuper(RangeFilterBuilder);\n\n  function RangeFilterBuilder() {\n    var _this;\n\n    _classCallCheck(this, RangeFilterBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"min\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"max\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"value\", void 0);\n\n    return _this;\n  }\n\n  _createClass(RangeFilterBuilder, [{\n    key: \"test\",\n    value: function test(product) {\n      var value = this.extractValue(product);\n      return value >= this.value[0] && value <= this.value[1];\n    }\n  }, {\n    key: \"parseValue\",\n    value: function parseValue(value) {\n      return value.split('-').map(function (x) {\n        return parseFloat(x);\n      });\n    }\n  }, {\n    key: \"makeItems\",\n    value: function makeItems(products, value) {\n      var _this2 = this;\n\n      this.max = dbProducts.reduce(function (acc, product) {\n        return Math.max(acc, _this2.extractValue(product));\n      }, 0);\n      this.min = dbProducts.reduce(function (acc, product) {\n        return Math.min(acc, _this2.extractValue(product));\n      }, this.max);\n      /** Calculates the number of digits for rounding. */\n\n      var digit = Math.max(Math.ceil(this.max).toString().length - 2, 1);\n      digit = Math.pow(10, digit);\n      this.max = Math.ceil(this.max / digit) * digit;\n      this.min = Math.floor(this.min / digit) * digit;\n      this.value = [this.min, this.max];\n\n      if (value) {\n        this.value = this.parseValue(value);\n      }\n    }\n  }, {\n    key: \"calc\",\n    value: function calc() {}\n  }, {\n    key: \"extractValue\",\n    value: function extractValue(product) {\n      if (this.slug === 'price') {\n        return product.price;\n      }\n\n      throw Error();\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      return {\n        type: 'range',\n        slug: this.slug,\n        name: this.name,\n        min: this.min,\n        max: this.max,\n        value: this.value\n      };\n    }\n  }]);\n\n  return RangeFilterBuilder;\n}(AbstractFilterBuilder);","map":null,"metadata":{},"sourceType":"module"}