{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React, { useEffect, useMemo, useState } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport AppImage from '~/components/shared/AppImage';\nimport AppLink from '~/components/shared/AppLink';\nimport BlockBrands from '~/components/blocks/BlockBrands';\nimport BlockHeader from '~/components/blocks/BlockHeader';\nimport BlockProductsCarousel from '~/components/blocks/BlockProductsCarousel';\nimport BlockSpace from '~/components/blocks/BlockSpace';\nimport PageTitle from '~/components/shared/PageTitle';\nimport url from '~/services/url';\nimport WidgetCategoriesList from '~/components/widgets/WidgetCategoriesList';\nimport WidgetProducts from '~/components/widgets/WidgetProducts';\nimport { getCategoryPath } from '~/services/utils';\nimport { shopApi } from '~/api';\nimport { useDeferredData } from '~/services/hooks';\n\nfunction ShopPageCategory(props) {\n  const intl = useIntl();\n  const {\n    layout,\n    sidebarPosition = 'start',\n    category\n  } = props;\n  let {\n    subcategories\n  } = props;\n  const hasSidebar = layout.endsWith('-sidebar');\n  const {\n    0: brands,\n    1: setBrands\n  } = useState([]);\n  const {\n    0: latestProducts,\n    1: setLatestProducts\n  } = useState([]);\n\n  if (category && subcategories === undefined) {\n    subcategories = category.children || [];\n  }\n\n  subcategories = subcategories || [];\n  const bestsellers = useDeferredData(() => shopApi.getPopularProducts(null, 8), []);\n  const featured = useDeferredData(() => shopApi.getFeaturedProducts(null, 8), []);\n  useEffect(() => {\n    let canceled = false;\n    shopApi.getBrands({\n      limit: (hasSidebar ? 7 : 8) * 2\n    }).then(result => {\n      if (canceled) {\n        return;\n      }\n\n      setBrands(result);\n    });\n\n    if (hasSidebar) {\n      shopApi.getLatestProducts(5).then(result => {\n        if (canceled) {\n          return;\n        }\n\n        setLatestProducts(result);\n      });\n    } else {\n      setLatestProducts([]);\n    }\n\n    return () => {\n      canceled = true;\n    };\n  }, [hasSidebar]);\n  const pageTitle = useMemo(() => category ? category.name : intl.formatMessage({\n    id: 'HEADER_SHOP'\n  }), [category, intl]);\n  const breadcrumb = useMemo(() => [{\n    title: intl.formatMessage({\n      id: 'LINK_HOME'\n    }),\n    url: url.home()\n  }, {\n    title: intl.formatMessage({\n      id: 'LINK_SHOP'\n    }),\n    url: url.shop()\n  }, ...getCategoryPath(category).map(x => ({\n    title: x.name,\n    url: url.category(x)\n  }))], [category, intl]);\n  let sidebar = null;\n\n  if (hasSidebar) {\n    sidebar = __jsx(\"div\", {\n      className: \"block-split__item block-split__item-sidebar col-auto\"\n    }, subcategories.length > 0 && __jsx(WidgetCategoriesList, {\n      categories: subcategories\n    }), __jsx(WidgetProducts, {\n      widgetTitle: intl.formatMessage({\n        id: 'HEADER_LATEST_PRODUCTS'\n      }),\n      products: latestProducts\n    }));\n  }\n\n  const subcategoriesTemplate = subcategories.length === 0 ? null : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"block\"\n  }, __jsx(\"div\", {\n    className: `categories-list categories-list--layout--${layout}`\n  }, __jsx(\"ul\", {\n    className: \"categories-list__body\"\n  }, subcategories.map(subcategory => __jsx(React.Fragment, {\n    key: subcategory.id\n  }, __jsx(\"li\", {\n    className: classNames('categories-list__item', {\n      'categories-list__item--has-image': subcategory.image\n    })\n  }, __jsx(AppLink, {\n    href: url.category(subcategory)\n  }, subcategory.image && __jsx(\"div\", {\n    className: \"image image--type--category\"\n  }, __jsx(\"div\", {\n    className: \"image__body\"\n  }, __jsx(AppImage, {\n    className: \"image__tag\",\n    src: subcategory.image,\n    alt: subcategory.name\n  }))), __jsx(\"div\", {\n    className: \"categories-list__item-name\"\n  }, subcategory.name)), typeof subcategory.items === 'number' && __jsx(\"div\", {\n    className: \"categories-list__item-products\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_PRODUCTS_COUNT\",\n    values: {\n      count: subcategory.items\n    }\n  }))), __jsx(\"li\", {\n    className: \"categories-list__divider\"\n  })))))), __jsx(BlockSpace, {\n    layout: \"divider-nl\"\n  }));\n  return __jsx(React.Fragment, null, __jsx(PageTitle, null, pageTitle), __jsx(BlockHeader, {\n    pageTitle: pageTitle,\n    breadcrumb: breadcrumb\n  }), __jsx(\"div\", {\n    className: classNames('block', 'block-split', {\n      'block-split--has-sidebar': hasSidebar\n    })\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"block-split__row row no-gutters\"\n  }, hasSidebar && sidebarPosition === 'start' && sidebar, __jsx(\"div\", {\n    className: \"block-split__item block-split__item-content col-auto flex-grow-1\"\n  }, subcategoriesTemplate, __jsx(BlockProductsCarousel, {\n    blockTitle: intl.formatMessage({\n      id: 'HEADER_BESTSELLERS'\n    }),\n    layout: hasSidebar ? 'grid-4-sidebar' : 'grid-5',\n    products: bestsellers.data,\n    loading: bestsellers.isLoading\n  }), __jsx(BlockSpace, {\n    layout: \"divider-nl\"\n  }), __jsx(BlockProductsCarousel, {\n    blockTitle: intl.formatMessage({\n      id: 'HEADER_FEATURED_PRODUCTS'\n    }),\n    layout: hasSidebar ? 'horizontal-sidebar' : 'horizontal',\n    products: featured.data,\n    loading: featured.isLoading,\n    rows: 2\n  }), __jsx(BlockSpace, {\n    layout: \"divider-nl\"\n  }), __jsx(BlockBrands, {\n    layout: hasSidebar ? 'columns-7-sidebar' : 'columns-8-full',\n    brands: brands\n  })), hasSidebar && sidebarPosition === 'end' && sidebar))), __jsx(BlockSpace, {\n    layout: \"before-footer\"\n  }));\n}\n\nexport default ShopPageCategory;","map":null,"metadata":{},"sourceType":"module"}