{"ast":null,"code":"/* eslint-disable import/prefer-default-export,class-methods-use-this */\n// application\nimport { getFinalUrl } from '~/fake-server/utils';\nimport { getProductsListCache } from '~/fake-server/endpoints';\nimport { getClient } from './redis';\nexport class FakeShopApi {\n  async getProductsList(options = {}, filterValues = {}) {\n    const redis = await getClient();\n    const data = {\n      parem1: filterValues.model || filterValues.filter_model || filterValues.partsCategory || filterValues.filter_partsCategory || filterValues.filter_slug || filterValues.slug,\n      parem2: filterValues.engine || filterValues.filter_engine || null,\n      parem3: filterValues.origin || filterValues.filter_origin,\n      parem4: filterValues.makeCode || filterValues.filter_makeCode || filterValues.make,\n      param5: filterValues.page,\n      parem6: filterValues.limit\n    };\n    const slog = (data.parem1 || '') + (data.parem3 || '') + (data.parem4 || '');\n    let res;\n    const toDosCache = await redis.get(slog);\n\n    if (toDosCache !== null) {\n      res = JSON.parse(toDosCache);\n      console.log(res);\n    } else {\n      const reso = await fetch(getFinalUrl(\"Portal/searchproducttrade/\"), {\n        method: 'POST',\n        // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors',\n        // no-cors, *cors, same-origin\n        headers: {\n          'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n      });\n      res = await reso.json().then(res => {\n        if (!res.InnerException && res.length > 0) redis.set(slog, JSON.stringify(res));\n        return Promise.resolve(res); //filters: filters.map((x) => x.build()),\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    return getProductsListCache(options, res);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}