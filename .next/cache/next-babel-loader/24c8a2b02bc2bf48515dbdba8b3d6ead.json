{"ast":null,"code":"// react\nimport { useEffect, useRef, useState } from 'react';\n\nfunction AsyncAction(props) {\n  const {\n    action,\n    render\n  } = props;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const canceledRef = useRef(false);\n\n  const run = () => {\n    if (loading || !action) {\n      return;\n    }\n\n    setLoading(true);\n    action().then(() => {\n      if (canceledRef.current) {\n        return;\n      }\n\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => () => {\n    canceledRef.current = true;\n  }, [canceledRef]);\n\n  if (render) {\n    return render({\n      run,\n      loading\n    });\n  }\n\n  return null;\n}\n\nexport default AsyncAction;","map":null,"metadata":{},"sourceType":"module"}