{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames';\n\nfunction InputNumber(props) {\n  var size = props.size,\n      className = props.className,\n      onChange = props.onChange,\n      inputRef = props.inputRef,\n      otherProps = _objectWithoutProperties(props, [\"size\", \"className\", \"onChange\", \"inputRef\"]);\n\n  var _props$value = props.value,\n      value = _props$value === void 0 ? '' : _props$value,\n      _props$step = props.step,\n      step = _props$step === void 0 ? 1 : _props$step,\n      _props$min = props.min,\n      min = _props$min === void 0 ? null : _props$min,\n      _props$max = props.max,\n      max = _props$max === void 0 ? null : _props$max;\n\n  var change = function change(direction) {\n    var prevValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : value;\n    // noinspection SuspiciousTypeOfGuard\n    var newValue = typeof prevValue === 'string' ? parseFloat(prevValue) : prevValue;\n    newValue = (Number.isNaN(newValue) ? 0 : newValue) + step * direction;\n\n    if (max !== null) {\n      newValue = Math.min(max, newValue);\n    }\n\n    if (min !== null) {\n      newValue = Math.max(min, newValue);\n    }\n\n    if (newValue !== prevValue && onChange) {\n      onChange(newValue);\n    }\n\n    return newValue;\n  };\n\n  var changeByTimer = function changeByTimer(direction) {\n    var prevValue = value;\n    var interval;\n    var timer = setTimeout(function () {\n      interval = setInterval(function () {\n        prevValue = change(direction, prevValue);\n      }, 50);\n    }, 300);\n\n    var documentMouseUp = function documentMouseUp() {\n      clearTimeout(timer);\n      clearInterval(interval);\n      document.removeEventListener('mouseup', documentMouseUp, false);\n    };\n\n    document.addEventListener('mouseup', documentMouseUp, false);\n  };\n\n  var handleAddMouseDown = function handleAddMouseDown() {\n    change(1);\n    changeByTimer(1);\n  };\n\n  var handleSubMouseDown = function handleSubMouseDown() {\n    change(-1);\n    changeByTimer(-1);\n  };\n\n  var handleChange = function handleChange(event) {\n    if (onChange) {\n      if (event.target.value.trim() === '') {\n        onChange('');\n      } else {\n        var _value = parseFloat(event.target.value);\n\n        onChange(Number.isNaN(_value) ? min || 0 : _value);\n      }\n    }\n  };\n\n  var classes = classNames('input-number', className);\n  var formControlClasses = classNames('form-control', 'input-number__input', {\n    'form-control-sm': size === 'sm',\n    'form-control-lg': size === 'lg'\n  });\n  return __jsx(\"div\", {\n    className: classes\n  }, __jsx(\"input\", _extends({\n    className: formControlClasses,\n    type: \"number\",\n    onChange: handleChange,\n    ref: inputRef\n  }, otherProps)), __jsx(\"div\", {\n    className: \"input-number__add\",\n    onMouseDown: handleAddMouseDown\n  }), __jsx(\"div\", {\n    className: \"input-number__sub\",\n    onMouseDown: handleSubMouseDown\n  }));\n}\n\nexport default InputNumber;","map":null,"metadata":{},"sourceType":"module"}