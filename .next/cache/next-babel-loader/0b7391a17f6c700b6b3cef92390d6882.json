{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// react\nimport React, { useEffect, useMemo } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport queryString from 'query-string';\nimport { useIntl } from 'react-intl'; // application\n\nimport BlockHeader from '~/components/blocks/BlockHeader';\nimport BlockSpace from '~/components/blocks/BlockSpace';\nimport ProductsView from '~/components/shop/ProductsView';\nimport ShopSidebar from '~/components/shop/ShopSidebar';\nimport url from '~/services/url';\nimport { baseUrl, getCategoryParents } from '~/services/utils';\nimport { buildQuery } from '~/store/shop/shopHelpers';\nimport { CurrentVehicleScopeProvider } from '~/services/current-vehicle';\nimport { removePrefix } from '~/services/i18n/utils';\nimport { SidebarProvider } from '~/services/sidebar';\nimport { useAppRouter } from '~/services/router';\nimport { useShop } from '~/store/shop/shopHooks';\n\nfunction ShopPageShop(props) {\n  const {\n    layout,\n    gridLayout,\n    sidebarPosition = 'start',\n    title,\n    description\n  } = props;\n  const intl = useIntl();\n  const router = useAppRouter();\n  const shopState = useShop(); // Replace current url.\n\n  useEffect(() => {\n    const query = buildQuery(shopState.options, shopState.filters);\n    const href = queryString.stringifyUrl(_objectSpread(_objectSpread({}, queryString.parseUrl(router.asPath)), {}, {\n      query: queryString.parse(query)\n    }), {\n      encode: false\n    });\n    router.replace({\n      pathname: router.pathname,\n      query: {\n        slug: router.query.slug\n      }\n    }, removePrefix(href), {\n      shallow: true\n    }).then(() => {\n      // This is necessary for the \"History API\" to work.\n      window.history.replaceState(_objectSpread(_objectSpread({}, window.history.state), {}, {\n        options: _objectSpread(_objectSpread({}, window.history.state.options), {}, {\n          shallow: false\n        })\n      }), '', baseUrl(href));\n    });\n  }, [shopState.options, shopState.filters]);\n  const hasSidebar = ['grid-3-sidebar', 'grid-4-sidebar'].includes(gridLayout);\n  const offCanvasSidebar = ['grid-4-full', 'grid-5-full', 'grid-6-full'].includes(gridLayout) ? 'always' : 'mobile';\n  const pageHeader = useMemo(() => {\n    let pageTitle = title ? title : intl.formatMessage({\n      id: 'HEADER_SHOP'\n    });\n    const breadcrumb = [{\n      title: intl.formatMessage({\n        id: 'LINK_HOME'\n      }),\n      url: url.home()\n    }, {\n      title: intl.formatMessage({\n        id: 'LINK_SHOP'\n      }),\n      url: url.shop()\n    }];\n\n    if (shopState.category) {\n      getCategoryParents(shopState.category).forEach(parent => {\n        breadcrumb.push({\n          title: parent.name,\n          url: url.category(parent)\n        });\n      });\n      breadcrumb.push({\n        title: shopState.category.name,\n        url: url.category(shopState.category)\n      });\n      pageTitle = shopState.category.name;\n    }\n\n    return __jsx(BlockHeader, {\n      pageTitle: pageTitle,\n      breadcrumb: breadcrumb\n    });\n  }, [intl, shopState.category]);\n\n  if (shopState.categoryIsLoading || shopState.productsListIsLoading && !shopState.productsList) {\n    return null;\n  }\n\n  const sidebar = __jsx(ShopSidebar, {\n    offcanvas: offCanvasSidebar\n  });\n\n  const blockSplitClasses = classNames('block-split', {\n    'block-split--has-sidebar': hasSidebar\n  });\n  return __jsx(React.Fragment, null, __jsx(SidebarProvider, null, __jsx(CurrentVehicleScopeProvider, null, pageHeader, __jsx(\"div\", {\n    className: blockSplitClasses\n  }, offCanvasSidebar === 'always' && sidebar, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"block-split__row row no-gutters\"\n  }, sidebarPosition === 'start' && hasSidebar && __jsx(\"div\", {\n    className: \"block-split__item block-split__item-sidebar col-auto\"\n  }, sidebar), __jsx(\"div\", {\n    className: \"block-split__item block-split__item-content col-auto flex-grow-1\"\n  }, __jsx(\"div\", {\n    className: \"block\"\n  }, __jsx(ProductsView, {\n    layout: layout,\n    gridLayout: gridLayout,\n    offCanvasSidebar: offCanvasSidebar\n  }))), sidebarPosition === 'end' && hasSidebar && __jsx(\"div\", {\n    className: \"block-split__item block-split__item-sidebar col-auto\"\n  }, sidebar)))), __jsx(\"div\", {\n    className: \"block-header block-header--has-title\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"block-header__body\"\n  }, description && __jsx(\"h4\", {\n    className: \"block-header__new\"\n  }, description)))), __jsx(BlockSpace, {\n    layout: \"before-footer\"\n  }))));\n}\n\nexport default ShopPageShop;","map":null,"metadata":{},"sourceType":"module"}