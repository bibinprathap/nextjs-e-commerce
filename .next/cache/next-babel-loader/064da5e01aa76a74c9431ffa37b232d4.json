{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React, { useCallback } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl'; // application\n\nimport AppImage from '~/components/shared/AppImage';\nimport AppLink from '~/components/shared/AppLink';\nimport url from '~/services/url';\nimport { useSignInForm } from '~/services/forms/sign-in';\nimport { useUser, useUserSignOut } from '~/store/user/userHooks';\nimport { validateEmail } from '~/services/validators';\n\nfunction AccountMenu(props) {\n  var _signInForm$errors$em, _signInForm$errors$em2, _signInForm$errors$pa;\n\n  var onCloseMenu = props.onCloseMenu;\n  var intl = useIntl();\n  var user = useUser();\n  var userSignOut = useUserSignOut();\n  var signInForm = useSignInForm({\n    onSuccess: useCallback(function () {\n      if (onCloseMenu) {\n        onCloseMenu();\n      }\n    }, [onCloseMenu])\n  });\n\n  var onLogOutButtonClick = function onLogOutButtonClick() {\n    userSignOut().then(function () {\n      if (onCloseMenu) {\n        onCloseMenu();\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"account-menu\",\n    onSubmit: signInForm.submit\n  }, user === null && __jsx(\"form\", {\n    className: \"account-menu__form\"\n  }, __jsx(\"div\", {\n    className: \"account-menu__form-title\"\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_LOGIN_TO_YOUR_ACCOUNT\"\n  })), signInForm.serverError && __jsx(\"div\", {\n    className: \"alert alert-xs alert-danger mt-n2\"\n  }, __jsx(FormattedMessage, {\n    id: signInForm.serverError\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"header-signin-email\",\n    className: \"sr-only\"\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_EMAIL_ADDRESS_LABEL\"\n  })), __jsx(\"input\", {\n    id: \"header-signin-email\",\n    type: \"email\",\n    className: classNames('form-control', 'form-control-sm', {\n      'is-invalid': signInForm.errors.email\n    }),\n    placeholder: \"customer@example.com\",\n    name: \"email\",\n    ref: signInForm.register({\n      required: true,\n      validate: {\n        email: validateEmail\n      }\n    })\n  }), __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, ((_signInForm$errors$em = signInForm.errors.email) === null || _signInForm$errors$em === void 0 ? void 0 : _signInForm$errors$em.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\"\n  }), ((_signInForm$errors$em2 = signInForm.errors.email) === null || _signInForm$errors$em2 === void 0 ? void 0 : _signInForm$errors$em2.type) === 'email' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_INCORRECT_EMAIL\"\n  }))), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"header-signin-password\",\n    className: \"sr-only\"\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_PASSWORD_LABEL\"\n  })), __jsx(\"div\", {\n    className: classNames('account-menu__form-forgot', {\n      'is-invalid': signInForm.errors.password\n    })\n  }, __jsx(\"input\", {\n    id: \"header-signin-password\",\n    type: \"password\",\n    className: classNames('form-control', 'form-control-sm', {\n      'is-invalid': signInForm.errors.password\n    }),\n    placeholder: intl.formatMessage({\n      id: 'INPUT_PASSWORD_PLACEHOLDER'\n    }),\n    name: \"password\",\n    ref: signInForm.register({\n      required: true\n    })\n  }), __jsx(AppLink, {\n    href: url.passwordRecovery(),\n    className: \"account-menu__form-forgot-link\"\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_FORGOT\"\n  }))), __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, ((_signInForm$errors$pa = signInForm.errors.password) === null || _signInForm$errors$pa === void 0 ? void 0 : _signInForm$errors$pa.type) === 'required' && __jsx(FormattedMessage, {\n    id: \"ERROR_FORM_REQUIRED\"\n  }))), __jsx(\"div\", {\n    className: \"form-group account-menu__form-button\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: classNames('btn', 'btn-primary', 'btn-sm', {\n      'btn-loading': signInForm.submitInProgress\n    })\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_LOGIN\"\n  }))), __jsx(\"div\", {\n    className: \"account-menu__form-link\"\n  }, __jsx(AppLink, {\n    href: url.signUp(),\n    onClick: onCloseMenu\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_CREATE_ACCOUNT\"\n  })))), user !== null && __jsx(React.Fragment, null, __jsx(AppLink, {\n    href: url.accountDashboard(),\n    className: \"account-menu__user\",\n    onClick: onCloseMenu\n  }, __jsx(\"div\", {\n    className: \"account-menu__user-avatar\"\n  }, __jsx(AppImage, {\n    src: user.avatar\n  })), __jsx(\"div\", {\n    className: \" account-menu__user-info\"\n  }, __jsx(\"div\", {\n    className: \" account-menu__user-name\"\n  }, \"\".concat(user.firstName, \" \").concat(user.lastName)), __jsx(\"div\", {\n    className: \" account-menu__user-email\"\n  }, user.email))), __jsx(\"div\", {\n    className: \"account-menu__divider\"\n  }), __jsx(\"ul\", {\n    className: \"account-menu__links\"\n  }, __jsx(\"li\", null, __jsx(AppLink, {\n    href: url.accountDashboard(),\n    onClick: onCloseMenu\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_ACCOUNT_DASHBOARD\"\n  }))), __jsx(\"li\", null, __jsx(AppLink, {\n    href: url.accountGarage(),\n    onClick: onCloseMenu\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_ACCOUNT_GARAGE\"\n  }))), __jsx(\"li\", null, __jsx(AppLink, {\n    href: url.accountProfile(),\n    onClick: onCloseMenu\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_ACCOUNT_PROFILE\"\n  }))), __jsx(\"li\", null, __jsx(AppLink, {\n    href: url.accountOrders(),\n    onClick: onCloseMenu\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_ACCOUNT_ORDERS\"\n  }))), __jsx(\"li\", null, __jsx(AppLink, {\n    href: url.accountAddresses(),\n    onClick: onCloseMenu\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_ACCOUNT_ADDRESSES\"\n  })))), __jsx(\"div\", {\n    className: \"account-menu__divider\"\n  }), __jsx(\"ul\", {\n    className: \"account-menu__links\"\n  }, __jsx(\"li\", null, __jsx(\"button\", {\n    type: \"button\",\n    onClick: onLogOutButtonClick\n  }, __jsx(FormattedMessage, {\n    id: \"LINK_ACCOUNT_LOGOUT\"\n  }))))));\n}\n\nexport default AccountMenu;","map":null,"metadata":{},"sourceType":"module"}