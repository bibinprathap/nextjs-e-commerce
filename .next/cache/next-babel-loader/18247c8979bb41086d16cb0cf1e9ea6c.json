{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React, { useEffect, useMemo, useState } from 'react'; // third-party\n\nimport { FormattedMessage } from 'react-intl'; // application\n\nimport WidgetAboutUs from '~/components/widgets/WidgetAboutUs';\nimport WidgetCategories from '~/components/widgets/WidgetCategories';\nimport WidgetComments from '~/components/widgets/WidgetComments';\nimport WidgetNewsletter from '~/components/widgets/WidgetNewsletter';\nimport WidgetPosts from '~/components/widgets/WidgetPosts';\nimport WidgetSearch from '~/components/widgets/WidgetSearch';\nimport WidgetTags from '~/components/widgets/WidgetTags';\nimport { blogApi } from '~/api';\n// data\nimport dataBlogPosts from '~/data/blogPosts';\nimport dataBlogWidgetComments from '~/data/blogWidgetComments';\n\nfunction BlogSidebar() {\n  const {\n    0: categories,\n    1: setCategories\n  } = useState([]);\n  const posts = useMemo(() => dataBlogPosts.slice(0, 4), []);\n  const comments = useMemo(() => dataBlogWidgetComments.slice(0, 3), []);\n  useEffect(() => {\n    let canceled = false;\n    blogApi.getCategories({\n      depth: 1\n    }).then(result => {\n      if (canceled) {\n        return;\n      }\n\n      setCategories(result);\n    });\n    return () => {\n      canceled = true;\n    };\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(WidgetSearch, null), __jsx(WidgetAboutUs, null), __jsx(WidgetCategories, {\n    widgetTitle: __jsx(FormattedMessage, {\n      id: \"HEADER_CATEGORIES\"\n    }),\n    categories: categories\n  }), __jsx(WidgetPosts, {\n    widgetTitle: \"Latest Posts\",\n    posts: posts\n  }), __jsx(WidgetNewsletter, null), __jsx(WidgetComments, {\n    widgetTitle: \"Latest Comments\",\n    comments: comments\n  }), __jsx(WidgetTags, {\n    widgetTitle: \"Tags Cloud\"\n  }));\n}\n\nexport default BlogSidebar;","map":null,"metadata":{},"sourceType":"module"}