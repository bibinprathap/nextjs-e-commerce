{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n// react\nimport React, { useCallback, useEffect, useState } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal } from 'reactstrap'; // application\n\nimport AsyncAction from '~/components/shared/AsyncAction';\nimport RadioButton from '~/components/shared/RadioButton';\nimport VehicleForm from '~/components/shared/VehicleForm';\nimport { Cross12Svg, RecycleBin16Svg } from '~/svg';\nimport { useGarageAddItem, useGarageRemoveItem, useUserVehicles } from '~/store/garage/garageHooks';\n\nfunction VehiclePickerModal(props) {\n  var _props$value = props.value,\n      value = _props$value === void 0 ? null : _props$value,\n      _props$isOpen = props.isOpen,\n      isOpen = _props$isOpen === void 0 ? false : _props$isOpen,\n      onClose = props.onClose,\n      onSelect = props.onSelect;\n  var vehicles = useUserVehicles();\n  var garageRemoveItem = useGarageRemoveItem();\n  var garageAddItem = useGarageAddItem();\n\n  var _useState = useState('list'),\n      currentPanel = _useState[0],\n      setCurrentPanel = _useState[1];\n\n  var _useState2 = useState(null),\n      innerValue = _useState2[0],\n      setInnerValue = _useState2[1];\n\n  var _useState3 = useState(null),\n      controlValue = _useState3[0],\n      setControlValue = _useState3[1];\n\n  var onSelectClick = function onSelectClick() {\n    if (onSelect) {\n      onSelect(innerValue);\n    }\n\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  var toggle = useCallback(function () {\n    if (isOpen && onClose) {\n      onClose();\n    }\n  }, [isOpen, onClose]);\n\n  var onAddVehicleClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (controlValue) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              _context.next = 4;\n              return garageAddItem(controlValue.id);\n\n            case 4:\n              setCurrentPanel('list');\n              setInnerValue(controlValue);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onAddVehicleClick() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (isOpen) {\n      setCurrentPanel('list');\n      setInnerValue(value);\n    }\n  }, [isOpen, value]);\n  return __jsx(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    centered: true,\n    className: \"vehicle-picker-modal\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"vehicle-picker-modal__close\",\n    onClick: onClose\n  }, __jsx(Cross12Svg, null)), __jsx(\"div\", {\n    className: classNames('vehicle-picker-modal__panel', {\n      'vehicle-picker-modal__panel--active': currentPanel === 'list' && vehicles.length !== 0\n    })\n  }, __jsx(\"div\", {\n    className: \"vehicle-picker-modal__title card-title\"\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_SELECT_VEHICLE\"\n  })), __jsx(\"div\", {\n    className: \"vehicle-picker-modal__text\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_SELECT_VEHICLE_TO_FIND_EXACT_FIT_PARTS\"\n  })), __jsx(\"div\", {\n    className: \"vehicles-list\"\n  }, __jsx(\"div\", {\n    className: \"vehicles-list__body\"\n  }, __jsx(\"label\", {\n    className: \"vehicles-list__item\"\n  }, __jsx(RadioButton, {\n    className: \"vehicles-list__item-radio\",\n    checked: innerValue === null,\n    onChange: function onChange() {\n      return setInnerValue(null);\n    }\n  }), __jsx(\"span\", {\n    className: \"vehicles-list__item-info\"\n  }, __jsx(\"span\", {\n    className: \"vehicles-list__item-name\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_ALL_VEHICLES\"\n  })))), vehicles.map(function (vehicle, vehicleIdx) {\n    return (// eslint-disable-next-line jsx-a11y/label-has-associated-control\n      __jsx(\"label\", {\n        key: vehicleIdx,\n        className: \"vehicles-list__item\"\n      }, __jsx(RadioButton, {\n        className: \"vehicles-list__item-radio\",\n        checked: innerValue !== null && innerValue.id === vehicle.id,\n        onChange: function onChange() {\n          return setInnerValue(vehicle);\n        }\n      }), __jsx(\"span\", {\n        className: \"vehicles-list__item-info\"\n      }, __jsx(\"span\", {\n        className: \"vehicles-list__item-name\"\n      }, \"\".concat(vehicle.year, \" \").concat(vehicle.make, \" \").concat(vehicle.model)), __jsx(\"span\", {\n        className: \"vehicles-list__item-details\"\n      }, __jsx(FormattedMessage, {\n        id: \"TEXT_VEHICLE_ENGINE\",\n        values: {\n          engine: vehicle.engine\n        }\n      }))), __jsx(AsyncAction, {\n        action: function action() {\n          return garageRemoveItem(vehicle.id);\n        },\n        render: function render(_ref2) {\n          var run = _ref2.run,\n              loading = _ref2.loading;\n          return __jsx(\"button\", {\n            type: \"button\",\n            className: classNames('vehicles-list__item-remove', {\n              'vehicles-list__item-remove--loading': loading\n            }),\n            onClick: run\n          }, __jsx(RecycleBin16Svg, null));\n        }\n      }))\n    );\n  }))), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-secondary btn-block mt-2 vehicle-picker-modal__add-button\",\n    onClick: function onClick() {\n      return setCurrentPanel('form');\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_ADD_VEHICLE_LONG\"\n  })), __jsx(\"div\", {\n    className: \"vehicle-picker-modal__actions\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-secondary\",\n    onClick: onClose\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_CANCEL\"\n  })), __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-primary\",\n    onClick: onSelectClick\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_SELECT_VEHICLE\"\n  })))), __jsx(\"div\", {\n    className: classNames('vehicle-picker-modal__panel', {\n      'vehicle-picker-modal__panel--active': currentPanel === 'form' || vehicles.length === 0\n    })\n  }, __jsx(\"div\", {\n    className: \"vehicle-picker-modal__title card-title\"\n  }, __jsx(FormattedMessage, {\n    id: \"HEADER_ADD_VEHICLE\"\n  })), __jsx(VehicleForm, {\n    location: \"modal\",\n    onVehicleChange: setControlValue\n  }), __jsx(\"div\", {\n    className: \"vehicle-picker-modal__actions\"\n  }, vehicles.length !== 0 && __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-secondary\",\n    onClick: function onClick() {\n      return setCurrentPanel('list');\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_BACK_TO_LIST\"\n  })), __jsx(AsyncAction, {\n    action: onAddVehicleClick,\n    render: function render(_ref3) {\n      var run = _ref3.run,\n          loading = _ref3.loading;\n      return __jsx(\"button\", {\n        type: \"button\",\n        className: classNames('btn', 'btn-sm', 'btn-primary', {\n          'btn-loading': loading\n        }),\n        disabled: controlValue === null,\n        onClick: run\n      }, __jsx(FormattedMessage, {\n        id: \"BUTTON_ADD_VEHICLE\"\n      }));\n    }\n  }))));\n}\n\nexport default VehiclePickerModal;","map":null,"metadata":{},"sourceType":"module"}