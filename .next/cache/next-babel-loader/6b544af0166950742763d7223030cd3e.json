{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n// react\nimport React, { useCallback, useContext, useMemo, useState } from 'react'; // application\n\nimport { useGarageCurrent, useGarageSetCurrent } from '~/store/garage/garageHooks';\nvar CurrentVehicleContext = React.createContext([null, function () {}]);\nexport function useCurrentVehicle() {\n  return useContext(CurrentVehicleContext);\n}\nexport function CurrentVehicleGarageProvider(props) {\n  var children = props.children;\n  var vehicle = useGarageCurrent();\n  var garageSetCurrent = useGarageSetCurrent();\n  var setVehicle = useCallback(function (vehicle) {\n    garageSetCurrent((vehicle === null || vehicle === void 0 ? void 0 : vehicle.id) || null);\n  }, [garageSetCurrent]);\n  var value = useMemo(function () {\n    return [vehicle, setVehicle];\n  }, [vehicle, setVehicle]);\n  return __jsx(CurrentVehicleContext.Provider, {\n    value: value\n  }, children);\n}\nexport function CurrentVehicleScopeProvider(props) {\n  var children = props.children;\n\n  var _useCurrentVehicle = useCurrentVehicle(),\n      _useCurrentVehicle2 = _slicedToArray(_useCurrentVehicle, 1),\n      initialVehicle = _useCurrentVehicle2[0];\n\n  var _useState = useState(initialVehicle),\n      vehicle = _useState[0],\n      setVehicle = _useState[1];\n\n  var value = useMemo(function () {\n    return [vehicle, setVehicle];\n  }, [vehicle, setVehicle]);\n  return __jsx(CurrentVehicleContext.Provider, {\n    value: value\n  }, children);\n}","map":null,"metadata":{},"sourceType":"module"}