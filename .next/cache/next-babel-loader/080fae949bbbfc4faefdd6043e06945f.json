{"ast":null,"code":"// third-party\nimport { toast } from 'react-toastify'; // application\n\nimport { globalIntl } from '~/services/i18n/global-intl';\nimport { COMPARE_ADD_ITEM, COMPARE_CLEAR, COMPARE_REMOVE_ITEM } from '~/store/compare/compareActionTypes';\nexport function compareAddItemSuccess(product) {\n  var _globalIntl;\n\n  toast.success((_globalIntl = globalIntl()) === null || _globalIntl === void 0 ? void 0 : _globalIntl.formatMessage({\n    id: 'TEXT_TOAST_PRODUCT_ADDED_TO_COMPARE'\n  }, {\n    productName: product.name\n  }));\n  return {\n    type: COMPARE_ADD_ITEM,\n    product\n  };\n}\nexport function compareRemoveItemSuccess(productId) {\n  return {\n    type: COMPARE_REMOVE_ITEM,\n    productId\n  };\n}\nexport function compareClearSuccess() {\n  return {\n    type: COMPARE_CLEAR\n  };\n}\nexport function compareAddItem(product) {\n  // sending request to server, timeout is used as a stub\n  return dispatch => new Promise(resolve => {\n    setTimeout(() => {\n      dispatch(compareAddItemSuccess(product));\n      resolve();\n    }, 250);\n  });\n}\nexport function compareRemoveItem(productId) {\n  // sending request to server, timeout is used as a stub\n  return dispatch => new Promise(resolve => {\n    setTimeout(() => {\n      dispatch(compareRemoveItemSuccess(productId));\n      resolve();\n    }, 250);\n  });\n}\nexport function compareClear() {\n  // sending request to server, timeout is used as a stub\n  return dispatch => new Promise(resolve => {\n    setTimeout(() => {\n      dispatch(compareClearSuccess());\n      resolve();\n    }, 250);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}