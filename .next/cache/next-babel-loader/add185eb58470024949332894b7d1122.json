{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React, { useEffect, useState } from 'react'; // third-party\n\nimport { FormattedMessage } from 'react-intl'; // application\n\nimport Checkbox from '~/components/shared/Checkbox';\nimport VehiclePickerModal from '~/components/shared/VehiclePickerModal';\nimport { useCurrentVehicle } from '~/services/current-vehicle';\n\nfunction FilterVehicle(props) {\n  const {\n    options,\n    value,\n    onChangeValue\n  } = props;\n  const [currentVehicle, setCurrentVehicle] = useCurrentVehicle();\n  const {\n    0: vehiclePickerIsOpen,\n    1: setVehiclePickerIsOpen\n  } = useState(false);\n  const {\n    0: initialVehicle\n  } = useState(options.vehicle);\n\n  const updateValue = newValue => {\n    if (onChangeValue) {\n      onChangeValue({\n        filter: options,\n        value: newValue\n      });\n    }\n  };\n\n  const handleChange = event => {\n    if (event.target.checked && currentVehicle) {\n      updateValue(currentVehicle.id);\n    } else {\n      updateValue(null);\n    }\n  };\n\n  const showVehiclePicker = () => {\n    setVehiclePickerIsOpen(true);\n  };\n\n  const onVehiclePickerClose = () => {\n    setVehiclePickerIsOpen(false);\n  };\n\n  const onVehiclePickerSelect = selectedVehicle => {\n    setCurrentVehicle(selectedVehicle || null);\n\n    if (value !== null) {\n      updateValue((selectedVehicle === null || selectedVehicle === void 0 ? void 0 : selectedVehicle.id) || null);\n    }\n  };\n\n  useEffect(() => {\n    if (initialVehicle === null) {\n      return;\n    }\n\n    setTimeout(() => {\n      setCurrentVehicle(initialVehicle || null);\n    }, 0);\n  }, [setCurrentVehicle, initialVehicle]);\n  return __jsx(\"div\", {\n    className: \"filter-vehicle\"\n  }, __jsx(VehiclePickerModal, {\n    value: currentVehicle,\n    isOpen: vehiclePickerIsOpen,\n    onClose: onVehiclePickerClose,\n    onSelect: onVehiclePickerSelect\n  }), currentVehicle !== null && __jsx(\"ul\", {\n    className: \"filter-vehicle__list\"\n  }, __jsx(\"li\", {\n    className: \"filter-vehicle__item\"\n  }, __jsx(\"label\", {\n    className: \"filter-vehicle__item-label\"\n  }, __jsx(Checkbox, {\n    className: \"filter-list__input\",\n    checked: value !== null,\n    onChange: handleChange\n  }), __jsx(\"span\", {\n    className: \"filter-vehicle__item-title\"\n  }, __jsx(FormattedMessage, {\n    id: \"INPUT_ONLY_EXACT_FIT_PARTS_LABEL\"\n  })))), __jsx(\"li\", {\n    className: \"filter-vehicle__vehicle\"\n  }, __jsx(\"div\", {\n    className: \"filter-vehicle__vehicle-title\"\n  }, `${currentVehicle.year} ${currentVehicle.make} ${currentVehicle.model}`), __jsx(\"div\", {\n    className: \"filter-vehicle__vehicle-subtitle\"\n  }, currentVehicle.engine))), currentVehicle === null && __jsx(\"div\", {\n    className: \"filter-vehicle__empty\"\n  }, __jsx(FormattedMessage, {\n    id: \"TEXT_VEHICLE_FILTER_HELP\"\n  })), __jsx(\"div\", {\n    className: \"filter-vehicle__button\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-xs btn-secondary\",\n    onClick: showVehiclePicker\n  }, __jsx(FormattedMessage, {\n    id: \"BUTTON_SELECT_VEHICLE\"\n  }))));\n}\n\nexport default FilterVehicle;","map":null,"metadata":{},"sourceType":"module"}