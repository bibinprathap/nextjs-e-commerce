{"ast":null,"code":"var __jsx = React.createElement;\n// react\nimport React, { useCallback, useContext, useMemo, useState } from 'react'; // application\n\nimport { useGarageCurrent, useGarageSetCurrent } from '~/store/garage/garageHooks';\nconst CurrentVehicleContext = React.createContext([null, () => {}]);\nexport function useCurrentVehicle() {\n  return useContext(CurrentVehicleContext);\n}\nexport function CurrentVehicleGarageProvider(props) {\n  const {\n    children\n  } = props;\n  const vehicle = useGarageCurrent();\n  const garageSetCurrent = useGarageSetCurrent();\n  const setVehicle = useCallback(vehicle => {\n    garageSetCurrent((vehicle === null || vehicle === void 0 ? void 0 : vehicle.id) || null);\n  }, [garageSetCurrent]);\n  const value = useMemo(() => [vehicle, setVehicle], [vehicle, setVehicle]);\n  return __jsx(CurrentVehicleContext.Provider, {\n    value: value\n  }, children);\n}\nexport function CurrentVehicleScopeProvider(props) {\n  const {\n    children\n  } = props;\n  const [initialVehicle] = useCurrentVehicle();\n  const {\n    0: vehicle,\n    1: setVehicle\n  } = useState(initialVehicle);\n  const value = useMemo(() => [vehicle, setVehicle], [vehicle, setVehicle]);\n  return __jsx(CurrentVehicleContext.Provider, {\n    value: value\n  }, children);\n}","map":null,"metadata":{},"sourceType":"module"}